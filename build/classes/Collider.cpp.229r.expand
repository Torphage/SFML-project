
;; Function constexpr float std::abs(float) (_ZSt3absf, funcdef_no=869, decl_uid=17163, cgraph_uid=203, symbol_order=205)

constexpr float std::abs(float) (float __x)
{
  float D.84843;
  float _2;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _2 = ABS_EXPR <__x_1(D)>;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0> [0.00%]:
  return _2;
;;    succ:       EXIT

}



Partition map 

Partition 1 (__x_1(D) - 1 )
Partition 2 (_2 - 2 )
Partition 4 (_4(D) - 4 )


Partition map 

Partition 0 (__x_1(D) - 1 )
Partition 1 (_4(D) - 4 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (__x_1(D) - 1 )
Partition 1 (_4(D) - 4 )

After Coalescing:

Partition map 

Partition 0 (__x_1(D) - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_4(D) - 4 )

constexpr float std::abs(float) (float __x)
{
  float D.84843;
  float _2;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _2 = ABS_EXPR <__x_1(D)>;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0> [0.00%]:
  return _2;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _2 = ABS_EXPR <__x_1(D)>;

(insn 6 5 7 (set (reg:SF 89)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [5 __x+0 S4 A32])) "/usr/include/c++/7/bits/std_abs.h":75 -1
     (nil))

(insn 7 6 8 (set (reg:V4SF 90)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [5  S16 A128])) "/usr/include/c++/7/bits/std_abs.h":75 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))

(insn 8 7 0 (parallel [
            (set (reg:SF 87 [ _2 ])
                (abs:SF (reg:SF 89)))
            (use (reg:V4SF 90))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/std_abs.h":75 -1
     (expr_list:REG_EQUAL (abs:SF (reg:SF 89))
        (nil)))

;; Generating RTL for gimple basic block 3

;; <L0> [0.00%]:

(code_label 9 8 10 2 (nil) [0 uses])

(note 10 9 0 NOTE_INSN_BASIC_BLOCK)

;; return _2;

(insn 11 10 12 (set (reg:SF 88 [ <retval> ])
        (reg:SF 87 [ _2 ])) "/usr/include/c++/7/bits/std_abs.h":75 -1
     (nil))

(jump_insn 12 11 13 (set (pc)
        (label_ref 0)) "/usr/include/c++/7/bits/std_abs.h":75 -1
     (nil))

(barrier 13 12 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 12.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [5 __x+0 S4 A32])
        (reg:SF 21 xmm0 [ __x ])) "/usr/include/c++/7/bits/std_abs.h":75 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SF 89)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [5 __x+0 S4 A32])) "/usr/include/c++/7/bits/std_abs.h":75 -1
     (nil))
(insn 7 6 8 2 (set (reg:V4SF 90)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [5  S16 A128])) "/usr/include/c++/7/bits/std_abs.h":75 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 8 7 11 2 (parallel [
            (set (reg:SF 87 [ _2 ])
                (abs:SF (reg:SF 89)))
            (use (reg:V4SF 90))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/std_abs.h":75 -1
     (expr_list:REG_EQUAL (abs:SF (reg:SF 89))
        (nil)))
(insn 11 8 15 2 (set (reg:SF 88 [ <retval> ])
        (reg:SF 87 [ _2 ])) "/usr/include/c++/7/bits/std_abs.h":75 -1
     (nil))
(insn 15 11 16 2 (set (reg/i:SF 21 xmm0)
        (reg:SF 88 [ <retval> ])) "/usr/include/c++/7/bits/std_abs.h":75 -1
     (nil))
(insn 16 15 0 2 (use (reg/i:SF 21 xmm0)) "/usr/include/c++/7/bits/std_abs.h":75 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function CollisionBox::CollisionBox() (_ZN12CollisionBoxC2Ev, funcdef_no=3468, decl_uid=76508, cgraph_uid=908, symbol_order=913)

CollisionBox::CollisionBox() (struct CollisionBox * const this)
{
  int (*__vtbl_ptr_type) () * _1;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  _1 = &_ZTV12CollisionBox + 16;
  this_3(D)->_vptr.CollisionBox = _1;
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 3 (this_3(D) - 3 )


Partition map 

Partition 0 (this_3(D) - 3 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (this_3(D) - 3 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (this_3(D) - 3 )

CollisionBox::CollisionBox() (struct CollisionBox * const this)
{
  int (*__vtbl_ptr_type) () * _1;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  _1 = &_ZTV12CollisionBox + 16;
  this_3(D)->_vptr.CollisionBox = _1;
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; MEM[(struct  &)this_3(D)] ={v} {CLOBBER};

(nil)

;; _1 = &_ZTV12CollisionBox + 16;

(insn 6 5 0 (set (reg/f:DI 87 [ _1 ])
        (const:DI (plus:DI (symbol_ref/i:DI ("_ZTV12CollisionBox") [flags 0x2]  <var_decl 0x7f71b59ae240 _ZTV12CollisionBox>)
                (const_int 16 [0x10])))) "classes/Collider.cpp":6 -1
     (nil))

;; this_3(D)->_vptr.CollisionBox = _1;

(insn 7 6 8 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [9 this+0 S8 A64])) "classes/Collider.cpp":6 -1
     (nil))

(insn 8 7 0 (set (mem/f:DI (reg/f:DI 88) [2 this_3(D)->_vptr.CollisionBox+0 S8 A64])
        (reg/f:DI 87 [ _1 ])) "classes/Collider.cpp":6 -1
     (nil))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [9 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "classes/Collider.cpp":6 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 87 [ _1 ])
        (const:DI (plus:DI (symbol_ref/i:DI ("_ZTV12CollisionBox") [flags 0x2]  <var_decl 0x7f71b59ae240 _ZTV12CollisionBox>)
                (const_int 16 [0x10])))) "classes/Collider.cpp":6 -1
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [9 this+0 S8 A64])) "classes/Collider.cpp":6 -1
     (nil))
(insn 8 7 11 2 (set (mem/f:DI (reg/f:DI 88) [2 this_3(D)->_vptr.CollisionBox+0 S8 A64])
        (reg/f:DI 87 [ _1 ])) "classes/Collider.cpp":6 -1
     (nil))
(insn 11 8 0 2 (const_int 0 [0]) "classes/Collider.cpp":8 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function CollisionBox::~CollisionBox() (_ZN12CollisionBoxD2Ev, funcdef_no=3471, decl_uid=76513, cgraph_uid=911, symbol_order=916)

CollisionBox::~CollisionBox() (struct CollisionBox * const this)
{
  int (*__vtbl_ptr_type) () * _1;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = &_ZTV12CollisionBox + 16;
  this_3(D)->_vptr.CollisionBox = _1;
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 3 (this_3(D) - 3 )


Partition map 

Partition 0 (this_3(D) - 3 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (this_3(D) - 3 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (this_3(D) - 3 )

CollisionBox::~CollisionBox() (struct CollisionBox * const this)
{
  int (*__vtbl_ptr_type) () * _1;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = &_ZTV12CollisionBox + 16;
  this_3(D)->_vptr.CollisionBox = _1;
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = &_ZTV12CollisionBox + 16;

(insn 6 5 0 (set (reg/f:DI 87 [ _1 ])
        (const:DI (plus:DI (symbol_ref/i:DI ("_ZTV12CollisionBox") [flags 0x2]  <var_decl 0x7f71b59ae240 _ZTV12CollisionBox>)
                (const_int 16 [0x10])))) "classes/Collider.cpp":10 -1
     (nil))

;; this_3(D)->_vptr.CollisionBox = _1;

(insn 7 6 8 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [9 this+0 S8 A64])) "classes/Collider.cpp":10 -1
     (nil))

(insn 8 7 0 (set (mem/f:DI (reg/f:DI 88) [2 this_3(D)->_vptr.CollisionBox+0 S8 A64])
        (reg/f:DI 87 [ _1 ])) "classes/Collider.cpp":10 -1
     (nil))

;; MEM[(struct  &)this_3(D)] ={v} {CLOBBER};

(nil)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [9 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "classes/Collider.cpp":10 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 87 [ _1 ])
        (const:DI (plus:DI (symbol_ref/i:DI ("_ZTV12CollisionBox") [flags 0x2]  <var_decl 0x7f71b59ae240 _ZTV12CollisionBox>)
                (const_int 16 [0x10])))) "classes/Collider.cpp":10 -1
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [9 this+0 S8 A64])) "classes/Collider.cpp":10 -1
     (nil))
(insn 8 7 11 2 (set (mem/f:DI (reg/f:DI 88) [2 this_3(D)->_vptr.CollisionBox+0 S8 A64])
        (reg/f:DI 87 [ _1 ])) "classes/Collider.cpp":10 -1
     (nil))
(insn 11 8 0 2 (const_int 0 [0]) "classes/Collider.cpp":12 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function bool CollisionBox::isColliding(CollisionBox*) (_ZN12CollisionBox11isCollidingEPS_, funcdef_no=3473, decl_uid=76496, cgraph_uid=913, symbol_order=918)

bool CollisionBox::isColliding(CollisionBox*) (struct CollisionBox * const this, struct CollisionBox * other)
{
  float intersectY;
  float intersectX;
  struct Vector2f otherHalfSize;
  struct Vector2f thisHalfSize;
  struct Vector2f otherPosition;
  struct Vector2f thisPosition;
  bool iftmp.0;
  bool D.84834;
  int (*__vtbl_ptr_type) () * _1;
  int (*__vtbl_ptr_type) () * _2;
  int (*__vtbl_ptr_type) () _3;
  int (*__vtbl_ptr_type) () * _4;
  int (*__vtbl_ptr_type) () * _5;
  int (*__vtbl_ptr_type) () _6;
  int (*__vtbl_ptr_type) () * _7;
  int (*__vtbl_ptr_type) () * _8;
  int (*__vtbl_ptr_type) () _9;
  int (*__vtbl_ptr_type) () * _10;
  int (*__vtbl_ptr_type) () * _11;
  int (*__vtbl_ptr_type) () _12;
  float _13;
  float _14;
  float _15;
  float _16;
  float _17;
  float _18;
  float _19;
  float _20;
  float _21;
  float _22;
  float _23;
  float _24;
  float _25;
  float _26;
  bool iftmp.0_27;
  bool iftmp.0_40;
  bool iftmp.0_41;
  bool _42;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = this_30(D)->_vptr.CollisionBox;
  _2 = _1 + 8;
  _3 = *_2;
  thisPosition = OBJ_TYPE_REF(_3;(struct CollisionBox)this_30(D)->1) (this_30(D));
  _4 = other_32(D)->_vptr.CollisionBox;
  _5 = _4 + 8;
  _6 = *_5;
  otherPosition = OBJ_TYPE_REF(_6;(struct CollisionBox)other_32(D)->1) (other_32(D));
  _7 = this_30(D)->_vptr.CollisionBox;
  _8 = _7 + 16;
  _9 = *_8;
  thisHalfSize = OBJ_TYPE_REF(_9;(struct CollisionBox)this_30(D)->2) (this_30(D));
  _10 = other_32(D)->_vptr.CollisionBox;
  _11 = _10 + 16;
  _12 = *_11;
  otherHalfSize = OBJ_TYPE_REF(_12;(struct CollisionBox)other_32(D)->2) (other_32(D));
  _13 = otherPosition.x;
  _14 = thisPosition.x;
  _15 = _13 - _14;
  _16 = std::abs (_15);
  _17 = otherHalfSize.x;
  _18 = thisHalfSize.x;
  _19 = _17 + _18;
  intersectX_37 = _16 - _19;
  _20 = otherPosition.y;
  _21 = thisPosition.y;
  _22 = _20 - _21;
  _23 = std::abs (_22);
  _24 = otherHalfSize.y;
  _25 = thisHalfSize.y;
  _26 = _24 + _25;
  intersectY_39 = _23 - _26;
  if (intersectX_37 < 0.0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 5>; [0.00%]
;;    succ:       3
;;                5

;;   basic block 3, loop depth 0
;;    pred:       2
  if (intersectY_39 < 0.0)
    goto <bb 4>; [0.00%]
  else
    goto <bb 5>; [0.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  iftmp.0_40 = 1;
  goto <bb 6>; [0.00%]
;;    succ:       6

;;   basic block 5, loop depth 0
;;    pred:       2
;;                3
  iftmp.0_41 = 0;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       4
;;                5
  # iftmp.0_27 = PHI <iftmp.0_40(4), iftmp.0_41(5)>
  _42 = iftmp.0_27;
  thisPosition ={v} {CLOBBER};
  otherPosition ={v} {CLOBBER};
  thisHalfSize ={v} {CLOBBER};
  otherHalfSize ={v} {CLOBBER};
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       6
<L5> [0.00%]:
  return _42;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (iftmp.0_27 - 27 )
Partition 28 (_28(D) - 28 )
Partition 30 (this_30(D) - 30 )
Partition 32 (other_32(D) - 32 )
Partition 37 (intersectX_37 - 37 )
Partition 39 (intersectY_39 - 39 )
Partition 40 (iftmp.0_40 - 40 )
Partition 41 (iftmp.0_41 - 41 )
Partition 42 (_42 - 42 )


Partition map 

Partition 0 (iftmp.0_27 - 27 )
Partition 1 (_28(D) - 28 )
Partition 2 (this_30(D) - 30 )
Partition 3 (other_32(D) - 32 )
Partition 4 (iftmp.0_40 - 40 )
Partition 5 (iftmp.0_41 - 41 )
Partition 6 (_42 - 42 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(1, 0) iftmp.0_27 <-> _42

Partition map 

Partition 0 (iftmp.0_27 - 27 )
Partition 1 (_28(D) - 28 )
Partition 2 (this_30(D) - 30 )
Partition 3 (other_32(D) - 32 )
Partition 4 (iftmp.0_40 - 40 )
Partition 5 (iftmp.0_41 - 41 )
Partition 6 (_42 - 42 )

Coalesce list: (27)iftmp.0_27 & (42)_42 [map: 0, 6] : Success -> 0
Coalesce list: (27)iftmp.0_27 & (41)iftmp.0_41 [map: 0, 5] : Success -> 0
Coalesce list: (27)iftmp.0_27 & (40)iftmp.0_40 [map: 0, 4] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )
Partition 13 (_14 - 14 )
Partition 14 (_15 - 15 )
Partition 15 (_16 - 16 )
Partition 16 (_17 - 17 )
Partition 17 (_18 - 18 )
Partition 18 (_19 - 19 )
Partition 19 (_20 - 20 )
Partition 20 (_21 - 21 )
Partition 21 (_22 - 22 )
Partition 22 (_23 - 23 )
Partition 23 (_24 - 24 )
Partition 24 (_25 - 25 )
Partition 25 (_26 - 26 )
Partition 26 (iftmp.0_27 - 27 40 41 42 )
Partition 27 (_28(D) - 28 )
Partition 28 (this_30(D) - 30 )
Partition 29 (other_32(D) - 32 )
Partition 30 (intersectX_37 - 37 )
Partition 31 (intersectY_39 - 39 )

bool CollisionBox::isColliding(CollisionBox*) (struct CollisionBox * const this, struct CollisionBox * other)
{
  float intersectY;
  float intersectX;
  struct Vector2f otherHalfSize;
  struct Vector2f thisHalfSize;
  struct Vector2f otherPosition;
  struct Vector2f thisPosition;
  bool iftmp.0;
  bool D.84834;
  int (*__vtbl_ptr_type) () * _1;
  int (*__vtbl_ptr_type) () * _2;
  int (*__vtbl_ptr_type) () _3;
  int (*__vtbl_ptr_type) () * _4;
  int (*__vtbl_ptr_type) () * _5;
  int (*__vtbl_ptr_type) () _6;
  int (*__vtbl_ptr_type) () * _7;
  int (*__vtbl_ptr_type) () * _8;
  int (*__vtbl_ptr_type) () _9;
  int (*__vtbl_ptr_type) () * _10;
  int (*__vtbl_ptr_type) () * _11;
  int (*__vtbl_ptr_type) () _12;
  float _13;
  float _14;
  float _15;
  float _16;
  float _17;
  float _18;
  float _19;
  float _20;
  float _21;
  float _22;
  float _23;
  float _24;
  float _25;
  float _26;
  bool iftmp.0_27;
  bool iftmp.0_40;
  bool iftmp.0_41;
  bool _42;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = this_30(D)->_vptr.CollisionBox;
  _2 = _1 + 8;
  _3 = *_2;
  thisPosition = OBJ_TYPE_REF(_3;(struct CollisionBox)this_30(D)->1) (this_30(D));
  _4 = other_32(D)->_vptr.CollisionBox;
  _5 = _4 + 8;
  _6 = *_5;
  otherPosition = OBJ_TYPE_REF(_6;(struct CollisionBox)other_32(D)->1) (other_32(D));
  _7 = this_30(D)->_vptr.CollisionBox;
  _8 = _7 + 16;
  _9 = *_8;
  thisHalfSize = OBJ_TYPE_REF(_9;(struct CollisionBox)this_30(D)->2) (this_30(D));
  _10 = other_32(D)->_vptr.CollisionBox;
  _11 = _10 + 16;
  _12 = *_11;
  otherHalfSize = OBJ_TYPE_REF(_12;(struct CollisionBox)other_32(D)->2) (other_32(D));
  _13 = otherPosition.x;
  _14 = thisPosition.x;
  _15 = _13 - _14;
  _16 = std::abs (_15);
  _17 = otherHalfSize.x;
  _18 = thisHalfSize.x;
  _19 = _17 + _18;
  intersectX_37 = _16 - _19;
  _20 = otherPosition.y;
  _21 = thisPosition.y;
  _22 = _20 - _21;
  _23 = std::abs (_22);
  _24 = otherHalfSize.y;
  _25 = thisHalfSize.y;
  _26 = _24 + _25;
  intersectY_39 = _23 - _26;
  if (intersectX_37 < 0.0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 5>; [0.00%]
;;    succ:       3
;;                5

;;   basic block 3, loop depth 0
;;    pred:       2
  if (intersectY_39 < 0.0)
    goto <bb 4>; [0.00%]
  else
    goto <bb 5>; [0.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  iftmp.0_40 = 1;
  goto <bb 6>; [0.00%]
;;    succ:       6

;;   basic block 5, loop depth 0
;;    pred:       2
;;                3
  iftmp.0_41 = 0;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       4
;;                5
  # iftmp.0_27 = PHI <iftmp.0_40(4), iftmp.0_41(5)>
  _42 = iftmp.0_27;
  thisPosition ={v} {CLOBBER};
  otherPosition ={v} {CLOBBER};
  thisHalfSize ={v} {CLOBBER};
  otherHalfSize ={v} {CLOBBER};
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       6
<L5> [0.00%]:
  return _42;
;;    succ:       EXIT

}


Partition 5: size 8 align 4
	otherHalfSize
Partition 4: size 8 align 4
	thisHalfSize
Partition 3: size 8 align 4
	otherPosition
Partition 2: size 8 align 4
	thisPosition
Partition 1: size 4 align 4
	intersectY_39
Partition 0: size 4 align 4
	intersectX_37

;; Generating RTL for gimple basic block 2

;; _1 = this_30(D)->_vptr.CollisionBox;

(insn 7 6 8 (set (reg/f:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [9 this+0 S8 A64])) "classes/Collider.cpp":15 -1
     (nil))

(insn 8 7 0 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (reg/f:DI 115) [2 this_30(D)->_vptr.CollisionBox+0 S8 A64])) "classes/Collider.cpp":15 -1
     (nil))

;; _2 = _1 + 8;

(insn 9 8 0 (parallel [
            (set (reg/f:DI 88 [ _2 ])
                (plus:DI (reg/f:DI 87 [ _1 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":15 -1
     (nil))

;; _3 = *_2;

(insn 10 9 0 (set (reg/f:DI 89 [ _3 ])
        (mem/f:DI (reg/f:DI 88 [ _2 ]) [10 *_2+0 S8 A64])) "classes/Collider.cpp":15 -1
     (nil))

;; thisPosition = OBJ_TYPE_REF(_3;this_30(D)->1) (this_30(D));

(insn 11 10 12 (set (reg:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [9 this+0 S8 A64])) "classes/Collider.cpp":15 -1
     (nil))

(insn 12 11 13 (set (reg:DI 5 di)
        (reg:DI 116)) "classes/Collider.cpp":15 -1
     (nil))

(call_insn 13 12 14 (set (reg:DI 21 xmm0)
        (call (mem:QI (reg/f:DI 89 [ _3 ]) [0 *OBJ_TYPE_REF(_3;(struct CollisionBox)this_30(D)->1) S1 A8])
            (const_int 0 [0]))) "classes/Collider.cpp":15 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 14 13 15 (set (reg:DI 117)
        (reg:DI 21 xmm0)) "classes/Collider.cpp":15 -1
     (nil))

(insn 15 14 16 (set (reg:DI 118)
        (reg:DI 117)) "classes/Collider.cpp":15 -1
     (nil))

(insn 16 15 0 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [12 thisPosition+0 S8 A64])
        (reg:DI 118)) "classes/Collider.cpp":15 -1
     (nil))

;; _4 = other_32(D)->_vptr.CollisionBox;

(insn 17 16 18 (set (reg/f:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [9 other+0 S8 A64])) "classes/Collider.cpp":16 -1
     (nil))

(insn 18 17 0 (set (reg/f:DI 90 [ _4 ])
        (mem/f:DI (reg/f:DI 119) [2 other_32(D)->_vptr.CollisionBox+0 S8 A64])) "classes/Collider.cpp":16 -1
     (nil))

;; _5 = _4 + 8;

(insn 19 18 0 (parallel [
            (set (reg/f:DI 91 [ _5 ])
                (plus:DI (reg/f:DI 90 [ _4 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":16 -1
     (nil))

;; _6 = *_5;

(insn 20 19 0 (set (reg/f:DI 92 [ _6 ])
        (mem/f:DI (reg/f:DI 91 [ _5 ]) [10 *_5+0 S8 A64])) "classes/Collider.cpp":16 -1
     (nil))

;; otherPosition = OBJ_TYPE_REF(_6;other_32(D)->1) (other_32(D));

(insn 21 20 22 (set (reg:DI 120)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [9 other+0 S8 A64])) "classes/Collider.cpp":16 -1
     (nil))

(insn 22 21 23 (set (reg:DI 5 di)
        (reg:DI 120)) "classes/Collider.cpp":16 -1
     (nil))

(call_insn 23 22 24 (set (reg:DI 21 xmm0)
        (call (mem:QI (reg/f:DI 92 [ _6 ]) [0 *OBJ_TYPE_REF(_6;(struct CollisionBox)other_32(D)->1) S1 A8])
            (const_int 0 [0]))) "classes/Collider.cpp":16 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 24 23 25 (set (reg:DI 121)
        (reg:DI 21 xmm0)) "classes/Collider.cpp":16 -1
     (nil))

(insn 25 24 26 (set (reg:DI 122)
        (reg:DI 121)) "classes/Collider.cpp":16 -1
     (nil))

(insn 26 25 0 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 otherPosition+0 S8 A64])
        (reg:DI 122)) "classes/Collider.cpp":16 -1
     (nil))

;; _7 = this_30(D)->_vptr.CollisionBox;

(insn 27 26 28 (set (reg/f:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [9 this+0 S8 A64])) "classes/Collider.cpp":17 -1
     (nil))

(insn 28 27 0 (set (reg/f:DI 93 [ _7 ])
        (mem/f:DI (reg/f:DI 123) [2 this_30(D)->_vptr.CollisionBox+0 S8 A64])) "classes/Collider.cpp":17 -1
     (nil))

;; _8 = _7 + 16;

(insn 29 28 0 (parallel [
            (set (reg/f:DI 94 [ _8 ])
                (plus:DI (reg/f:DI 93 [ _7 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":17 -1
     (nil))

;; _9 = *_8;

(insn 30 29 0 (set (reg/f:DI 95 [ _9 ])
        (mem/f:DI (reg/f:DI 94 [ _8 ]) [10 *_8+0 S8 A64])) "classes/Collider.cpp":17 -1
     (nil))

;; thisHalfSize = OBJ_TYPE_REF(_9;this_30(D)->2) (this_30(D));

(insn 31 30 32 (set (reg:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [9 this+0 S8 A64])) "classes/Collider.cpp":17 -1
     (nil))

(insn 32 31 33 (set (reg:DI 5 di)
        (reg:DI 124)) "classes/Collider.cpp":17 -1
     (nil))

(call_insn 33 32 34 (set (reg:DI 21 xmm0)
        (call (mem:QI (reg/f:DI 95 [ _9 ]) [0 *OBJ_TYPE_REF(_9;(struct CollisionBox)this_30(D)->2) S1 A8])
            (const_int 0 [0]))) "classes/Collider.cpp":17 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 34 33 35 (set (reg:DI 125)
        (reg:DI 21 xmm0)) "classes/Collider.cpp":17 -1
     (nil))

(insn 35 34 36 (set (reg:DI 126)
        (reg:DI 125)) "classes/Collider.cpp":17 -1
     (nil))

(insn 36 35 0 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [12 thisHalfSize+0 S8 A64])
        (reg:DI 126)) "classes/Collider.cpp":17 -1
     (nil))

;; _10 = other_32(D)->_vptr.CollisionBox;

(insn 37 36 38 (set (reg/f:DI 127)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [9 other+0 S8 A64])) "classes/Collider.cpp":18 -1
     (nil))

(insn 38 37 0 (set (reg/f:DI 96 [ _10 ])
        (mem/f:DI (reg/f:DI 127) [2 other_32(D)->_vptr.CollisionBox+0 S8 A64])) "classes/Collider.cpp":18 -1
     (nil))

;; _11 = _10 + 16;

(insn 39 38 0 (parallel [
            (set (reg/f:DI 97 [ _11 ])
                (plus:DI (reg/f:DI 96 [ _10 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":18 -1
     (nil))

;; _12 = *_11;

(insn 40 39 0 (set (reg/f:DI 98 [ _12 ])
        (mem/f:DI (reg/f:DI 97 [ _11 ]) [10 *_11+0 S8 A64])) "classes/Collider.cpp":18 -1
     (nil))

;; otherHalfSize = OBJ_TYPE_REF(_12;other_32(D)->2) (other_32(D));

(insn 41 40 42 (set (reg:DI 128)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [9 other+0 S8 A64])) "classes/Collider.cpp":18 -1
     (nil))

(insn 42 41 43 (set (reg:DI 5 di)
        (reg:DI 128)) "classes/Collider.cpp":18 -1
     (nil))

(call_insn 43 42 44 (set (reg:DI 21 xmm0)
        (call (mem:QI (reg/f:DI 98 [ _12 ]) [0 *OBJ_TYPE_REF(_12;(struct CollisionBox)other_32(D)->2) S1 A8])
            (const_int 0 [0]))) "classes/Collider.cpp":18 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 44 43 45 (set (reg:DI 129)
        (reg:DI 21 xmm0)) "classes/Collider.cpp":18 -1
     (nil))

(insn 45 44 46 (set (reg:DI 130)
        (reg:DI 129)) "classes/Collider.cpp":18 -1
     (nil))

(insn 46 45 0 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 otherHalfSize+0 S8 A64])
        (reg:DI 130)) "classes/Collider.cpp":18 -1
     (nil))

;; _13 = otherPosition.x;

(insn 47 46 0 (set (reg:SF 99 [ _13 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [5 otherPosition.x+0 S4 A64])) "classes/Collider.cpp":20 -1
     (nil))

;; _14 = thisPosition.x;

(insn 48 47 0 (set (reg:SF 100 [ _14 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [5 thisPosition.x+0 S4 A64])) "classes/Collider.cpp":20 -1
     (nil))

;; _15 = _13 - _14;

(insn 49 48 0 (set (reg:SF 101 [ _15 ])
        (minus:SF (reg:SF 99 [ _13 ])
            (reg:SF 100 [ _14 ]))) "classes/Collider.cpp":20 -1
     (nil))

;; _16 = std::abs (_15);

(insn 50 49 51 (set (reg:SF 21 xmm0)
        (reg:SF 101 [ _15 ])) "classes/Collider.cpp":20 -1
     (nil))

(call_insn 51 50 52 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt3absf") [flags 0x3]  <function_decl 0x7f71b7ca1400 abs>) [0 abs S1 A8])
            (const_int 0 [0]))) "classes/Collider.cpp":20 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))

(insn 52 51 0 (set (reg:SF 102 [ _16 ])
        (reg:SF 21 xmm0)) "classes/Collider.cpp":20 -1
     (nil))

;; _17 = otherHalfSize.x;

(insn 53 52 0 (set (reg:SF 103 [ _17 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [5 otherHalfSize.x+0 S4 A64])) "classes/Collider.cpp":20 -1
     (nil))

;; _18 = thisHalfSize.x;

(insn 54 53 0 (set (reg:SF 104 [ _18 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [5 thisHalfSize.x+0 S4 A64])) "classes/Collider.cpp":20 -1
     (nil))

;; _19 = _17 + _18;

(insn 55 54 0 (set (reg:SF 105 [ _19 ])
        (plus:SF (reg:SF 103 [ _17 ])
            (reg:SF 104 [ _18 ]))) "classes/Collider.cpp":20 -1
     (nil))

;; intersectX_37 = _16 - _19;

(insn 56 55 57 (set (reg:SF 131)
        (minus:SF (reg:SF 102 [ _16 ])
            (reg:SF 105 [ _19 ]))) "classes/Collider.cpp":20 -1
     (nil))

(insn 57 56 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [5 intersectX+0 S4 A32])
        (reg:SF 131)) "classes/Collider.cpp":20 -1
     (nil))

;; _20 = otherPosition.y;

(insn 58 57 0 (set (reg:SF 106 [ _20 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [5 otherPosition.y+0 S4 A32])) "classes/Collider.cpp":21 -1
     (nil))

;; _21 = thisPosition.y;

(insn 59 58 0 (set (reg:SF 107 [ _21 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [5 thisPosition.y+0 S4 A32])) "classes/Collider.cpp":21 -1
     (nil))

;; _22 = _20 - _21;

(insn 60 59 0 (set (reg:SF 108 [ _22 ])
        (minus:SF (reg:SF 106 [ _20 ])
            (reg:SF 107 [ _21 ]))) "classes/Collider.cpp":21 -1
     (nil))

;; _23 = std::abs (_22);

(insn 61 60 62 (set (reg:SF 21 xmm0)
        (reg:SF 108 [ _22 ])) "classes/Collider.cpp":21 -1
     (nil))

(call_insn 62 61 63 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt3absf") [flags 0x3]  <function_decl 0x7f71b7ca1400 abs>) [0 abs S1 A8])
            (const_int 0 [0]))) "classes/Collider.cpp":21 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))

(insn 63 62 0 (set (reg:SF 109 [ _23 ])
        (reg:SF 21 xmm0)) "classes/Collider.cpp":21 -1
     (nil))

;; _24 = otherHalfSize.y;

(insn 64 63 0 (set (reg:SF 110 [ _24 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [5 otherHalfSize.y+0 S4 A32])) "classes/Collider.cpp":21 -1
     (nil))

;; _25 = thisHalfSize.y;

(insn 65 64 0 (set (reg:SF 111 [ _25 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [5 thisHalfSize.y+0 S4 A32])) "classes/Collider.cpp":21 -1
     (nil))

;; _26 = _24 + _25;

(insn 66 65 0 (set (reg:SF 112 [ _26 ])
        (plus:SF (reg:SF 110 [ _24 ])
            (reg:SF 111 [ _25 ]))) "classes/Collider.cpp":21 -1
     (nil))

;; intersectY_39 = _23 - _26;

(insn 67 66 68 (set (reg:SF 132)
        (minus:SF (reg:SF 109 [ _23 ])
            (reg:SF 112 [ _26 ]))) "classes/Collider.cpp":21 -1
     (nil))

(insn 68 67 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [5 intersectY+0 S4 A32])
        (reg:SF 132)) "classes/Collider.cpp":21 -1
     (nil))

;; if (intersectX_37 < 0.0)

(insn 69 68 70 (set (reg:SF 133)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":23 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))

(insn 70 69 71 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 133)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [5 intersectX+0 S4 A32]))) "classes/Collider.cpp":23 -1
     (nil))

(jump_insn 71 70 72 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 74)
            (pc))) "classes/Collider.cpp":23 -1
     (nil))

(jump_insn 72 71 73 (set (pc)
        (label_ref 0)) "classes/Collider.cpp":23 -1
     (nil))

(barrier 73 72 74)

(code_label 74 73 0 7 (nil) [0 uses])

;; Generating RTL for gimple basic block 3

;; if (intersectY_39 < 0.0)

(insn 76 75 77 (set (reg:SF 134)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":23 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))

(insn 77 76 78 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 134)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [5 intersectY+0 S4 A32]))) "classes/Collider.cpp":23 -1
     (nil))

(jump_insn 78 77 79 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 81)
            (pc))) "classes/Collider.cpp":23 -1
     (nil))

(jump_insn 79 78 80 (set (pc)
        (label_ref 0)) "classes/Collider.cpp":23 -1
     (nil))

(barrier 80 79 81)

(code_label 81 80 0 8 (nil) [0 uses])

;; Generating RTL for gimple basic block 4

;; iftmp.0_40 = 1;

(insn 83 82 0 (set (reg:QI 113 [ iftmp.0_27 ])
        (const_int 1 [0x1])) "classes/Collider.cpp":23 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 86 85 87 6 (nil) [0 uses])

(note 87 86 0 NOTE_INSN_BASIC_BLOCK)

;; iftmp.0_41 = 0;

(insn 88 87 0 (set (reg:QI 113 [ iftmp.0_27 ])
        (const_int 0 [0])) "classes/Collider.cpp":23 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 89 88 90 9 (nil) [0 uses])

(note 90 89 0 NOTE_INSN_BASIC_BLOCK)

;; _42 = iftmp.0_27;

(nil)

;; thisPosition ={v} {CLOBBER};

(nil)

;; otherPosition ={v} {CLOBBER};

(nil)

;; thisHalfSize ={v} {CLOBBER};

(nil)

;; otherHalfSize ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 7

;; <L5> [0.00%]:

(code_label 91 90 92 10 (nil) [0 uses])

(note 92 91 0 NOTE_INSN_BASIC_BLOCK)

;; return _42;

(insn 93 92 94 (set (reg:QI 114 [ <retval> ])
        (reg:QI 113 [ iftmp.0_27 ])) "classes/Collider.cpp":23 -1
     (nil))

(jump_insn 94 93 95 (set (pc)
        (label_ref 0)) "classes/Collider.cpp":23 -1
     (nil))

(barrier 95 94 0)
Purged non-fallthru edges from bb 11
Purged non-fallthru edges from bb 13


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 2->5 redirected to 6
Forwarding edge 2->4 to 10 failed.
Forwarding edge 2->4 to 10 failed.
deleting block 5
Edge 6->8 redirected to 9
Forwarding edge 6->7 to 10 failed.
Forwarding edge 6->7 to 10 failed.
deleting block 8
Redirecting jump 84 from 11 to 12.
Merging block 11 into block 10...
Merged blocks 10 and 11.
Merged 10 and 11 without moving.
Removing jump 94.
Merging block 13 into block 12...
Merged blocks 12 and 13.
Merged 12 and 13 without moving.


try_optimize_cfg iteration 2

Forwarding edge 2->4 to 10 failed.
Forwarding edge 6->7 to 10 failed.
fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [9 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "classes/Collider.cpp":14 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [9 other+0 S8 A64])
        (reg:DI 4 si [ other ])) "classes/Collider.cpp":14 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [9 this+0 S8 A64])) "classes/Collider.cpp":15 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (reg/f:DI 115) [2 this_30(D)->_vptr.CollisionBox+0 S8 A64])) "classes/Collider.cpp":15 -1
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg/f:DI 88 [ _2 ])
                (plus:DI (reg/f:DI 87 [ _1 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":15 -1
     (nil))
(insn 10 9 11 2 (set (reg/f:DI 89 [ _3 ])
        (mem/f:DI (reg/f:DI 88 [ _2 ]) [10 *_2+0 S8 A64])) "classes/Collider.cpp":15 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [9 this+0 S8 A64])) "classes/Collider.cpp":15 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg:DI 116)) "classes/Collider.cpp":15 -1
     (nil))
(call_insn 13 12 14 2 (set (reg:DI 21 xmm0)
        (call (mem:QI (reg/f:DI 89 [ _3 ]) [0 *OBJ_TYPE_REF(_3;(struct CollisionBox)this_30(D)->1) S1 A8])
            (const_int 0 [0]))) "classes/Collider.cpp":15 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 14 13 15 2 (set (reg:DI 117)
        (reg:DI 21 xmm0)) "classes/Collider.cpp":15 -1
     (nil))
(insn 15 14 16 2 (set (reg:DI 118)
        (reg:DI 117)) "classes/Collider.cpp":15 -1
     (nil))
(insn 16 15 17 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [12 thisPosition+0 S8 A64])
        (reg:DI 118)) "classes/Collider.cpp":15 -1
     (nil))
(insn 17 16 18 2 (set (reg/f:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [9 other+0 S8 A64])) "classes/Collider.cpp":16 -1
     (nil))
(insn 18 17 19 2 (set (reg/f:DI 90 [ _4 ])
        (mem/f:DI (reg/f:DI 119) [2 other_32(D)->_vptr.CollisionBox+0 S8 A64])) "classes/Collider.cpp":16 -1
     (nil))
(insn 19 18 20 2 (parallel [
            (set (reg/f:DI 91 [ _5 ])
                (plus:DI (reg/f:DI 90 [ _4 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":16 -1
     (nil))
(insn 20 19 21 2 (set (reg/f:DI 92 [ _6 ])
        (mem/f:DI (reg/f:DI 91 [ _5 ]) [10 *_5+0 S8 A64])) "classes/Collider.cpp":16 -1
     (nil))
(insn 21 20 22 2 (set (reg:DI 120)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [9 other+0 S8 A64])) "classes/Collider.cpp":16 -1
     (nil))
(insn 22 21 23 2 (set (reg:DI 5 di)
        (reg:DI 120)) "classes/Collider.cpp":16 -1
     (nil))
(call_insn 23 22 24 2 (set (reg:DI 21 xmm0)
        (call (mem:QI (reg/f:DI 92 [ _6 ]) [0 *OBJ_TYPE_REF(_6;(struct CollisionBox)other_32(D)->1) S1 A8])
            (const_int 0 [0]))) "classes/Collider.cpp":16 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 24 23 25 2 (set (reg:DI 121)
        (reg:DI 21 xmm0)) "classes/Collider.cpp":16 -1
     (nil))
(insn 25 24 26 2 (set (reg:DI 122)
        (reg:DI 121)) "classes/Collider.cpp":16 -1
     (nil))
(insn 26 25 27 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 otherPosition+0 S8 A64])
        (reg:DI 122)) "classes/Collider.cpp":16 -1
     (nil))
(insn 27 26 28 2 (set (reg/f:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [9 this+0 S8 A64])) "classes/Collider.cpp":17 -1
     (nil))
(insn 28 27 29 2 (set (reg/f:DI 93 [ _7 ])
        (mem/f:DI (reg/f:DI 123) [2 this_30(D)->_vptr.CollisionBox+0 S8 A64])) "classes/Collider.cpp":17 -1
     (nil))
(insn 29 28 30 2 (parallel [
            (set (reg/f:DI 94 [ _8 ])
                (plus:DI (reg/f:DI 93 [ _7 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":17 -1
     (nil))
(insn 30 29 31 2 (set (reg/f:DI 95 [ _9 ])
        (mem/f:DI (reg/f:DI 94 [ _8 ]) [10 *_8+0 S8 A64])) "classes/Collider.cpp":17 -1
     (nil))
(insn 31 30 32 2 (set (reg:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [9 this+0 S8 A64])) "classes/Collider.cpp":17 -1
     (nil))
(insn 32 31 33 2 (set (reg:DI 5 di)
        (reg:DI 124)) "classes/Collider.cpp":17 -1
     (nil))
(call_insn 33 32 34 2 (set (reg:DI 21 xmm0)
        (call (mem:QI (reg/f:DI 95 [ _9 ]) [0 *OBJ_TYPE_REF(_9;(struct CollisionBox)this_30(D)->2) S1 A8])
            (const_int 0 [0]))) "classes/Collider.cpp":17 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 34 33 35 2 (set (reg:DI 125)
        (reg:DI 21 xmm0)) "classes/Collider.cpp":17 -1
     (nil))
(insn 35 34 36 2 (set (reg:DI 126)
        (reg:DI 125)) "classes/Collider.cpp":17 -1
     (nil))
(insn 36 35 37 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [12 thisHalfSize+0 S8 A64])
        (reg:DI 126)) "classes/Collider.cpp":17 -1
     (nil))
(insn 37 36 38 2 (set (reg/f:DI 127)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [9 other+0 S8 A64])) "classes/Collider.cpp":18 -1
     (nil))
(insn 38 37 39 2 (set (reg/f:DI 96 [ _10 ])
        (mem/f:DI (reg/f:DI 127) [2 other_32(D)->_vptr.CollisionBox+0 S8 A64])) "classes/Collider.cpp":18 -1
     (nil))
(insn 39 38 40 2 (parallel [
            (set (reg/f:DI 97 [ _11 ])
                (plus:DI (reg/f:DI 96 [ _10 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":18 -1
     (nil))
(insn 40 39 41 2 (set (reg/f:DI 98 [ _12 ])
        (mem/f:DI (reg/f:DI 97 [ _11 ]) [10 *_11+0 S8 A64])) "classes/Collider.cpp":18 -1
     (nil))
(insn 41 40 42 2 (set (reg:DI 128)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [9 other+0 S8 A64])) "classes/Collider.cpp":18 -1
     (nil))
(insn 42 41 43 2 (set (reg:DI 5 di)
        (reg:DI 128)) "classes/Collider.cpp":18 -1
     (nil))
(call_insn 43 42 44 2 (set (reg:DI 21 xmm0)
        (call (mem:QI (reg/f:DI 98 [ _12 ]) [0 *OBJ_TYPE_REF(_12;(struct CollisionBox)other_32(D)->2) S1 A8])
            (const_int 0 [0]))) "classes/Collider.cpp":18 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 44 43 45 2 (set (reg:DI 129)
        (reg:DI 21 xmm0)) "classes/Collider.cpp":18 -1
     (nil))
(insn 45 44 46 2 (set (reg:DI 130)
        (reg:DI 129)) "classes/Collider.cpp":18 -1
     (nil))
(insn 46 45 47 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 otherHalfSize+0 S8 A64])
        (reg:DI 130)) "classes/Collider.cpp":18 -1
     (nil))
(insn 47 46 48 2 (set (reg:SF 99 [ _13 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [5 otherPosition.x+0 S4 A64])) "classes/Collider.cpp":20 -1
     (nil))
(insn 48 47 49 2 (set (reg:SF 100 [ _14 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [5 thisPosition.x+0 S4 A64])) "classes/Collider.cpp":20 -1
     (nil))
(insn 49 48 50 2 (set (reg:SF 101 [ _15 ])
        (minus:SF (reg:SF 99 [ _13 ])
            (reg:SF 100 [ _14 ]))) "classes/Collider.cpp":20 -1
     (nil))
(insn 50 49 51 2 (set (reg:SF 21 xmm0)
        (reg:SF 101 [ _15 ])) "classes/Collider.cpp":20 -1
     (nil))
(call_insn 51 50 52 2 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt3absf") [flags 0x3]  <function_decl 0x7f71b7ca1400 abs>) [0 abs S1 A8])
            (const_int 0 [0]))) "classes/Collider.cpp":20 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 52 51 53 2 (set (reg:SF 102 [ _16 ])
        (reg:SF 21 xmm0)) "classes/Collider.cpp":20 -1
     (nil))
(insn 53 52 54 2 (set (reg:SF 103 [ _17 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [5 otherHalfSize.x+0 S4 A64])) "classes/Collider.cpp":20 -1
     (nil))
(insn 54 53 55 2 (set (reg:SF 104 [ _18 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [5 thisHalfSize.x+0 S4 A64])) "classes/Collider.cpp":20 -1
     (nil))
(insn 55 54 56 2 (set (reg:SF 105 [ _19 ])
        (plus:SF (reg:SF 103 [ _17 ])
            (reg:SF 104 [ _18 ]))) "classes/Collider.cpp":20 -1
     (nil))
(insn 56 55 57 2 (set (reg:SF 131)
        (minus:SF (reg:SF 102 [ _16 ])
            (reg:SF 105 [ _19 ]))) "classes/Collider.cpp":20 -1
     (nil))
(insn 57 56 58 2 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [5 intersectX+0 S4 A32])
        (reg:SF 131)) "classes/Collider.cpp":20 -1
     (nil))
(insn 58 57 59 2 (set (reg:SF 106 [ _20 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [5 otherPosition.y+0 S4 A32])) "classes/Collider.cpp":21 -1
     (nil))
(insn 59 58 60 2 (set (reg:SF 107 [ _21 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [5 thisPosition.y+0 S4 A32])) "classes/Collider.cpp":21 -1
     (nil))
(insn 60 59 61 2 (set (reg:SF 108 [ _22 ])
        (minus:SF (reg:SF 106 [ _20 ])
            (reg:SF 107 [ _21 ]))) "classes/Collider.cpp":21 -1
     (nil))
(insn 61 60 62 2 (set (reg:SF 21 xmm0)
        (reg:SF 108 [ _22 ])) "classes/Collider.cpp":21 -1
     (nil))
(call_insn 62 61 63 2 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt3absf") [flags 0x3]  <function_decl 0x7f71b7ca1400 abs>) [0 abs S1 A8])
            (const_int 0 [0]))) "classes/Collider.cpp":21 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 63 62 64 2 (set (reg:SF 109 [ _23 ])
        (reg:SF 21 xmm0)) "classes/Collider.cpp":21 -1
     (nil))
(insn 64 63 65 2 (set (reg:SF 110 [ _24 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [5 otherHalfSize.y+0 S4 A32])) "classes/Collider.cpp":21 -1
     (nil))
(insn 65 64 66 2 (set (reg:SF 111 [ _25 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [5 thisHalfSize.y+0 S4 A32])) "classes/Collider.cpp":21 -1
     (nil))
(insn 66 65 67 2 (set (reg:SF 112 [ _26 ])
        (plus:SF (reg:SF 110 [ _24 ])
            (reg:SF 111 [ _25 ]))) "classes/Collider.cpp":21 -1
     (nil))
(insn 67 66 68 2 (set (reg:SF 132)
        (minus:SF (reg:SF 109 [ _23 ])
            (reg:SF 112 [ _26 ]))) "classes/Collider.cpp":21 -1
     (nil))
(insn 68 67 69 2 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [5 intersectY+0 S4 A32])
        (reg:SF 132)) "classes/Collider.cpp":21 -1
     (nil))
(insn 69 68 70 2 (set (reg:SF 133)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":23 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 70 69 71 2 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 133)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [5 intersectX+0 S4 A32]))) "classes/Collider.cpp":23 -1
     (nil))
(jump_insn 71 70 100 2 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 104)
            (pc))) "classes/Collider.cpp":23 617 {*jcc_1}
     (nil)
 -> 104)
;;  succ:       6
;;              4 (FALLTHRU)

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
(note 100 71 72 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 72 100 73 4 (set (pc)
        (label_ref 86)) "classes/Collider.cpp":23 -1
     (nil)
 -> 86)
;;  succ:       10

(barrier 73 72 104)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
(code_label 104 73 75 6 11 (nil) [1 uses])
(note 75 104 76 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 6 (set (reg:SF 134)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":23 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 77 76 78 6 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 134)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [5 intersectY+0 S4 A32]))) "classes/Collider.cpp":23 -1
     (nil))
(jump_insn 78 77 102 6 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 105)
            (pc))) "classes/Collider.cpp":23 617 {*jcc_1}
     (nil)
 -> 105)
;;  succ:       9
;;              7 (FALLTHRU)

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
(note 102 78 79 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(jump_insn 79 102 80 7 (set (pc)
        (label_ref 86)) "classes/Collider.cpp":23 -1
     (nil)
 -> 86)
;;  succ:       10

(barrier 80 79 105)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
(code_label 105 80 82 9 12 (nil) [1 uses])
(note 82 105 83 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 9 (set (reg:QI 113 [ iftmp.0_27 ])
        (const_int 1 [0x1])) "classes/Collider.cpp":23 -1
     (nil))
(jump_insn 84 83 85 9 (set (pc)
        (label_ref:DI 91)) "classes/Collider.cpp":23 649 {jump}
     (nil)
 -> 91)
;;  succ:       12 [100.0%] 

(barrier 85 84 86)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
;;              7
(code_label 86 85 87 10 6 (nil) [2 uses])
(note 87 86 88 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 91 10 (set (reg:QI 113 [ iftmp.0_27 ])
        (const_int 0 [0])) "classes/Collider.cpp":23 -1
     (nil))
;;  succ:       12 (FALLTHRU)

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       10 (FALLTHRU)
;;              9 [100.0%] 
(code_label 91 88 92 12 10 (nil) [1 uses])
(note 92 91 93 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 97 12 (set (reg:QI 114 [ <retval> ])
        (reg:QI 113 [ iftmp.0_27 ])) "classes/Collider.cpp":23 -1
     (nil))
(insn 97 93 98 12 (set (reg/i:QI 0 ax)
        (reg:QI 114 [ <retval> ])) "classes/Collider.cpp":25 -1
     (nil))
(insn 98 97 0 12 (use (reg/i:QI 0 ax)) "classes/Collider.cpp":25 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function constexpr const _Tp& std::max(const _Tp&, const _Tp&) [with _Tp = float] (_ZSt3maxIfERKT_S2_S2_, funcdef_no=3475, decl_uid=81070, cgraph_uid=914, symbol_order=919)

constexpr const _Tp& std::max(const _Tp&, const _Tp&) [with _Tp = float] (const float & __a, const float & __b)
{
  const float & D.84864;
  float _1;
  float _2;
  const float & _3;
  const float & _7;
  const float & _8;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = *__a_5(D);
  _2 = *__b_6(D);
  if (_1 < _2)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _8 = __b_6(D);
  goto <bb 5> (<L2>); [0.00%]
;;    succ:       5

;;   basic block 4, loop depth 0
;;    pred:       2
  _7 = __a_5(D);
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       3
;;                4
  # _3 = PHI <_8(3), _7(4)>
<L2> [0.00%]:
  return _3;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 5 (__a_5(D) - 5 )
Partition 6 (__b_6(D) - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9(D) - 9 )


Partition map 

Partition 0 (_3 - 3 )
Partition 1 (__a_5(D) - 5 )
Partition 2 (__b_6(D) - 6 )
Partition 3 (_7 - 7 )
Partition 4 (_8 - 8 )
Partition 5 (_9(D) - 9 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (_3 - 3 )
Partition 1 (__a_5(D) - 5 )
Partition 2 (__b_6(D) - 6 )
Partition 3 (_7 - 7 )
Partition 4 (_8 - 8 )
Partition 5 (_9(D) - 9 )

Coalesce list: (3)_3 & (7)_7 [map: 0, 3] : Success -> 0
Coalesce list: (3)_3 & (8)_8 [map: 0, 4] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 7 8 )
Partition 3 (__a_5(D) - 5 )
Partition 4 (__b_6(D) - 6 )
Partition 5 (_9(D) - 9 )

constexpr const _Tp& std::max(const _Tp&, const _Tp&) [with _Tp = float] (const float & __a, const float & __b)
{
  const float & D.84864;
  float _1;
  float _2;
  const float & _3;
  const float & _7;
  const float & _8;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = *__a_5(D);
  _2 = *__b_6(D);
  if (_1 < _2)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _8 = __b_6(D);
  goto <bb 5> (<L2>); [0.00%]
;;    succ:       5

;;   basic block 4, loop depth 0
;;    pred:       2
  _7 = __a_5(D);
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       3
;;                4
  # _3 = PHI <_8(3), _7(4)>
<L2> [0.00%]:
  return _3;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = *__a_5(D);

(insn 7 6 8 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [13 __a+0 S8 A64])) "/usr/include/c++/7/bits/stl_algobase.h":224 -1
     (nil))

(insn 8 7 0 (set (reg:SF 87 [ _1 ])
        (mem:SF (reg/f:DI 91) [5 *__a_5(D)+0 S4 A32])) "/usr/include/c++/7/bits/stl_algobase.h":224 -1
     (nil))

;; _2 = *__b_6(D);

(insn 9 8 10 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [13 __b+0 S8 A64])) "/usr/include/c++/7/bits/stl_algobase.h":224 -1
     (nil))

(insn 10 9 0 (set (reg:SF 88 [ _2 ])
        (mem:SF (reg/f:DI 92) [5 *__b_6(D)+0 S4 A32])) "/usr/include/c++/7/bits/stl_algobase.h":224 -1
     (nil))

;; if (_1 < _2)

(insn 11 10 12 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 88 [ _2 ])
            (reg:SF 87 [ _1 ]))) "/usr/include/c++/7/bits/stl_algobase.h":224 -1
     (nil))

(jump_insn 12 11 13 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 15)
            (pc))) "/usr/include/c++/7/bits/stl_algobase.h":224 -1
     (nil))

(jump_insn 13 12 14 (set (pc)
        (label_ref 0)) "/usr/include/c++/7/bits/stl_algobase.h":224 -1
     (nil))

(barrier 14 13 15)

(code_label 15 14 0 15 (nil) [0 uses])

;; Generating RTL for gimple basic block 3

;; _8 = __b_6(D);

(insn 17 16 0 (set (reg/f:DI 89 [ _3 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [13 __b+0 S8 A64])) "/usr/include/c++/7/bits/stl_algobase.h":225 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 20 19 21 14 (nil) [0 uses])

(note 21 20 0 NOTE_INSN_BASIC_BLOCK)

;; _7 = __a_5(D);

(insn 22 21 0 (set (reg/f:DI 89 [ _3 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [13 __a+0 S8 A64])) "/usr/include/c++/7/bits/stl_algobase.h":226 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; <L2> [0.00%]:

(code_label 23 22 24 16 (nil) [0 uses])

(note 24 23 0 NOTE_INSN_BASIC_BLOCK)

;; return _3;

(insn 25 24 26 (set (reg/f:DI 90 [ <retval> ])
        (reg/f:DI 89 [ _3 ])) -1
     (nil))

(jump_insn 26 25 27 (set (pc)
        (label_ref 0)) -1
     (nil))

(barrier 27 26 0)
Purged non-fallthru edges from bb 9


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 2->5 redirected to 6
Forwarding edge 2->4 to 7 failed.
Forwarding edge 2->4 to 7 failed.
deleting block 5
Removing jump 26.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.


try_optimize_cfg iteration 2

Forwarding edge 2->4 to 7 failed.
fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [13 __a+0 S8 A64])
        (reg:DI 5 di [ __a ])) "/usr/include/c++/7/bits/stl_algobase.h":219 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [13 __b+0 S8 A64])
        (reg:DI 4 si [ __b ])) "/usr/include/c++/7/bits/stl_algobase.h":219 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [13 __a+0 S8 A64])) "/usr/include/c++/7/bits/stl_algobase.h":224 -1
     (nil))
(insn 8 7 9 2 (set (reg:SF 87 [ _1 ])
        (mem:SF (reg/f:DI 91) [5 *__a_5(D)+0 S4 A32])) "/usr/include/c++/7/bits/stl_algobase.h":224 -1
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [13 __b+0 S8 A64])) "/usr/include/c++/7/bits/stl_algobase.h":224 -1
     (nil))
(insn 10 9 11 2 (set (reg:SF 88 [ _2 ])
        (mem:SF (reg/f:DI 92) [5 *__b_6(D)+0 S4 A32])) "/usr/include/c++/7/bits/stl_algobase.h":224 -1
     (nil))
(insn 11 10 12 2 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 88 [ _2 ])
            (reg:SF 87 [ _1 ]))) "/usr/include/c++/7/bits/stl_algobase.h":224 -1
     (nil))
(jump_insn 12 11 32 2 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 34)
            (pc))) "/usr/include/c++/7/bits/stl_algobase.h":224 617 {*jcc_1}
     (nil)
 -> 34)
;;  succ:       6
;;              4 (FALLTHRU)

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
(note 32 12 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 13 32 14 4 (set (pc)
        (label_ref 20)) "/usr/include/c++/7/bits/stl_algobase.h":224 -1
     (nil)
 -> 20)
;;  succ:       7

(barrier 14 13 34)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
(code_label 34 14 16 6 17 (nil) [1 uses])
(note 16 34 17 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 6 (set (reg/f:DI 89 [ _3 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [13 __b+0 S8 A64])) "/usr/include/c++/7/bits/stl_algobase.h":225 -1
     (nil))
(jump_insn 18 17 19 6 (set (pc)
        (label_ref 23)) "/usr/include/c++/7/bits/stl_algobase.h":225 -1
     (nil)
 -> 23)
;;  succ:       8

(barrier 19 18 20)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
(code_label 20 19 21 7 14 (nil) [1 uses])
(note 21 20 22 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 7 (set (reg/f:DI 89 [ _3 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [13 __a+0 S8 A64])) "/usr/include/c++/7/bits/stl_algobase.h":226 -1
     (nil))
;;  succ:       8 (FALLTHRU)

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
;;              7 (FALLTHRU)
(code_label 23 22 24 8 16 (nil) [1 uses])
(note 24 23 25 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 29 8 (set (reg/f:DI 90 [ <retval> ])
        (reg/f:DI 89 [ _3 ])) -1
     (nil))
(insn 29 25 30 8 (set (reg/i:DI 0 ax)
        (reg/f:DI 90 [ <retval> ])) "/usr/include/c++/7/bits/stl_algobase.h":227 -1
     (nil))
(insn 30 29 0 8 (use (reg/i:DI 0 ax)) "/usr/include/c++/7/bits/stl_algobase.h":227 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function bool CollisionBox::checkCollision(CollisionBox*, sf::Vector2f&, float) (_ZN12CollisionBox14checkCollisionEPS_RN2sf7Vector2IfEEf, funcdef_no=3474, decl_uid=76493, cgraph_uid=915, symbol_order=920)

bool CollisionBox::checkCollision(CollisionBox*, sf::Vector2f&, float) (struct CollisionBox * const this, struct CollisionBox * other, struct Vector2f & direction, float push)
{
  float intersectY;
  float intersectX;
  float deltaY;
  float deltaX;
  struct Vector2f thisHalfSize;
  struct Vector2f thisPosition;
  struct Vector2f otherHalfSize;
  struct Vector2f otherPosition;
  bool D.84858;
  const float D.81073;
  const float D.81077;
  int (*__vtbl_ptr_type) () * _1;
  int (*__vtbl_ptr_type) () * _2;
  int (*__vtbl_ptr_type) () _3;
  int (*__vtbl_ptr_type) () * _4;
  int (*__vtbl_ptr_type) () * _5;
  int (*__vtbl_ptr_type) () _6;
  int (*__vtbl_ptr_type) () * _7;
  int (*__vtbl_ptr_type) () * _8;
  int (*__vtbl_ptr_type) () _9;
  int (*__vtbl_ptr_type) () * _10;
  int (*__vtbl_ptr_type) () * _11;
  int (*__vtbl_ptr_type) () _12;
  float _13;
  float _14;
  float _15;
  float _16;
  float _17;
  float _18;
  float _19;
  float _20;
  float _21;
  float _22;
  float _23;
  float _24;
  const float & _25;
  const float & _26;
  float _27;
  int (*__vtbl_ptr_type) () * _28;
  int (*__vtbl_ptr_type) () _29;
  float push.1_30;
  float _31;
  float _32;
  int (*__vtbl_ptr_type) () * _33;
  int (*__vtbl_ptr_type) () _34;
  float _35;
  float push.2_36;
  float _37;
  int (*__vtbl_ptr_type) () * _38;
  int (*__vtbl_ptr_type) () _39;
  float _40;
  float push.3_41;
  float _42;
  float _43;
  int (*__vtbl_ptr_type) () * _44;
  int (*__vtbl_ptr_type) () _45;
  float push.4_46;
  float _47;
  int (*__vtbl_ptr_type) () * _48;
  int (*__vtbl_ptr_type) () _49;
  float _50;
  float push.5_51;
  float _52;
  float _53;
  int (*__vtbl_ptr_type) () * _54;
  int (*__vtbl_ptr_type) () _55;
  float push.6_56;
  float _57;
  int (*__vtbl_ptr_type) () * _58;
  int (*__vtbl_ptr_type) () _59;
  float push.7_60;
  float _61;
  float _62;
  int (*__vtbl_ptr_type) () * _63;
  int (*__vtbl_ptr_type) () _64;
  float _65;
  float push.8_66;
  float _67;
  bool _68;
  bool _110;
  bool _111;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = other_74(D)->_vptr.CollisionBox;
  _2 = _1 + 8;
  _3 = *_2;
  otherPosition = OBJ_TYPE_REF(_3;(struct CollisionBox)other_74(D)->1) (other_74(D));
  _4 = other_74(D)->_vptr.CollisionBox;
  _5 = _4 + 16;
  _6 = *_5;
  otherHalfSize = OBJ_TYPE_REF(_6;(struct CollisionBox)other_74(D)->2) (other_74(D));
  _7 = this_77(D)->_vptr.CollisionBox;
  _8 = _7 + 8;
  _9 = *_8;
  thisPosition = OBJ_TYPE_REF(_9;(struct CollisionBox)this_77(D)->1) (this_77(D));
  _10 = this_77(D)->_vptr.CollisionBox;
  _11 = _10 + 16;
  _12 = *_11;
  thisHalfSize = OBJ_TYPE_REF(_12;(struct CollisionBox)this_77(D)->2) (this_77(D));
  _13 = otherPosition.x;
  _14 = thisPosition.x;
  deltaX_80 = _13 - _14;
  _15 = otherPosition.y;
  _16 = thisPosition.y;
  deltaY_81 = _15 - _16;
  _17 = std::abs (deltaX_80);
  _18 = otherHalfSize.x;
  _19 = thisHalfSize.x;
  _20 = _18 + _19;
  intersectX_83 = _17 - _20;
  _21 = std::abs (deltaY_81);
  _22 = otherHalfSize.y;
  _23 = thisHalfSize.y;
  _24 = _22 + _23;
  intersectY_85 = _21 - _24;
  if (intersectX_83 < 0.0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 13>; [0.00%]
;;    succ:       3
;;                13

;;   basic block 3, loop depth 0
;;    pred:       2
  if (intersectY_85 < 0.0)
    goto <bb 4>; [0.00%]
  else
    goto <bb 13>; [0.00%]
;;    succ:       4
;;                13

;;   basic block 4, loop depth 0
;;    pred:       3
  D.81077 = 1.0e+0;
  D.81073 = 0.0;
  _25 = std::max<float> (&push, &D.81073);
  _26 = std::min<float> (_25, &D.81077);
  _27 = *_26;
  push = _27;
  D.81073 ={v} {CLOBBER};
  D.81077 ={v} {CLOBBER};
  if (intersectX_83 > intersectY_85)
    goto <bb 5>; [0.00%]
  else
    goto <bb 9>; [0.00%]
;;    succ:       5
;;                9

;;   basic block 5, loop depth 0
;;    pred:       4
  if (deltaX_80 > 0.0)
    goto <bb 6>; [0.00%]
  else
    goto <bb 7>; [0.00%]
;;    succ:       6
;;                7

;;   basic block 6, loop depth 0
;;    pred:       5
  _28 = this_77(D)->_vptr.CollisionBox;
  _29 = *_28;
  push.1_30 = push;
  _31 = 1.0e+0 - push.1_30;
  _32 = intersectX_83 * _31;
  OBJ_TYPE_REF(_29;(struct CollisionBox)this_77(D)->0) (this_77(D), _32, 0.0);
  _33 = other_74(D)->_vptr.CollisionBox;
  _34 = *_33;
  _35 = -intersectX_83;
  push.2_36 = push;
  _37 = _35 * push.2_36;
  OBJ_TYPE_REF(_34;(struct CollisionBox)other_74(D)->0) (other_74(D), _37, 0.0);
  direction_95(D)->x = 1.0e+0;
  direction_95(D)->y = 0.0;
  goto <bb 8>; [0.00%]
;;    succ:       8

;;   basic block 7, loop depth 0
;;    pred:       5
  _38 = this_77(D)->_vptr.CollisionBox;
  _39 = *_38;
  _40 = -intersectX_83;
  push.3_41 = push;
  _42 = 1.0e+0 - push.3_41;
  _43 = _40 * _42;
  OBJ_TYPE_REF(_39;(struct CollisionBox)this_77(D)->0) (this_77(D), _43, 0.0);
  _44 = other_74(D)->_vptr.CollisionBox;
  _45 = *_44;
  push.4_46 = push;
  _47 = intersectX_83 * push.4_46;
  OBJ_TYPE_REF(_45;(struct CollisionBox)other_74(D)->0) (other_74(D), _47, 0.0);
  direction_95(D)->x = -1.0e+0;
  direction_95(D)->y = 0.0;
;;    succ:       8

;;   basic block 8, loop depth 0
;;    pred:       6
;;                7
  goto <bb 12>; [0.00%]
;;    succ:       12

;;   basic block 9, loop depth 0
;;    pred:       4
  if (deltaY_81 < 0.0)
    goto <bb 10>; [0.00%]
  else
    goto <bb 11>; [0.00%]
;;    succ:       10
;;                11

;;   basic block 10, loop depth 0
;;    pred:       9
  _48 = this_77(D)->_vptr.CollisionBox;
  _49 = *_48;
  _50 = -intersectY_85;
  push.5_51 = push;
  _52 = 1.0e+0 - push.5_51;
  _53 = _50 * _52;
  OBJ_TYPE_REF(_49;(struct CollisionBox)this_77(D)->0) (this_77(D), 0.0, _53);
  _54 = other_74(D)->_vptr.CollisionBox;
  _55 = *_54;
  push.6_56 = push;
  _57 = intersectY_85 * push.6_56;
  OBJ_TYPE_REF(_55;(struct CollisionBox)other_74(D)->0) (other_74(D), 0.0, _57);
  direction_95(D)->x = 0.0;
  direction_95(D)->y = 1.0e+0;
  goto <bb 12>; [0.00%]
;;    succ:       12

;;   basic block 11, loop depth 0
;;    pred:       9
  _58 = this_77(D)->_vptr.CollisionBox;
  _59 = *_58;
  push.7_60 = push;
  _61 = 1.0e+0 - push.7_60;
  _62 = intersectY_85 * _61;
  OBJ_TYPE_REF(_59;(struct CollisionBox)this_77(D)->0) (this_77(D), 0.0, _62);
  _63 = other_74(D)->_vptr.CollisionBox;
  _64 = *_63;
  _65 = -intersectY_85;
  push.8_66 = push;
  _67 = _65 * push.8_66;
  OBJ_TYPE_REF(_64;(struct CollisionBox)other_74(D)->0) (other_74(D), 0.0, _67);
  direction_95(D)->x = 0.0;
  direction_95(D)->y = -1.0e+0;
;;    succ:       12

;;   basic block 12, loop depth 0
;;    pred:       8
;;                10
;;                11
  _110 = 1;
  goto <bb 14>; [0.00%]
;;    succ:       14

;;   basic block 13, loop depth 0
;;    pred:       2
;;                3
  _111 = 0;
;;    succ:       14

;;   basic block 14, loop depth 0
;;    pred:       12
;;                13
  # _68 = PHI <_110(12), _111(13)>
  otherPosition ={v} {CLOBBER};
  otherHalfSize ={v} {CLOBBER};
  thisPosition ={v} {CLOBBER};
  thisHalfSize ={v} {CLOBBER};
;;    succ:       15

;;   basic block 15, loop depth 0
;;    pred:       14
<L14> [0.00%]:
  return _68;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (push.1_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (_35 - 35 )
Partition 36 (push.2_36 - 36 )
Partition 37 (_37 - 37 )
Partition 38 (_38 - 38 )
Partition 39 (_39 - 39 )
Partition 40 (_40 - 40 )
Partition 41 (push.3_41 - 41 )
Partition 42 (_42 - 42 )
Partition 43 (_43 - 43 )
Partition 44 (_44 - 44 )
Partition 45 (_45 - 45 )
Partition 46 (push.4_46 - 46 )
Partition 47 (_47 - 47 )
Partition 48 (_48 - 48 )
Partition 49 (_49 - 49 )
Partition 50 (_50 - 50 )
Partition 51 (push.5_51 - 51 )
Partition 52 (_52 - 52 )
Partition 53 (_53 - 53 )
Partition 54 (_54 - 54 )
Partition 55 (_55 - 55 )
Partition 56 (push.6_56 - 56 )
Partition 57 (_57 - 57 )
Partition 58 (_58 - 58 )
Partition 59 (_59 - 59 )
Partition 60 (push.7_60 - 60 )
Partition 61 (_61 - 61 )
Partition 62 (_62 - 62 )
Partition 63 (_63 - 63 )
Partition 64 (_64 - 64 )
Partition 65 (_65 - 65 )
Partition 66 (push.8_66 - 66 )
Partition 67 (_67 - 67 )
Partition 68 (_68 - 68 )
Partition 72 (_72(D) - 72 )
Partition 74 (other_74(D) - 74 )
Partition 77 (this_77(D) - 77 )
Partition 80 (deltaX_80 - 80 )
Partition 81 (deltaY_81 - 81 )
Partition 83 (intersectX_83 - 83 )
Partition 85 (intersectY_85 - 85 )
Partition 95 (direction_95(D) - 95 )
Partition 110 (_110 - 110 )
Partition 111 (_111 - 111 )


Partition map 

Partition 0 (_68 - 68 )
Partition 1 (_72(D) - 72 )
Partition 2 (other_74(D) - 74 )
Partition 3 (this_77(D) - 77 )
Partition 4 (direction_95(D) - 95 )
Partition 5 (_110 - 110 )
Partition 6 (_111 - 111 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (_68 - 68 )
Partition 1 (_72(D) - 72 )
Partition 2 (other_74(D) - 74 )
Partition 3 (this_77(D) - 77 )
Partition 4 (direction_95(D) - 95 )
Partition 5 (_110 - 110 )
Partition 6 (_111 - 111 )

Coalesce list: (68)_68 & (111)_111 [map: 0, 6] : Success -> 0
Coalesce list: (68)_68 & (110)_110 [map: 0, 5] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )
Partition 13 (_14 - 14 )
Partition 14 (_15 - 15 )
Partition 15 (_16 - 16 )
Partition 16 (_17 - 17 )
Partition 17 (_18 - 18 )
Partition 18 (_19 - 19 )
Partition 19 (_20 - 20 )
Partition 20 (_21 - 21 )
Partition 21 (_22 - 22 )
Partition 22 (_23 - 23 )
Partition 23 (_24 - 24 )
Partition 24 (_25 - 25 )
Partition 25 (_26 - 26 )
Partition 26 (_27 - 27 )
Partition 27 (_28 - 28 )
Partition 28 (_29 - 29 )
Partition 29 (push.1_30 - 30 )
Partition 30 (_31 - 31 )
Partition 31 (_32 - 32 )
Partition 32 (_33 - 33 )
Partition 33 (_34 - 34 )
Partition 34 (_35 - 35 )
Partition 35 (push.2_36 - 36 )
Partition 36 (_37 - 37 )
Partition 37 (_38 - 38 )
Partition 38 (_39 - 39 )
Partition 39 (_40 - 40 )
Partition 40 (push.3_41 - 41 )
Partition 41 (_42 - 42 )
Partition 42 (_43 - 43 )
Partition 43 (_44 - 44 )
Partition 44 (_45 - 45 )
Partition 45 (push.4_46 - 46 )
Partition 46 (_47 - 47 )
Partition 47 (_48 - 48 )
Partition 48 (_49 - 49 )
Partition 49 (_50 - 50 )
Partition 50 (push.5_51 - 51 )
Partition 51 (_52 - 52 )
Partition 52 (_53 - 53 )
Partition 53 (_54 - 54 )
Partition 54 (_55 - 55 )
Partition 55 (push.6_56 - 56 )
Partition 56 (_57 - 57 )
Partition 57 (_58 - 58 )
Partition 58 (_59 - 59 )
Partition 59 (push.7_60 - 60 )
Partition 60 (_61 - 61 )
Partition 61 (_62 - 62 )
Partition 62 (_63 - 63 )
Partition 63 (_64 - 64 )
Partition 64 (_65 - 65 )
Partition 65 (push.8_66 - 66 )
Partition 66 (_67 - 67 )
Partition 67 (_68 - 68 110 111 )
Partition 68 (_72(D) - 72 )
Partition 69 (other_74(D) - 74 )
Partition 70 (this_77(D) - 77 )
Partition 71 (deltaX_80 - 80 )
Partition 72 (deltaY_81 - 81 )
Partition 73 (intersectX_83 - 83 )
Partition 74 (intersectY_85 - 85 )
Partition 75 (direction_95(D) - 95 )

bool CollisionBox::checkCollision(CollisionBox*, sf::Vector2f&, float) (struct CollisionBox * const this, struct CollisionBox * other, struct Vector2f & direction, float push)
{
  float intersectY;
  float intersectX;
  float deltaY;
  float deltaX;
  struct Vector2f thisHalfSize;
  struct Vector2f thisPosition;
  struct Vector2f otherHalfSize;
  struct Vector2f otherPosition;
  bool D.84858;
  const float D.81073;
  const float D.81077;
  int (*__vtbl_ptr_type) () * _1;
  int (*__vtbl_ptr_type) () * _2;
  int (*__vtbl_ptr_type) () _3;
  int (*__vtbl_ptr_type) () * _4;
  int (*__vtbl_ptr_type) () * _5;
  int (*__vtbl_ptr_type) () _6;
  int (*__vtbl_ptr_type) () * _7;
  int (*__vtbl_ptr_type) () * _8;
  int (*__vtbl_ptr_type) () _9;
  int (*__vtbl_ptr_type) () * _10;
  int (*__vtbl_ptr_type) () * _11;
  int (*__vtbl_ptr_type) () _12;
  float _13;
  float _14;
  float _15;
  float _16;
  float _17;
  float _18;
  float _19;
  float _20;
  float _21;
  float _22;
  float _23;
  float _24;
  const float & _25;
  const float & _26;
  float _27;
  int (*__vtbl_ptr_type) () * _28;
  int (*__vtbl_ptr_type) () _29;
  float push.1_30;
  float _31;
  float _32;
  int (*__vtbl_ptr_type) () * _33;
  int (*__vtbl_ptr_type) () _34;
  float _35;
  float push.2_36;
  float _37;
  int (*__vtbl_ptr_type) () * _38;
  int (*__vtbl_ptr_type) () _39;
  float _40;
  float push.3_41;
  float _42;
  float _43;
  int (*__vtbl_ptr_type) () * _44;
  int (*__vtbl_ptr_type) () _45;
  float push.4_46;
  float _47;
  int (*__vtbl_ptr_type) () * _48;
  int (*__vtbl_ptr_type) () _49;
  float _50;
  float push.5_51;
  float _52;
  float _53;
  int (*__vtbl_ptr_type) () * _54;
  int (*__vtbl_ptr_type) () _55;
  float push.6_56;
  float _57;
  int (*__vtbl_ptr_type) () * _58;
  int (*__vtbl_ptr_type) () _59;
  float push.7_60;
  float _61;
  float _62;
  int (*__vtbl_ptr_type) () * _63;
  int (*__vtbl_ptr_type) () _64;
  float _65;
  float push.8_66;
  float _67;
  bool _68;
  bool _110;
  bool _111;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = other_74(D)->_vptr.CollisionBox;
  _2 = _1 + 8;
  _3 = *_2;
  otherPosition = OBJ_TYPE_REF(_3;(struct CollisionBox)other_74(D)->1) (other_74(D));
  _4 = other_74(D)->_vptr.CollisionBox;
  _5 = _4 + 16;
  _6 = *_5;
  otherHalfSize = OBJ_TYPE_REF(_6;(struct CollisionBox)other_74(D)->2) (other_74(D));
  _7 = this_77(D)->_vptr.CollisionBox;
  _8 = _7 + 8;
  _9 = *_8;
  thisPosition = OBJ_TYPE_REF(_9;(struct CollisionBox)this_77(D)->1) (this_77(D));
  _10 = this_77(D)->_vptr.CollisionBox;
  _11 = _10 + 16;
  _12 = *_11;
  thisHalfSize = OBJ_TYPE_REF(_12;(struct CollisionBox)this_77(D)->2) (this_77(D));
  _13 = otherPosition.x;
  _14 = thisPosition.x;
  deltaX_80 = _13 - _14;
  _15 = otherPosition.y;
  _16 = thisPosition.y;
  deltaY_81 = _15 - _16;
  _17 = std::abs (deltaX_80);
  _18 = otherHalfSize.x;
  _19 = thisHalfSize.x;
  _20 = _18 + _19;
  intersectX_83 = _17 - _20;
  _21 = std::abs (deltaY_81);
  _22 = otherHalfSize.y;
  _23 = thisHalfSize.y;
  _24 = _22 + _23;
  intersectY_85 = _21 - _24;
  if (intersectX_83 < 0.0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 13>; [0.00%]
;;    succ:       3
;;                13

;;   basic block 3, loop depth 0
;;    pred:       2
  if (intersectY_85 < 0.0)
    goto <bb 4>; [0.00%]
  else
    goto <bb 13>; [0.00%]
;;    succ:       4
;;                13

;;   basic block 4, loop depth 0
;;    pred:       3
  D.81077 = 1.0e+0;
  D.81073 = 0.0;
  _25 = std::max<float> (&push, &D.81073);
  _26 = std::min<float> (_25, &D.81077);
  _27 = *_26;
  push = _27;
  D.81073 ={v} {CLOBBER};
  D.81077 ={v} {CLOBBER};
  if (intersectX_83 > intersectY_85)
    goto <bb 5>; [0.00%]
  else
    goto <bb 9>; [0.00%]
;;    succ:       5
;;                9

;;   basic block 5, loop depth 0
;;    pred:       4
  if (deltaX_80 > 0.0)
    goto <bb 6>; [0.00%]
  else
    goto <bb 7>; [0.00%]
;;    succ:       6
;;                7

;;   basic block 6, loop depth 0
;;    pred:       5
  _28 = this_77(D)->_vptr.CollisionBox;
  _29 = *_28;
  push.1_30 = push;
  _31 = 1.0e+0 - push.1_30;
  _32 = intersectX_83 * _31;
  OBJ_TYPE_REF(_29;(struct CollisionBox)this_77(D)->0) (this_77(D), _32, 0.0);
  _33 = other_74(D)->_vptr.CollisionBox;
  _34 = *_33;
  _35 = -intersectX_83;
  push.2_36 = push;
  _37 = _35 * push.2_36;
  OBJ_TYPE_REF(_34;(struct CollisionBox)other_74(D)->0) (other_74(D), _37, 0.0);
  direction_95(D)->x = 1.0e+0;
  direction_95(D)->y = 0.0;
  goto <bb 8>; [0.00%]
;;    succ:       8

;;   basic block 7, loop depth 0
;;    pred:       5
  _38 = this_77(D)->_vptr.CollisionBox;
  _39 = *_38;
  _40 = -intersectX_83;
  push.3_41 = push;
  _42 = 1.0e+0 - push.3_41;
  _43 = _40 * _42;
  OBJ_TYPE_REF(_39;(struct CollisionBox)this_77(D)->0) (this_77(D), _43, 0.0);
  _44 = other_74(D)->_vptr.CollisionBox;
  _45 = *_44;
  push.4_46 = push;
  _47 = intersectX_83 * push.4_46;
  OBJ_TYPE_REF(_45;(struct CollisionBox)other_74(D)->0) (other_74(D), _47, 0.0);
  direction_95(D)->x = -1.0e+0;
  direction_95(D)->y = 0.0;
;;    succ:       8

;;   basic block 8, loop depth 0
;;    pred:       6
;;                7
  goto <bb 12>; [0.00%]
;;    succ:       12

;;   basic block 9, loop depth 0
;;    pred:       4
  if (deltaY_81 < 0.0)
    goto <bb 10>; [0.00%]
  else
    goto <bb 11>; [0.00%]
;;    succ:       10
;;                11

;;   basic block 10, loop depth 0
;;    pred:       9
  _48 = this_77(D)->_vptr.CollisionBox;
  _49 = *_48;
  _50 = -intersectY_85;
  push.5_51 = push;
  _52 = 1.0e+0 - push.5_51;
  _53 = _50 * _52;
  OBJ_TYPE_REF(_49;(struct CollisionBox)this_77(D)->0) (this_77(D), 0.0, _53);
  _54 = other_74(D)->_vptr.CollisionBox;
  _55 = *_54;
  push.6_56 = push;
  _57 = intersectY_85 * push.6_56;
  OBJ_TYPE_REF(_55;(struct CollisionBox)other_74(D)->0) (other_74(D), 0.0, _57);
  direction_95(D)->x = 0.0;
  direction_95(D)->y = 1.0e+0;
  goto <bb 12>; [0.00%]
;;    succ:       12

;;   basic block 11, loop depth 0
;;    pred:       9
  _58 = this_77(D)->_vptr.CollisionBox;
  _59 = *_58;
  push.7_60 = push;
  _61 = 1.0e+0 - push.7_60;
  _62 = intersectY_85 * _61;
  OBJ_TYPE_REF(_59;(struct CollisionBox)this_77(D)->0) (this_77(D), 0.0, _62);
  _63 = other_74(D)->_vptr.CollisionBox;
  _64 = *_63;
  _65 = -intersectY_85;
  push.8_66 = push;
  _67 = _65 * push.8_66;
  OBJ_TYPE_REF(_64;(struct CollisionBox)other_74(D)->0) (other_74(D), 0.0, _67);
  direction_95(D)->x = 0.0;
  direction_95(D)->y = -1.0e+0;
;;    succ:       12

;;   basic block 12, loop depth 0
;;    pred:       8
;;                10
;;                11
  _110 = 1;
  goto <bb 14>; [0.00%]
;;    succ:       14

;;   basic block 13, loop depth 0
;;    pred:       2
;;                3
  _111 = 0;
;;    succ:       14

;;   basic block 14, loop depth 0
;;    pred:       12
;;                13
  # _68 = PHI <_110(12), _111(13)>
  otherPosition ={v} {CLOBBER};
  otherHalfSize ={v} {CLOBBER};
  thisPosition ={v} {CLOBBER};
  thisHalfSize ={v} {CLOBBER};
;;    succ:       15

;;   basic block 15, loop depth 0
;;    pred:       14
<L14> [0.00%]:
  return _68;
;;    succ:       EXIT

}


Partition 9: size 8 align 4
	thisHalfSize
Partition 8: size 8 align 4
	thisPosition
Partition 7: size 8 align 4
	otherHalfSize
Partition 6: size 8 align 4
	otherPosition
Partition 3: size 4 align 4
	intersectY_85
Partition 2: size 4 align 4
	intersectX_83
Partition 1: size 4 align 4
	deltaY_81
Partition 0: size 4 align 4
	deltaX_80
Partition 5: size 4 align 4
	D.81077
Partition 4: size 4 align 4
	D.81073

;; Generating RTL for gimple basic block 2

;; _1 = other_74(D)->_vptr.CollisionBox;

(insn 10 9 11 (set (reg/f:DI 156)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [9 other+0 S8 A64])) "classes/Collider.cpp":38 -1
     (nil))

(insn 11 10 0 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (reg/f:DI 156) [2 other_74(D)->_vptr.CollisionBox+0 S8 A64])) "classes/Collider.cpp":38 -1
     (nil))

;; _2 = _1 + 8;

(insn 12 11 0 (parallel [
            (set (reg/f:DI 88 [ _2 ])
                (plus:DI (reg/f:DI 87 [ _1 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":38 -1
     (nil))

;; _3 = *_2;

(insn 13 12 0 (set (reg/f:DI 89 [ _3 ])
        (mem/f:DI (reg/f:DI 88 [ _2 ]) [10 *_2+0 S8 A64])) "classes/Collider.cpp":38 -1
     (nil))

;; otherPosition = OBJ_TYPE_REF(_3;other_74(D)->1) (other_74(D));

(insn 14 13 15 (set (reg:DI 157)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [9 other+0 S8 A64])) "classes/Collider.cpp":38 -1
     (nil))

(insn 15 14 16 (set (reg:DI 5 di)
        (reg:DI 157)) "classes/Collider.cpp":38 -1
     (nil))

(call_insn 16 15 17 (set (reg:DI 21 xmm0)
        (call (mem:QI (reg/f:DI 89 [ _3 ]) [0 *OBJ_TYPE_REF(_3;(struct CollisionBox)other_74(D)->1) S1 A8])
            (const_int 0 [0]))) "classes/Collider.cpp":38 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 17 16 18 (set (reg:DI 158)
        (reg:DI 21 xmm0)) "classes/Collider.cpp":38 -1
     (nil))

(insn 18 17 19 (set (reg:DI 159)
        (reg:DI 158)) "classes/Collider.cpp":38 -1
     (nil))

(insn 19 18 0 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [12 otherPosition+0 S8 A64])
        (reg:DI 159)) "classes/Collider.cpp":38 -1
     (nil))

;; _4 = other_74(D)->_vptr.CollisionBox;

(insn 20 19 21 (set (reg/f:DI 160)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [9 other+0 S8 A64])) "classes/Collider.cpp":39 -1
     (nil))

(insn 21 20 0 (set (reg/f:DI 90 [ _4 ])
        (mem/f:DI (reg/f:DI 160) [2 other_74(D)->_vptr.CollisionBox+0 S8 A64])) "classes/Collider.cpp":39 -1
     (nil))

;; _5 = _4 + 16;

(insn 22 21 0 (parallel [
            (set (reg/f:DI 91 [ _5 ])
                (plus:DI (reg/f:DI 90 [ _4 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":39 -1
     (nil))

;; _6 = *_5;

(insn 23 22 0 (set (reg/f:DI 92 [ _6 ])
        (mem/f:DI (reg/f:DI 91 [ _5 ]) [10 *_5+0 S8 A64])) "classes/Collider.cpp":39 -1
     (nil))

;; otherHalfSize = OBJ_TYPE_REF(_6;other_74(D)->2) (other_74(D));

(insn 24 23 25 (set (reg:DI 161)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [9 other+0 S8 A64])) "classes/Collider.cpp":39 -1
     (nil))

(insn 25 24 26 (set (reg:DI 5 di)
        (reg:DI 161)) "classes/Collider.cpp":39 -1
     (nil))

(call_insn 26 25 27 (set (reg:DI 21 xmm0)
        (call (mem:QI (reg/f:DI 92 [ _6 ]) [0 *OBJ_TYPE_REF(_6;(struct CollisionBox)other_74(D)->2) S1 A8])
            (const_int 0 [0]))) "classes/Collider.cpp":39 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 27 26 28 (set (reg:DI 162)
        (reg:DI 21 xmm0)) "classes/Collider.cpp":39 -1
     (nil))

(insn 28 27 29 (set (reg:DI 163)
        (reg:DI 162)) "classes/Collider.cpp":39 -1
     (nil))

(insn 29 28 0 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [12 otherHalfSize+0 S8 A64])
        (reg:DI 163)) "classes/Collider.cpp":39 -1
     (nil))

;; _7 = this_77(D)->_vptr.CollisionBox;

(insn 30 29 31 (set (reg/f:DI 164)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [9 this+0 S8 A64])) "classes/Collider.cpp":40 -1
     (nil))

(insn 31 30 0 (set (reg/f:DI 93 [ _7 ])
        (mem/f:DI (reg/f:DI 164) [2 this_77(D)->_vptr.CollisionBox+0 S8 A64])) "classes/Collider.cpp":40 -1
     (nil))

;; _8 = _7 + 8;

(insn 32 31 0 (parallel [
            (set (reg/f:DI 94 [ _8 ])
                (plus:DI (reg/f:DI 93 [ _7 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":40 -1
     (nil))

;; _9 = *_8;

(insn 33 32 0 (set (reg/f:DI 95 [ _9 ])
        (mem/f:DI (reg/f:DI 94 [ _8 ]) [10 *_8+0 S8 A64])) "classes/Collider.cpp":40 -1
     (nil))

;; thisPosition = OBJ_TYPE_REF(_9;this_77(D)->1) (this_77(D));

(insn 34 33 35 (set (reg:DI 165)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [9 this+0 S8 A64])) "classes/Collider.cpp":40 -1
     (nil))

(insn 35 34 36 (set (reg:DI 5 di)
        (reg:DI 165)) "classes/Collider.cpp":40 -1
     (nil))

(call_insn 36 35 37 (set (reg:DI 21 xmm0)
        (call (mem:QI (reg/f:DI 95 [ _9 ]) [0 *OBJ_TYPE_REF(_9;(struct CollisionBox)this_77(D)->1) S1 A8])
            (const_int 0 [0]))) "classes/Collider.cpp":40 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 37 36 38 (set (reg:DI 166)
        (reg:DI 21 xmm0)) "classes/Collider.cpp":40 -1
     (nil))

(insn 38 37 39 (set (reg:DI 167)
        (reg:DI 166)) "classes/Collider.cpp":40 -1
     (nil))

(insn 39 38 0 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 thisPosition+0 S8 A64])
        (reg:DI 167)) "classes/Collider.cpp":40 -1
     (nil))

;; _10 = this_77(D)->_vptr.CollisionBox;

(insn 40 39 41 (set (reg/f:DI 168)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [9 this+0 S8 A64])) "classes/Collider.cpp":41 -1
     (nil))

(insn 41 40 0 (set (reg/f:DI 96 [ _10 ])
        (mem/f:DI (reg/f:DI 168) [2 this_77(D)->_vptr.CollisionBox+0 S8 A64])) "classes/Collider.cpp":41 -1
     (nil))

;; _11 = _10 + 16;

(insn 42 41 0 (parallel [
            (set (reg/f:DI 97 [ _11 ])
                (plus:DI (reg/f:DI 96 [ _10 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":41 -1
     (nil))

;; _12 = *_11;

(insn 43 42 0 (set (reg/f:DI 98 [ _12 ])
        (mem/f:DI (reg/f:DI 97 [ _11 ]) [10 *_11+0 S8 A64])) "classes/Collider.cpp":41 -1
     (nil))

;; thisHalfSize = OBJ_TYPE_REF(_12;this_77(D)->2) (this_77(D));

(insn 44 43 45 (set (reg:DI 169)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [9 this+0 S8 A64])) "classes/Collider.cpp":41 -1
     (nil))

(insn 45 44 46 (set (reg:DI 5 di)
        (reg:DI 169)) "classes/Collider.cpp":41 -1
     (nil))

(call_insn 46 45 47 (set (reg:DI 21 xmm0)
        (call (mem:QI (reg/f:DI 98 [ _12 ]) [0 *OBJ_TYPE_REF(_12;(struct CollisionBox)this_77(D)->2) S1 A8])
            (const_int 0 [0]))) "classes/Collider.cpp":41 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 47 46 48 (set (reg:DI 170)
        (reg:DI 21 xmm0)) "classes/Collider.cpp":41 -1
     (nil))

(insn 48 47 49 (set (reg:DI 171)
        (reg:DI 170)) "classes/Collider.cpp":41 -1
     (nil))

(insn 49 48 0 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [12 thisHalfSize+0 S8 A64])
        (reg:DI 171)) "classes/Collider.cpp":41 -1
     (nil))

;; _13 = otherPosition.x;

(insn 50 49 0 (set (reg:SF 99 [ _13 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [5 otherPosition.x+0 S4 A64])) "classes/Collider.cpp":43 -1
     (nil))

;; _14 = thisPosition.x;

(insn 51 50 0 (set (reg:SF 100 [ _14 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [5 thisPosition.x+0 S4 A64])) "classes/Collider.cpp":43 -1
     (nil))

;; deltaX_80 = _13 - _14;

(insn 52 51 53 (set (reg:SF 172)
        (minus:SF (reg:SF 99 [ _13 ])
            (reg:SF 100 [ _14 ]))) "classes/Collider.cpp":43 -1
     (nil))

(insn 53 52 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [5 deltaX+0 S4 A32])
        (reg:SF 172)) "classes/Collider.cpp":43 -1
     (nil))

;; _15 = otherPosition.y;

(insn 54 53 0 (set (reg:SF 101 [ _15 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [5 otherPosition.y+0 S4 A32])) "classes/Collider.cpp":44 -1
     (nil))

;; _16 = thisPosition.y;

(insn 55 54 0 (set (reg:SF 102 [ _16 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [5 thisPosition.y+0 S4 A32])) "classes/Collider.cpp":44 -1
     (nil))

;; deltaY_81 = _15 - _16;

(insn 56 55 57 (set (reg:SF 173)
        (minus:SF (reg:SF 101 [ _15 ])
            (reg:SF 102 [ _16 ]))) "classes/Collider.cpp":44 -1
     (nil))

(insn 57 56 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [5 deltaY+0 S4 A32])
        (reg:SF 173)) "classes/Collider.cpp":44 -1
     (nil))

;; _17 = std::abs (deltaX_80);

(insn 58 57 59 (set (reg:SF 174)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [5 deltaX+0 S4 A32])) "classes/Collider.cpp":46 -1
     (nil))

(insn 59 58 60 (set (reg:SF 21 xmm0)
        (reg:SF 174)) "classes/Collider.cpp":46 -1
     (nil))

(call_insn 60 59 61 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt3absf") [flags 0x3]  <function_decl 0x7f71b7ca1400 abs>) [0 abs S1 A8])
            (const_int 0 [0]))) "classes/Collider.cpp":46 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))

(insn 61 60 0 (set (reg:SF 103 [ _17 ])
        (reg:SF 21 xmm0)) "classes/Collider.cpp":46 -1
     (nil))

;; _18 = otherHalfSize.x;

(insn 62 61 0 (set (reg:SF 104 [ _18 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [5 otherHalfSize.x+0 S4 A64])) "classes/Collider.cpp":46 -1
     (nil))

;; _19 = thisHalfSize.x;

(insn 63 62 0 (set (reg:SF 105 [ _19 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [5 thisHalfSize.x+0 S4 A64])) "classes/Collider.cpp":46 -1
     (nil))

;; _20 = _18 + _19;

(insn 64 63 0 (set (reg:SF 106 [ _20 ])
        (plus:SF (reg:SF 104 [ _18 ])
            (reg:SF 105 [ _19 ]))) "classes/Collider.cpp":46 -1
     (nil))

;; intersectX_83 = _17 - _20;

(insn 65 64 66 (set (reg:SF 175)
        (minus:SF (reg:SF 103 [ _17 ])
            (reg:SF 106 [ _20 ]))) "classes/Collider.cpp":46 -1
     (nil))

(insn 66 65 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [5 intersectX+0 S4 A32])
        (reg:SF 175)) "classes/Collider.cpp":46 -1
     (nil))

;; _21 = std::abs (deltaY_81);

(insn 67 66 68 (set (reg:SF 176)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [5 deltaY+0 S4 A32])) "classes/Collider.cpp":47 -1
     (nil))

(insn 68 67 69 (set (reg:SF 21 xmm0)
        (reg:SF 176)) "classes/Collider.cpp":47 -1
     (nil))

(call_insn 69 68 70 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt3absf") [flags 0x3]  <function_decl 0x7f71b7ca1400 abs>) [0 abs S1 A8])
            (const_int 0 [0]))) "classes/Collider.cpp":47 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))

(insn 70 69 0 (set (reg:SF 107 [ _21 ])
        (reg:SF 21 xmm0)) "classes/Collider.cpp":47 -1
     (nil))

;; _22 = otherHalfSize.y;

(insn 71 70 0 (set (reg:SF 108 [ _22 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [5 otherHalfSize.y+0 S4 A32])) "classes/Collider.cpp":47 -1
     (nil))

;; _23 = thisHalfSize.y;

(insn 72 71 0 (set (reg:SF 109 [ _23 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [5 thisHalfSize.y+0 S4 A32])) "classes/Collider.cpp":47 -1
     (nil))

;; _24 = _22 + _23;

(insn 73 72 0 (set (reg:SF 110 [ _24 ])
        (plus:SF (reg:SF 108 [ _22 ])
            (reg:SF 109 [ _23 ]))) "classes/Collider.cpp":47 -1
     (nil))

;; intersectY_85 = _21 - _24;

(insn 74 73 75 (set (reg:SF 177)
        (minus:SF (reg:SF 107 [ _21 ])
            (reg:SF 110 [ _24 ]))) "classes/Collider.cpp":47 -1
     (nil))

(insn 75 74 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [5 intersectY+0 S4 A32])
        (reg:SF 177)) "classes/Collider.cpp":47 -1
     (nil))

;; if (intersectX_83 < 0.0)

(insn 76 75 77 (set (reg:SF 178)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":49 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))

(insn 77 76 78 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 178)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [5 intersectX+0 S4 A32]))) "classes/Collider.cpp":49 -1
     (nil))

(jump_insn 78 77 79 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 81)
            (pc))) "classes/Collider.cpp":49 -1
     (nil))

(jump_insn 79 78 80 (set (pc)
        (label_ref 0)) "classes/Collider.cpp":49 -1
     (nil))

(barrier 80 79 81)

(code_label 81 80 0 21 (nil) [0 uses])

;; Generating RTL for gimple basic block 3

;; if (intersectY_85 < 0.0)

(insn 83 82 84 (set (reg:SF 179)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":49 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))

(insn 84 83 85 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 179)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -44 [0xffffffffffffffd4])) [5 intersectY+0 S4 A32]))) "classes/Collider.cpp":49 -1
     (nil))

(jump_insn 85 84 86 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) "classes/Collider.cpp":49 -1
     (nil))

(jump_insn 86 85 87 (set (pc)
        (label_ref 0)) "classes/Collider.cpp":49 -1
     (nil))

(barrier 87 86 88)

(code_label 88 87 0 22 (nil) [0 uses])

;; Generating RTL for gimple basic block 4

;; D.81077 = 1.0e+0;

(insn 90 89 91 (set (reg:SF 180)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":50 -1
     (nil))

(insn 91 90 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -60 [0xffffffffffffffc4])) [5 D.81077+0 S4 A32])
        (reg:SF 180)) "classes/Collider.cpp":50 -1
     (nil))

;; D.81073 = 0.0;

(insn 92 91 93 (set (reg:SF 181)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":50 -1
     (nil))

(insn 93 92 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [5 D.81073+0 S4 A64])
        (reg:SF 181)) "classes/Collider.cpp":50 -1
     (nil))

;; _25 = std::max<float> (&push, &D.81073);

(insn 94 93 95 (parallel [
            (set (reg:DI 182)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":50 -1
     (nil))

(insn 95 94 96 (parallel [
            (set (reg:DI 183)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -92 [0xffffffffffffffa4])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":50 -1
     (nil))

(insn 96 95 97 (set (reg:DI 4 si)
        (reg:DI 182)) "classes/Collider.cpp":50 -1
     (nil))

(insn 97 96 98 (set (reg:DI 5 di)
        (reg:DI 183)) "classes/Collider.cpp":50 -1
     (nil))

(call_insn 98 97 99 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt3maxIfERKT_S2_S2_") [flags 0x3]  <function_decl 0x7f71b547bb00 max>) [0 max S1 A8])
            (const_int 0 [0]))) "classes/Collider.cpp":50 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 99 98 0 (set (reg/f:DI 111 [ _25 ])
        (reg:DI 0 ax)) "classes/Collider.cpp":50 -1
     (nil))

;; _26 = std::min<float> (_25, &D.81077);

(insn 100 99 101 (parallel [
            (set (reg:DI 184)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -60 [0xffffffffffffffc4])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":50 -1
     (nil))

(insn 101 100 102 (set (reg:DI 4 si)
        (reg:DI 184)) "classes/Collider.cpp":50 -1
     (nil))

(insn 102 101 103 (set (reg:DI 5 di)
        (reg/f:DI 111 [ _25 ])) "classes/Collider.cpp":50 -1
     (nil))

(call_insn 103 102 104 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt3minIfERKT_S2_S2_") [flags 0x3]  <function_decl 0x7f71b547bc00 min>) [0 min S1 A8])
            (const_int 0 [0]))) "classes/Collider.cpp":50 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 104 103 0 (set (reg/f:DI 112 [ _26 ])
        (reg:DI 0 ax)) "classes/Collider.cpp":50 -1
     (nil))

;; _27 = *_26;

(insn 105 104 0 (set (reg:SF 113 [ _27 ])
        (mem:SF (reg/f:DI 112 [ _26 ]) [5 *_26+0 S4 A32])) "classes/Collider.cpp":50 -1
     (nil))

;; push = _27;

(insn 106 105 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -92 [0xffffffffffffffa4])) [5 push+0 S4 A32])
        (reg:SF 113 [ _27 ])) "classes/Collider.cpp":50 -1
     (nil))

;; D.81073 ={v} {CLOBBER};

(nil)

;; D.81077 ={v} {CLOBBER};

(nil)

;; if (intersectX_83 > intersectY_85)

(insn 107 106 108 (set (reg:SF 185)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [5 intersectX+0 S4 A32])) "classes/Collider.cpp":52 -1
     (nil))

(insn 108 107 109 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 185)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -44 [0xffffffffffffffd4])) [5 intersectY+0 S4 A32]))) "classes/Collider.cpp":52 -1
     (nil))

(jump_insn 109 108 110 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 112)
            (pc))) "classes/Collider.cpp":52 -1
     (nil))

(jump_insn 110 109 111 (set (pc)
        (label_ref 0)) "classes/Collider.cpp":52 -1
     (nil))

(barrier 111 110 112)

(code_label 112 111 0 24 (nil) [0 uses])

;; Generating RTL for gimple basic block 5

;; if (deltaX_80 > 0.0)

(insn 114 113 115 (set (reg:SF 186)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [5 deltaX+0 S4 A32])) "classes/Collider.cpp":53 -1
     (nil))

(insn 115 114 116 (set (reg:SF 187)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":53 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))

(insn 116 115 117 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 186)
            (reg:SF 187))) "classes/Collider.cpp":53 -1
     (nil))

(jump_insn 117 116 118 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 120)
            (pc))) "classes/Collider.cpp":53 -1
     (nil))

(jump_insn 118 117 119 (set (pc)
        (label_ref 0)) "classes/Collider.cpp":53 -1
     (nil))

(barrier 119 118 120)

(code_label 120 119 0 26 (nil) [0 uses])

;; Generating RTL for gimple basic block 6

;; _28 = this_77(D)->_vptr.CollisionBox;

(insn 122 121 123 (set (reg/f:DI 188)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [9 this+0 S8 A64])) "classes/Collider.cpp":54 -1
     (nil))

(insn 123 122 0 (set (reg/f:DI 114 [ _28 ])
        (mem/f:DI (reg/f:DI 188) [2 this_77(D)->_vptr.CollisionBox+0 S8 A64])) "classes/Collider.cpp":54 -1
     (nil))

;; _29 = *_28;

(insn 124 123 0 (set (reg/f:DI 115 [ _29 ])
        (mem/f:DI (reg/f:DI 114 [ _28 ]) [10 *_28+0 S8 A64])) "classes/Collider.cpp":54 -1
     (nil))

;; push.1_30 = push;

(insn 125 124 0 (set (reg:SF 116 [ push.1_30 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -92 [0xffffffffffffffa4])) [5 push+0 S4 A32])) "classes/Collider.cpp":54 -1
     (nil))

;; _31 = 1.0e+0 - push.1_30;

(insn 126 125 127 (set (reg:SF 189)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":54 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))

(insn 127 126 0 (set (reg:SF 117 [ _31 ])
        (minus:SF (reg:SF 189)
            (reg:SF 116 [ push.1_30 ]))) "classes/Collider.cpp":54 -1
     (nil))

;; _32 = intersectX_83 * _31;

(insn 128 127 0 (set (reg:SF 118 [ _32 ])
        (mult:SF (reg:SF 117 [ _31 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [5 intersectX+0 S4 A32]))) "classes/Collider.cpp":54 -1
     (nil))

;; OBJ_TYPE_REF(_29;this_77(D)->0) (this_77(D), _32, 0.0);

(insn 129 128 130 (set (reg:DI 190)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [9 this+0 S8 A64])) "classes/Collider.cpp":54 -1
     (nil))

(insn 130 129 131 (set (reg:SF 22 xmm1)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":54 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))

(insn 131 130 132 (set (reg:SF 21 xmm0)
        (reg:SF 118 [ _32 ])) "classes/Collider.cpp":54 -1
     (nil))

(insn 132 131 133 (set (reg:DI 5 di)
        (reg:DI 190)) "classes/Collider.cpp":54 -1
     (nil))

(call_insn 133 132 0 (call (mem:QI (reg/f:DI 115 [ _29 ]) [0 *OBJ_TYPE_REF(_29;(struct CollisionBox)this_77(D)->0) S1 A8])
        (const_int 0 [0])) "classes/Collider.cpp":54 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SF (use (reg:SF 21 xmm0))
            (expr_list:SF (use (reg:SF 22 xmm1))
                (nil)))))

;; _33 = other_74(D)->_vptr.CollisionBox;

(insn 134 133 135 (set (reg/f:DI 191)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [9 other+0 S8 A64])) "classes/Collider.cpp":55 -1
     (nil))

(insn 135 134 0 (set (reg/f:DI 119 [ _33 ])
        (mem/f:DI (reg/f:DI 191) [2 other_74(D)->_vptr.CollisionBox+0 S8 A64])) "classes/Collider.cpp":55 -1
     (nil))

;; _34 = *_33;

(insn 136 135 0 (set (reg/f:DI 120 [ _34 ])
        (mem/f:DI (reg/f:DI 119 [ _33 ]) [10 *_33+0 S8 A64])) "classes/Collider.cpp":55 -1
     (nil))

;; _35 = -intersectX_83;

(insn 137 136 138 (set (reg:SF 192)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [5 intersectX+0 S4 A32])) "classes/Collider.cpp":55 -1
     (nil))

(insn 138 137 139 (set (reg:V4SF 193)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [5  S16 A128])) "classes/Collider.cpp":55 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))

(insn 139 138 0 (parallel [
            (set (reg:SF 121 [ _35 ])
                (neg:SF (reg:SF 192)))
            (use (reg:V4SF 193))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":55 -1
     (expr_list:REG_EQUAL (neg:SF (reg:SF 192))
        (nil)))

;; push.2_36 = push;

(insn 140 139 0 (set (reg:SF 122 [ push.2_36 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -92 [0xffffffffffffffa4])) [5 push+0 S4 A32])) "classes/Collider.cpp":55 -1
     (nil))

;; _37 = _35 * push.2_36;

(insn 141 140 0 (set (reg:SF 123 [ _37 ])
        (mult:SF (reg:SF 121 [ _35 ])
            (reg:SF 122 [ push.2_36 ]))) "classes/Collider.cpp":55 -1
     (nil))

;; OBJ_TYPE_REF(_34;other_74(D)->0) (other_74(D), _37, 0.0);

(insn 142 141 143 (set (reg:DI 194)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [9 other+0 S8 A64])) "classes/Collider.cpp":55 -1
     (nil))

(insn 143 142 144 (set (reg:SF 22 xmm1)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":55 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))

(insn 144 143 145 (set (reg:SF 21 xmm0)
        (reg:SF 123 [ _37 ])) "classes/Collider.cpp":55 -1
     (nil))

(insn 145 144 146 (set (reg:DI 5 di)
        (reg:DI 194)) "classes/Collider.cpp":55 -1
     (nil))

(call_insn 146 145 0 (call (mem:QI (reg/f:DI 120 [ _34 ]) [0 *OBJ_TYPE_REF(_34;(struct CollisionBox)other_74(D)->0) S1 A8])
        (const_int 0 [0])) "classes/Collider.cpp":55 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SF (use (reg:SF 21 xmm0))
            (expr_list:SF (use (reg:SF 22 xmm1))
                (nil)))))

;; direction_95(D)->x = 1.0e+0;

(insn 147 146 148 (set (reg/f:DI 195)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [15 direction+0 S8 A64])) "classes/Collider.cpp":57 -1
     (nil))

(insn 148 147 149 (set (reg:SF 196)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":57 -1
     (nil))

(insn 149 148 0 (set (mem:SF (reg/f:DI 195) [5 direction_95(D)->x+0 S4 A32])
        (reg:SF 196)) "classes/Collider.cpp":57 -1
     (nil))

;; direction_95(D)->y = 0.0;

(insn 150 149 151 (set (reg/f:DI 197)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [15 direction+0 S8 A64])) "classes/Collider.cpp":58 -1
     (nil))

(insn 151 150 152 (set (reg:SF 198)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":58 -1
     (nil))

(insn 152 151 0 (set (mem:SF (plus:DI (reg/f:DI 197)
                (const_int 4 [0x4])) [5 direction_95(D)->y+0 S4 A32])
        (reg:SF 198)) "classes/Collider.cpp":58 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 155 154 156 25 (nil) [0 uses])

(note 156 155 0 NOTE_INSN_BASIC_BLOCK)

;; _38 = this_77(D)->_vptr.CollisionBox;

(insn 157 156 158 (set (reg/f:DI 199)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [9 this+0 S8 A64])) "classes/Collider.cpp":60 -1
     (nil))

(insn 158 157 0 (set (reg/f:DI 124 [ _38 ])
        (mem/f:DI (reg/f:DI 199) [2 this_77(D)->_vptr.CollisionBox+0 S8 A64])) "classes/Collider.cpp":60 -1
     (nil))

;; _39 = *_38;

(insn 159 158 0 (set (reg/f:DI 125 [ _39 ])
        (mem/f:DI (reg/f:DI 124 [ _38 ]) [10 *_38+0 S8 A64])) "classes/Collider.cpp":60 -1
     (nil))

;; _40 = -intersectX_83;

(insn 160 159 161 (set (reg:SF 200)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [5 intersectX+0 S4 A32])) "classes/Collider.cpp":60 -1
     (nil))

(insn 161 160 162 (set (reg:V4SF 201)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [5  S16 A128])) "classes/Collider.cpp":60 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))

(insn 162 161 0 (parallel [
            (set (reg:SF 126 [ _40 ])
                (neg:SF (reg:SF 200)))
            (use (reg:V4SF 201))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":60 -1
     (expr_list:REG_EQUAL (neg:SF (reg:SF 200))
        (nil)))

;; push.3_41 = push;

(insn 163 162 0 (set (reg:SF 127 [ push.3_41 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -92 [0xffffffffffffffa4])) [5 push+0 S4 A32])) "classes/Collider.cpp":60 -1
     (nil))

;; _42 = 1.0e+0 - push.3_41;

(insn 164 163 165 (set (reg:SF 202)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":60 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))

(insn 165 164 0 (set (reg:SF 128 [ _42 ])
        (minus:SF (reg:SF 202)
            (reg:SF 127 [ push.3_41 ]))) "classes/Collider.cpp":60 -1
     (nil))

;; _43 = _40 * _42;

(insn 166 165 0 (set (reg:SF 129 [ _43 ])
        (mult:SF (reg:SF 126 [ _40 ])
            (reg:SF 128 [ _42 ]))) "classes/Collider.cpp":60 -1
     (nil))

;; OBJ_TYPE_REF(_39;this_77(D)->0) (this_77(D), _43, 0.0);

(insn 167 166 168 (set (reg:DI 203)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [9 this+0 S8 A64])) "classes/Collider.cpp":60 -1
     (nil))

(insn 168 167 169 (set (reg:SF 22 xmm1)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":60 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))

(insn 169 168 170 (set (reg:SF 21 xmm0)
        (reg:SF 129 [ _43 ])) "classes/Collider.cpp":60 -1
     (nil))

(insn 170 169 171 (set (reg:DI 5 di)
        (reg:DI 203)) "classes/Collider.cpp":60 -1
     (nil))

(call_insn 171 170 0 (call (mem:QI (reg/f:DI 125 [ _39 ]) [0 *OBJ_TYPE_REF(_39;(struct CollisionBox)this_77(D)->0) S1 A8])
        (const_int 0 [0])) "classes/Collider.cpp":60 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SF (use (reg:SF 21 xmm0))
            (expr_list:SF (use (reg:SF 22 xmm1))
                (nil)))))

;; _44 = other_74(D)->_vptr.CollisionBox;

(insn 172 171 173 (set (reg/f:DI 204)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [9 other+0 S8 A64])) "classes/Collider.cpp":61 -1
     (nil))

(insn 173 172 0 (set (reg/f:DI 130 [ _44 ])
        (mem/f:DI (reg/f:DI 204) [2 other_74(D)->_vptr.CollisionBox+0 S8 A64])) "classes/Collider.cpp":61 -1
     (nil))

;; _45 = *_44;

(insn 174 173 0 (set (reg/f:DI 131 [ _45 ])
        (mem/f:DI (reg/f:DI 130 [ _44 ]) [10 *_44+0 S8 A64])) "classes/Collider.cpp":61 -1
     (nil))

;; push.4_46 = push;

(insn 175 174 0 (set (reg:SF 132 [ push.4_46 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -92 [0xffffffffffffffa4])) [5 push+0 S4 A32])) "classes/Collider.cpp":61 -1
     (nil))

;; _47 = intersectX_83 * push.4_46;

(insn 176 175 0 (set (reg:SF 133 [ _47 ])
        (mult:SF (reg:SF 132 [ push.4_46 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [5 intersectX+0 S4 A32]))) "classes/Collider.cpp":61 -1
     (nil))

;; OBJ_TYPE_REF(_45;other_74(D)->0) (other_74(D), _47, 0.0);

(insn 177 176 178 (set (reg:DI 205)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [9 other+0 S8 A64])) "classes/Collider.cpp":61 -1
     (nil))

(insn 178 177 179 (set (reg:SF 22 xmm1)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":61 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))

(insn 179 178 180 (set (reg:SF 21 xmm0)
        (reg:SF 133 [ _47 ])) "classes/Collider.cpp":61 -1
     (nil))

(insn 180 179 181 (set (reg:DI 5 di)
        (reg:DI 205)) "classes/Collider.cpp":61 -1
     (nil))

(call_insn 181 180 0 (call (mem:QI (reg/f:DI 131 [ _45 ]) [0 *OBJ_TYPE_REF(_45;(struct CollisionBox)other_74(D)->0) S1 A8])
        (const_int 0 [0])) "classes/Collider.cpp":61 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SF (use (reg:SF 21 xmm0))
            (expr_list:SF (use (reg:SF 22 xmm1))
                (nil)))))

;; direction_95(D)->x = -1.0e+0;

(insn 182 181 183 (set (reg/f:DI 206)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [15 direction+0 S8 A64])) "classes/Collider.cpp":63 -1
     (nil))

(insn 183 182 184 (set (reg:SF 207)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":63 -1
     (nil))

(insn 184 183 0 (set (mem:SF (reg/f:DI 206) [5 direction_95(D)->x+0 S4 A32])
        (reg:SF 207)) "classes/Collider.cpp":63 -1
     (nil))

;; direction_95(D)->y = 0.0;

(insn 185 184 186 (set (reg/f:DI 208)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [15 direction+0 S8 A64])) "classes/Collider.cpp":64 -1
     (nil))

(insn 186 185 187 (set (reg:SF 209)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":64 -1
     (nil))

(insn 187 186 0 (set (mem:SF (plus:DI (reg/f:DI 208)
                (const_int 4 [0x4])) [5 direction_95(D)->y+0 S4 A32])
        (reg:SF 209)) "classes/Collider.cpp":64 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 188 187 189 27 (nil) [0 uses])

(note 189 188 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 9

;; 

(code_label 192 191 193 23 (nil) [0 uses])

(note 193 192 0 NOTE_INSN_BASIC_BLOCK)

;; if (deltaY_81 < 0.0)

(insn 194 193 195 (set (reg:SF 210)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":67 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))

(insn 195 194 196 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 210)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -52 [0xffffffffffffffcc])) [5 deltaY+0 S4 A32]))) "classes/Collider.cpp":67 -1
     (nil))

(jump_insn 196 195 197 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 199)
            (pc))) "classes/Collider.cpp":67 -1
     (nil))

(jump_insn 197 196 198 (set (pc)
        (label_ref 0)) "classes/Collider.cpp":67 -1
     (nil))

(barrier 198 197 199)

(code_label 199 198 0 30 (nil) [0 uses])

;; Generating RTL for gimple basic block 10

;; _48 = this_77(D)->_vptr.CollisionBox;

(insn 201 200 202 (set (reg/f:DI 211)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [9 this+0 S8 A64])) "classes/Collider.cpp":68 -1
     (nil))

(insn 202 201 0 (set (reg/f:DI 134 [ _48 ])
        (mem/f:DI (reg/f:DI 211) [2 this_77(D)->_vptr.CollisionBox+0 S8 A64])) "classes/Collider.cpp":68 -1
     (nil))

;; _49 = *_48;

(insn 203 202 0 (set (reg/f:DI 135 [ _49 ])
        (mem/f:DI (reg/f:DI 134 [ _48 ]) [10 *_48+0 S8 A64])) "classes/Collider.cpp":68 -1
     (nil))

;; _50 = -intersectY_85;

(insn 204 203 205 (set (reg:SF 212)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [5 intersectY+0 S4 A32])) "classes/Collider.cpp":68 -1
     (nil))

(insn 205 204 206 (set (reg:V4SF 213)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [5  S16 A128])) "classes/Collider.cpp":68 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))

(insn 206 205 0 (parallel [
            (set (reg:SF 136 [ _50 ])
                (neg:SF (reg:SF 212)))
            (use (reg:V4SF 213))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":68 -1
     (expr_list:REG_EQUAL (neg:SF (reg:SF 212))
        (nil)))

;; push.5_51 = push;

(insn 207 206 0 (set (reg:SF 137 [ push.5_51 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -92 [0xffffffffffffffa4])) [5 push+0 S4 A32])) "classes/Collider.cpp":68 -1
     (nil))

;; _52 = 1.0e+0 - push.5_51;

(insn 208 207 209 (set (reg:SF 214)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":68 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))

(insn 209 208 0 (set (reg:SF 138 [ _52 ])
        (minus:SF (reg:SF 214)
            (reg:SF 137 [ push.5_51 ]))) "classes/Collider.cpp":68 -1
     (nil))

;; _53 = _50 * _52;

(insn 210 209 0 (set (reg:SF 139 [ _53 ])
        (mult:SF (reg:SF 136 [ _50 ])
            (reg:SF 138 [ _52 ]))) "classes/Collider.cpp":68 -1
     (nil))

;; OBJ_TYPE_REF(_49;this_77(D)->0) (this_77(D), 0.0, _53);

(insn 211 210 212 (set (reg:DI 215)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [9 this+0 S8 A64])) "classes/Collider.cpp":68 -1
     (nil))

(insn 212 211 213 (set (reg:SF 22 xmm1)
        (reg:SF 139 [ _53 ])) "classes/Collider.cpp":68 -1
     (nil))

(insn 213 212 214 (set (reg:SF 21 xmm0)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":68 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))

(insn 214 213 215 (set (reg:DI 5 di)
        (reg:DI 215)) "classes/Collider.cpp":68 -1
     (nil))

(call_insn 215 214 0 (call (mem:QI (reg/f:DI 135 [ _49 ]) [0 *OBJ_TYPE_REF(_49;(struct CollisionBox)this_77(D)->0) S1 A8])
        (const_int 0 [0])) "classes/Collider.cpp":68 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SF (use (reg:SF 21 xmm0))
            (expr_list:SF (use (reg:SF 22 xmm1))
                (nil)))))

;; _54 = other_74(D)->_vptr.CollisionBox;

(insn 216 215 217 (set (reg/f:DI 216)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [9 other+0 S8 A64])) "classes/Collider.cpp":69 -1
     (nil))

(insn 217 216 0 (set (reg/f:DI 140 [ _54 ])
        (mem/f:DI (reg/f:DI 216) [2 other_74(D)->_vptr.CollisionBox+0 S8 A64])) "classes/Collider.cpp":69 -1
     (nil))

;; _55 = *_54;

(insn 218 217 0 (set (reg/f:DI 141 [ _55 ])
        (mem/f:DI (reg/f:DI 140 [ _54 ]) [10 *_54+0 S8 A64])) "classes/Collider.cpp":69 -1
     (nil))

;; push.6_56 = push;

(insn 219 218 0 (set (reg:SF 142 [ push.6_56 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -92 [0xffffffffffffffa4])) [5 push+0 S4 A32])) "classes/Collider.cpp":69 -1
     (nil))

;; _57 = intersectY_85 * push.6_56;

(insn 220 219 0 (set (reg:SF 143 [ _57 ])
        (mult:SF (reg:SF 142 [ push.6_56 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -44 [0xffffffffffffffd4])) [5 intersectY+0 S4 A32]))) "classes/Collider.cpp":69 -1
     (nil))

;; OBJ_TYPE_REF(_55;other_74(D)->0) (other_74(D), 0.0, _57);

(insn 221 220 222 (set (reg:DI 217)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [9 other+0 S8 A64])) "classes/Collider.cpp":69 -1
     (nil))

(insn 222 221 223 (set (reg:SF 22 xmm1)
        (reg:SF 143 [ _57 ])) "classes/Collider.cpp":69 -1
     (nil))

(insn 223 222 224 (set (reg:SF 21 xmm0)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":69 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))

(insn 224 223 225 (set (reg:DI 5 di)
        (reg:DI 217)) "classes/Collider.cpp":69 -1
     (nil))

(call_insn 225 224 0 (call (mem:QI (reg/f:DI 141 [ _55 ]) [0 *OBJ_TYPE_REF(_55;(struct CollisionBox)other_74(D)->0) S1 A8])
        (const_int 0 [0])) "classes/Collider.cpp":69 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SF (use (reg:SF 21 xmm0))
            (expr_list:SF (use (reg:SF 22 xmm1))
                (nil)))))

;; direction_95(D)->x = 0.0;

(insn 226 225 227 (set (reg/f:DI 218)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [15 direction+0 S8 A64])) "classes/Collider.cpp":71 -1
     (nil))

(insn 227 226 228 (set (reg:SF 219)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":71 -1
     (nil))

(insn 228 227 0 (set (mem:SF (reg/f:DI 218) [5 direction_95(D)->x+0 S4 A32])
        (reg:SF 219)) "classes/Collider.cpp":71 -1
     (nil))

;; direction_95(D)->y = 1.0e+0;

(insn 229 228 230 (set (reg/f:DI 220)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [15 direction+0 S8 A64])) "classes/Collider.cpp":72 -1
     (nil))

(insn 230 229 231 (set (reg:SF 221)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":72 -1
     (nil))

(insn 231 230 0 (set (mem:SF (plus:DI (reg/f:DI 220)
                (const_int 4 [0x4])) [5 direction_95(D)->y+0 S4 A32])
        (reg:SF 221)) "classes/Collider.cpp":72 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; 

(code_label 234 233 235 29 (nil) [0 uses])

(note 235 234 0 NOTE_INSN_BASIC_BLOCK)

;; _58 = this_77(D)->_vptr.CollisionBox;

(insn 236 235 237 (set (reg/f:DI 222)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [9 this+0 S8 A64])) "classes/Collider.cpp":74 -1
     (nil))

(insn 237 236 0 (set (reg/f:DI 144 [ _58 ])
        (mem/f:DI (reg/f:DI 222) [2 this_77(D)->_vptr.CollisionBox+0 S8 A64])) "classes/Collider.cpp":74 -1
     (nil))

;; _59 = *_58;

(insn 238 237 0 (set (reg/f:DI 145 [ _59 ])
        (mem/f:DI (reg/f:DI 144 [ _58 ]) [10 *_58+0 S8 A64])) "classes/Collider.cpp":74 -1
     (nil))

;; push.7_60 = push;

(insn 239 238 0 (set (reg:SF 146 [ push.7_60 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -92 [0xffffffffffffffa4])) [5 push+0 S4 A32])) "classes/Collider.cpp":74 -1
     (nil))

;; _61 = 1.0e+0 - push.7_60;

(insn 240 239 241 (set (reg:SF 223)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":74 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))

(insn 241 240 0 (set (reg:SF 147 [ _61 ])
        (minus:SF (reg:SF 223)
            (reg:SF 146 [ push.7_60 ]))) "classes/Collider.cpp":74 -1
     (nil))

;; _62 = intersectY_85 * _61;

(insn 242 241 0 (set (reg:SF 148 [ _62 ])
        (mult:SF (reg:SF 147 [ _61 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -44 [0xffffffffffffffd4])) [5 intersectY+0 S4 A32]))) "classes/Collider.cpp":74 -1
     (nil))

;; OBJ_TYPE_REF(_59;this_77(D)->0) (this_77(D), 0.0, _62);

(insn 243 242 244 (set (reg:DI 224)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [9 this+0 S8 A64])) "classes/Collider.cpp":74 -1
     (nil))

(insn 244 243 245 (set (reg:SF 22 xmm1)
        (reg:SF 148 [ _62 ])) "classes/Collider.cpp":74 -1
     (nil))

(insn 245 244 246 (set (reg:SF 21 xmm0)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":74 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))

(insn 246 245 247 (set (reg:DI 5 di)
        (reg:DI 224)) "classes/Collider.cpp":74 -1
     (nil))

(call_insn 247 246 0 (call (mem:QI (reg/f:DI 145 [ _59 ]) [0 *OBJ_TYPE_REF(_59;(struct CollisionBox)this_77(D)->0) S1 A8])
        (const_int 0 [0])) "classes/Collider.cpp":74 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SF (use (reg:SF 21 xmm0))
            (expr_list:SF (use (reg:SF 22 xmm1))
                (nil)))))

;; _63 = other_74(D)->_vptr.CollisionBox;

(insn 248 247 249 (set (reg/f:DI 225)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [9 other+0 S8 A64])) "classes/Collider.cpp":75 -1
     (nil))

(insn 249 248 0 (set (reg/f:DI 149 [ _63 ])
        (mem/f:DI (reg/f:DI 225) [2 other_74(D)->_vptr.CollisionBox+0 S8 A64])) "classes/Collider.cpp":75 -1
     (nil))

;; _64 = *_63;

(insn 250 249 0 (set (reg/f:DI 150 [ _64 ])
        (mem/f:DI (reg/f:DI 149 [ _63 ]) [10 *_63+0 S8 A64])) "classes/Collider.cpp":75 -1
     (nil))

;; _65 = -intersectY_85;

(insn 251 250 252 (set (reg:SF 226)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [5 intersectY+0 S4 A32])) "classes/Collider.cpp":75 -1
     (nil))

(insn 252 251 253 (set (reg:V4SF 227)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [5  S16 A128])) "classes/Collider.cpp":75 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))

(insn 253 252 0 (parallel [
            (set (reg:SF 151 [ _65 ])
                (neg:SF (reg:SF 226)))
            (use (reg:V4SF 227))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":75 -1
     (expr_list:REG_EQUAL (neg:SF (reg:SF 226))
        (nil)))

;; push.8_66 = push;

(insn 254 253 0 (set (reg:SF 152 [ push.8_66 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -92 [0xffffffffffffffa4])) [5 push+0 S4 A32])) "classes/Collider.cpp":75 -1
     (nil))

;; _67 = _65 * push.8_66;

(insn 255 254 0 (set (reg:SF 153 [ _67 ])
        (mult:SF (reg:SF 151 [ _65 ])
            (reg:SF 152 [ push.8_66 ]))) "classes/Collider.cpp":75 -1
     (nil))

;; OBJ_TYPE_REF(_64;other_74(D)->0) (other_74(D), 0.0, _67);

(insn 256 255 257 (set (reg:DI 228)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [9 other+0 S8 A64])) "classes/Collider.cpp":75 -1
     (nil))

(insn 257 256 258 (set (reg:SF 22 xmm1)
        (reg:SF 153 [ _67 ])) "classes/Collider.cpp":75 -1
     (nil))

(insn 258 257 259 (set (reg:SF 21 xmm0)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":75 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))

(insn 259 258 260 (set (reg:DI 5 di)
        (reg:DI 228)) "classes/Collider.cpp":75 -1
     (nil))

(call_insn 260 259 0 (call (mem:QI (reg/f:DI 150 [ _64 ]) [0 *OBJ_TYPE_REF(_64;(struct CollisionBox)other_74(D)->0) S1 A8])
        (const_int 0 [0])) "classes/Collider.cpp":75 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SF (use (reg:SF 21 xmm0))
            (expr_list:SF (use (reg:SF 22 xmm1))
                (nil)))))

;; direction_95(D)->x = 0.0;

(insn 261 260 262 (set (reg/f:DI 229)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [15 direction+0 S8 A64])) "classes/Collider.cpp":77 -1
     (nil))

(insn 262 261 263 (set (reg:SF 230)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":77 -1
     (nil))

(insn 263 262 0 (set (mem:SF (reg/f:DI 229) [5 direction_95(D)->x+0 S4 A32])
        (reg:SF 230)) "classes/Collider.cpp":77 -1
     (nil))

;; direction_95(D)->y = -1.0e+0;

(insn 264 263 265 (set (reg/f:DI 231)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [15 direction+0 S8 A64])) "classes/Collider.cpp":78 -1
     (nil))

(insn 265 264 266 (set (reg:SF 232)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":78 -1
     (nil))

(insn 266 265 0 (set (mem:SF (plus:DI (reg/f:DI 231)
                (const_int 4 [0x4])) [5 direction_95(D)->y+0 S4 A32])
        (reg:SF 232)) "classes/Collider.cpp":78 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; 

(code_label 267 266 268 28 (nil) [0 uses])

(note 268 267 0 NOTE_INSN_BASIC_BLOCK)

;; _110 = 1;

(insn 269 268 0 (set (reg:QI 154 [ _68 ])
        (const_int 1 [0x1])) "classes/Collider.cpp":81 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; 

(code_label 272 271 273 20 (nil) [0 uses])

(note 273 272 0 NOTE_INSN_BASIC_BLOCK)

;; _111 = 0;

(insn 274 273 0 (set (reg:QI 154 [ _68 ])
        (const_int 0 [0])) "classes/Collider.cpp":83 -1
     (nil))

;; Generating RTL for gimple basic block 14

;; 

(code_label 275 274 276 31 (nil) [0 uses])

(note 276 275 0 NOTE_INSN_BASIC_BLOCK)

;; otherPosition ={v} {CLOBBER};

(nil)

;; otherHalfSize ={v} {CLOBBER};

(nil)

;; thisPosition ={v} {CLOBBER};

(nil)

;; thisHalfSize ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 15

;; <L14> [0.00%]:

(code_label 277 276 278 32 (nil) [0 uses])

(note 278 277 0 NOTE_INSN_BASIC_BLOCK)

;; return _68;

(insn 279 278 280 (set (reg:QI 155 [ <retval> ])
        (reg:QI 154 [ _68 ])) -1
     (nil))

(jump_insn 280 279 281 (set (pc)
        (label_ref 0)) -1
     (nil))

(barrier 281 280 0)
Purged non-fallthru edges from bb 19
Purged non-fallthru edges from bb 21
Purged non-fallthru edges from bb 23
Purged non-fallthru edges from bb 25
Purged non-fallthru edges from bb 27


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 2->5 redirected to 6
Forwarding edge 2->4 to 24 failed.
Forwarding edge 2->4 to 24 failed.
deleting block 5
Edge 6->8 redirected to 9
Forwarding edge 6->7 to 24 failed.
Forwarding edge 6->7 to 24 failed.
deleting block 8
Edge 9->11 redirected to 12
Forwarding edge 9->10 to 18 failed.
Forwarding edge 9->10 to 18 failed.
deleting block 11
Edge 12->14 redirected to 15
Forwarding edge 12->13 to 16 failed.
Forwarding edge 12->13 to 16 failed.
deleting block 14
Redirecting jump 153 from 17 to 23.
Merging block 17 into block 16...
Merged blocks 16 and 17.
Merged 16 and 17 without moving.
Edge 18->20 redirected to 21
Forwarding edge 18->19 to 22 failed.
Forwarding edge 18->19 to 22 failed.
deleting block 20
Redirecting jump 270 from 25 to 26.
Merging block 25 into block 24...
Merged blocks 24 and 25.
Merged 24 and 25 without moving.
Removing jump 280.
Merging block 27 into block 26...
Merged blocks 26 and 27.
Merged 26 and 27 without moving.


try_optimize_cfg iteration 2

Forwarding edge 2->4 to 24 failed.
Forwarding edge 6->7 to 24 failed.
Forwarding edge 9->10 to 18 failed.
Forwarding edge 12->13 to 16 failed.
Forwarding edge 18->19 to 22 failed.
fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [9 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "classes/Collider.cpp":37 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [9 other+0 S8 A64])
        (reg:DI 4 si [ other ])) "classes/Collider.cpp":37 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [15 direction+0 S8 A64])
        (reg:DI 1 dx [ direction ])) "classes/Collider.cpp":37 -1
     (nil))
(insn 5 4 6 2 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -92 [0xffffffffffffffa4])) [5 push+0 S4 A32])
        (reg:SF 21 xmm0 [ push ])) "classes/Collider.cpp":37 -1
     (nil))
(note 6 5 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 6 10 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [14 D.84916+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":37 -1
     (nil))
(insn 10 7 11 2 (set (reg/f:DI 156)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [9 other+0 S8 A64])) "classes/Collider.cpp":38 -1
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (reg/f:DI 156) [2 other_74(D)->_vptr.CollisionBox+0 S8 A64])) "classes/Collider.cpp":38 -1
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg/f:DI 88 [ _2 ])
                (plus:DI (reg/f:DI 87 [ _1 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":38 -1
     (nil))
(insn 13 12 14 2 (set (reg/f:DI 89 [ _3 ])
        (mem/f:DI (reg/f:DI 88 [ _2 ]) [10 *_2+0 S8 A64])) "classes/Collider.cpp":38 -1
     (nil))
(insn 14 13 15 2 (set (reg:DI 157)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [9 other+0 S8 A64])) "classes/Collider.cpp":38 -1
     (nil))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg:DI 157)) "classes/Collider.cpp":38 -1
     (nil))
(call_insn 16 15 17 2 (set (reg:DI 21 xmm0)
        (call (mem:QI (reg/f:DI 89 [ _3 ]) [0 *OBJ_TYPE_REF(_3;(struct CollisionBox)other_74(D)->1) S1 A8])
            (const_int 0 [0]))) "classes/Collider.cpp":38 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 17 16 18 2 (set (reg:DI 158)
        (reg:DI 21 xmm0)) "classes/Collider.cpp":38 -1
     (nil))
(insn 18 17 19 2 (set (reg:DI 159)
        (reg:DI 158)) "classes/Collider.cpp":38 -1
     (nil))
(insn 19 18 20 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [12 otherPosition+0 S8 A64])
        (reg:DI 159)) "classes/Collider.cpp":38 -1
     (nil))
(insn 20 19 21 2 (set (reg/f:DI 160)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [9 other+0 S8 A64])) "classes/Collider.cpp":39 -1
     (nil))
(insn 21 20 22 2 (set (reg/f:DI 90 [ _4 ])
        (mem/f:DI (reg/f:DI 160) [2 other_74(D)->_vptr.CollisionBox+0 S8 A64])) "classes/Collider.cpp":39 -1
     (nil))
(insn 22 21 23 2 (parallel [
            (set (reg/f:DI 91 [ _5 ])
                (plus:DI (reg/f:DI 90 [ _4 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":39 -1
     (nil))
(insn 23 22 24 2 (set (reg/f:DI 92 [ _6 ])
        (mem/f:DI (reg/f:DI 91 [ _5 ]) [10 *_5+0 S8 A64])) "classes/Collider.cpp":39 -1
     (nil))
(insn 24 23 25 2 (set (reg:DI 161)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [9 other+0 S8 A64])) "classes/Collider.cpp":39 -1
     (nil))
(insn 25 24 26 2 (set (reg:DI 5 di)
        (reg:DI 161)) "classes/Collider.cpp":39 -1
     (nil))
(call_insn 26 25 27 2 (set (reg:DI 21 xmm0)
        (call (mem:QI (reg/f:DI 92 [ _6 ]) [0 *OBJ_TYPE_REF(_6;(struct CollisionBox)other_74(D)->2) S1 A8])
            (const_int 0 [0]))) "classes/Collider.cpp":39 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 27 26 28 2 (set (reg:DI 162)
        (reg:DI 21 xmm0)) "classes/Collider.cpp":39 -1
     (nil))
(insn 28 27 29 2 (set (reg:DI 163)
        (reg:DI 162)) "classes/Collider.cpp":39 -1
     (nil))
(insn 29 28 30 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [12 otherHalfSize+0 S8 A64])
        (reg:DI 163)) "classes/Collider.cpp":39 -1
     (nil))
(insn 30 29 31 2 (set (reg/f:DI 164)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [9 this+0 S8 A64])) "classes/Collider.cpp":40 -1
     (nil))
(insn 31 30 32 2 (set (reg/f:DI 93 [ _7 ])
        (mem/f:DI (reg/f:DI 164) [2 this_77(D)->_vptr.CollisionBox+0 S8 A64])) "classes/Collider.cpp":40 -1
     (nil))
(insn 32 31 33 2 (parallel [
            (set (reg/f:DI 94 [ _8 ])
                (plus:DI (reg/f:DI 93 [ _7 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":40 -1
     (nil))
(insn 33 32 34 2 (set (reg/f:DI 95 [ _9 ])
        (mem/f:DI (reg/f:DI 94 [ _8 ]) [10 *_8+0 S8 A64])) "classes/Collider.cpp":40 -1
     (nil))
(insn 34 33 35 2 (set (reg:DI 165)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [9 this+0 S8 A64])) "classes/Collider.cpp":40 -1
     (nil))
(insn 35 34 36 2 (set (reg:DI 5 di)
        (reg:DI 165)) "classes/Collider.cpp":40 -1
     (nil))
(call_insn 36 35 37 2 (set (reg:DI 21 xmm0)
        (call (mem:QI (reg/f:DI 95 [ _9 ]) [0 *OBJ_TYPE_REF(_9;(struct CollisionBox)this_77(D)->1) S1 A8])
            (const_int 0 [0]))) "classes/Collider.cpp":40 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 37 36 38 2 (set (reg:DI 166)
        (reg:DI 21 xmm0)) "classes/Collider.cpp":40 -1
     (nil))
(insn 38 37 39 2 (set (reg:DI 167)
        (reg:DI 166)) "classes/Collider.cpp":40 -1
     (nil))
(insn 39 38 40 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 thisPosition+0 S8 A64])
        (reg:DI 167)) "classes/Collider.cpp":40 -1
     (nil))
(insn 40 39 41 2 (set (reg/f:DI 168)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [9 this+0 S8 A64])) "classes/Collider.cpp":41 -1
     (nil))
(insn 41 40 42 2 (set (reg/f:DI 96 [ _10 ])
        (mem/f:DI (reg/f:DI 168) [2 this_77(D)->_vptr.CollisionBox+0 S8 A64])) "classes/Collider.cpp":41 -1
     (nil))
(insn 42 41 43 2 (parallel [
            (set (reg/f:DI 97 [ _11 ])
                (plus:DI (reg/f:DI 96 [ _10 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":41 -1
     (nil))
(insn 43 42 44 2 (set (reg/f:DI 98 [ _12 ])
        (mem/f:DI (reg/f:DI 97 [ _11 ]) [10 *_11+0 S8 A64])) "classes/Collider.cpp":41 -1
     (nil))
(insn 44 43 45 2 (set (reg:DI 169)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [9 this+0 S8 A64])) "classes/Collider.cpp":41 -1
     (nil))
(insn 45 44 46 2 (set (reg:DI 5 di)
        (reg:DI 169)) "classes/Collider.cpp":41 -1
     (nil))
(call_insn 46 45 47 2 (set (reg:DI 21 xmm0)
        (call (mem:QI (reg/f:DI 98 [ _12 ]) [0 *OBJ_TYPE_REF(_12;(struct CollisionBox)this_77(D)->2) S1 A8])
            (const_int 0 [0]))) "classes/Collider.cpp":41 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 47 46 48 2 (set (reg:DI 170)
        (reg:DI 21 xmm0)) "classes/Collider.cpp":41 -1
     (nil))
(insn 48 47 49 2 (set (reg:DI 171)
        (reg:DI 170)) "classes/Collider.cpp":41 -1
     (nil))
(insn 49 48 50 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [12 thisHalfSize+0 S8 A64])
        (reg:DI 171)) "classes/Collider.cpp":41 -1
     (nil))
(insn 50 49 51 2 (set (reg:SF 99 [ _13 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [5 otherPosition.x+0 S4 A64])) "classes/Collider.cpp":43 -1
     (nil))
(insn 51 50 52 2 (set (reg:SF 100 [ _14 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [5 thisPosition.x+0 S4 A64])) "classes/Collider.cpp":43 -1
     (nil))
(insn 52 51 53 2 (set (reg:SF 172)
        (minus:SF (reg:SF 99 [ _13 ])
            (reg:SF 100 [ _14 ]))) "classes/Collider.cpp":43 -1
     (nil))
(insn 53 52 54 2 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [5 deltaX+0 S4 A32])
        (reg:SF 172)) "classes/Collider.cpp":43 -1
     (nil))
(insn 54 53 55 2 (set (reg:SF 101 [ _15 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [5 otherPosition.y+0 S4 A32])) "classes/Collider.cpp":44 -1
     (nil))
(insn 55 54 56 2 (set (reg:SF 102 [ _16 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [5 thisPosition.y+0 S4 A32])) "classes/Collider.cpp":44 -1
     (nil))
(insn 56 55 57 2 (set (reg:SF 173)
        (minus:SF (reg:SF 101 [ _15 ])
            (reg:SF 102 [ _16 ]))) "classes/Collider.cpp":44 -1
     (nil))
(insn 57 56 58 2 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [5 deltaY+0 S4 A32])
        (reg:SF 173)) "classes/Collider.cpp":44 -1
     (nil))
(insn 58 57 59 2 (set (reg:SF 174)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [5 deltaX+0 S4 A32])) "classes/Collider.cpp":46 -1
     (nil))
(insn 59 58 60 2 (set (reg:SF 21 xmm0)
        (reg:SF 174)) "classes/Collider.cpp":46 -1
     (nil))
(call_insn 60 59 61 2 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt3absf") [flags 0x3]  <function_decl 0x7f71b7ca1400 abs>) [0 abs S1 A8])
            (const_int 0 [0]))) "classes/Collider.cpp":46 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 61 60 62 2 (set (reg:SF 103 [ _17 ])
        (reg:SF 21 xmm0)) "classes/Collider.cpp":46 -1
     (nil))
(insn 62 61 63 2 (set (reg:SF 104 [ _18 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [5 otherHalfSize.x+0 S4 A64])) "classes/Collider.cpp":46 -1
     (nil))
(insn 63 62 64 2 (set (reg:SF 105 [ _19 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [5 thisHalfSize.x+0 S4 A64])) "classes/Collider.cpp":46 -1
     (nil))
(insn 64 63 65 2 (set (reg:SF 106 [ _20 ])
        (plus:SF (reg:SF 104 [ _18 ])
            (reg:SF 105 [ _19 ]))) "classes/Collider.cpp":46 -1
     (nil))
(insn 65 64 66 2 (set (reg:SF 175)
        (minus:SF (reg:SF 103 [ _17 ])
            (reg:SF 106 [ _20 ]))) "classes/Collider.cpp":46 -1
     (nil))
(insn 66 65 67 2 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [5 intersectX+0 S4 A32])
        (reg:SF 175)) "classes/Collider.cpp":46 -1
     (nil))
(insn 67 66 68 2 (set (reg:SF 176)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [5 deltaY+0 S4 A32])) "classes/Collider.cpp":47 -1
     (nil))
(insn 68 67 69 2 (set (reg:SF 21 xmm0)
        (reg:SF 176)) "classes/Collider.cpp":47 -1
     (nil))
(call_insn 69 68 70 2 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt3absf") [flags 0x3]  <function_decl 0x7f71b7ca1400 abs>) [0 abs S1 A8])
            (const_int 0 [0]))) "classes/Collider.cpp":47 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 70 69 71 2 (set (reg:SF 107 [ _21 ])
        (reg:SF 21 xmm0)) "classes/Collider.cpp":47 -1
     (nil))
(insn 71 70 72 2 (set (reg:SF 108 [ _22 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [5 otherHalfSize.y+0 S4 A32])) "classes/Collider.cpp":47 -1
     (nil))
(insn 72 71 73 2 (set (reg:SF 109 [ _23 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [5 thisHalfSize.y+0 S4 A32])) "classes/Collider.cpp":47 -1
     (nil))
(insn 73 72 74 2 (set (reg:SF 110 [ _24 ])
        (plus:SF (reg:SF 108 [ _22 ])
            (reg:SF 109 [ _23 ]))) "classes/Collider.cpp":47 -1
     (nil))
(insn 74 73 75 2 (set (reg:SF 177)
        (minus:SF (reg:SF 107 [ _21 ])
            (reg:SF 110 [ _24 ]))) "classes/Collider.cpp":47 -1
     (nil))
(insn 75 74 76 2 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [5 intersectY+0 S4 A32])
        (reg:SF 177)) "classes/Collider.cpp":47 -1
     (nil))
(insn 76 75 77 2 (set (reg:SF 178)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":49 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 77 76 78 2 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 178)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [5 intersectX+0 S4 A32]))) "classes/Collider.cpp":49 -1
     (nil))
(jump_insn 78 77 291 2 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 303)
            (pc))) "classes/Collider.cpp":49 617 {*jcc_1}
     (nil)
 -> 303)
;;  succ:       6
;;              4 (FALLTHRU)

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
(note 291 78 79 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 79 291 80 4 (set (pc)
        (label_ref 272)) "classes/Collider.cpp":49 -1
     (nil)
 -> 272)
;;  succ:       24

(barrier 80 79 303)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
(code_label 303 80 82 6 34 (nil) [1 uses])
(note 82 303 83 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 6 (set (reg:SF 179)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":49 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 84 83 85 6 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 179)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -44 [0xffffffffffffffd4])) [5 intersectY+0 S4 A32]))) "classes/Collider.cpp":49 -1
     (nil))
(jump_insn 85 84 293 6 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 304)
            (pc))) "classes/Collider.cpp":49 617 {*jcc_1}
     (nil)
 -> 304)
;;  succ:       9
;;              7 (FALLTHRU)

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
(note 293 85 86 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(jump_insn 86 293 87 7 (set (pc)
        (label_ref 272)) "classes/Collider.cpp":49 -1
     (nil)
 -> 272)
;;  succ:       24

(barrier 87 86 304)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
(code_label 304 87 89 9 35 (nil) [1 uses])
(note 89 304 90 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 9 (set (reg:SF 180)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":50 -1
     (nil))
(insn 91 90 92 9 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -60 [0xffffffffffffffc4])) [5 D.81077+0 S4 A32])
        (reg:SF 180)) "classes/Collider.cpp":50 -1
     (nil))
(insn 92 91 93 9 (set (reg:SF 181)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":50 -1
     (nil))
(insn 93 92 94 9 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [5 D.81073+0 S4 A64])
        (reg:SF 181)) "classes/Collider.cpp":50 -1
     (nil))
(insn 94 93 95 9 (parallel [
            (set (reg:DI 182)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":50 -1
     (nil))
(insn 95 94 96 9 (parallel [
            (set (reg:DI 183)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -92 [0xffffffffffffffa4])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":50 -1
     (nil))
(insn 96 95 97 9 (set (reg:DI 4 si)
        (reg:DI 182)) "classes/Collider.cpp":50 -1
     (nil))
(insn 97 96 98 9 (set (reg:DI 5 di)
        (reg:DI 183)) "classes/Collider.cpp":50 -1
     (nil))
(call_insn 98 97 99 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt3maxIfERKT_S2_S2_") [flags 0x3]  <function_decl 0x7f71b547bb00 max>) [0 max S1 A8])
            (const_int 0 [0]))) "classes/Collider.cpp":50 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 99 98 100 9 (set (reg/f:DI 111 [ _25 ])
        (reg:DI 0 ax)) "classes/Collider.cpp":50 -1
     (nil))
(insn 100 99 101 9 (parallel [
            (set (reg:DI 184)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -60 [0xffffffffffffffc4])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":50 -1
     (nil))
(insn 101 100 102 9 (set (reg:DI 4 si)
        (reg:DI 184)) "classes/Collider.cpp":50 -1
     (nil))
(insn 102 101 103 9 (set (reg:DI 5 di)
        (reg/f:DI 111 [ _25 ])) "classes/Collider.cpp":50 -1
     (nil))
(call_insn 103 102 104 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt3minIfERKT_S2_S2_") [flags 0x3]  <function_decl 0x7f71b547bc00 min>) [0 min S1 A8])
            (const_int 0 [0]))) "classes/Collider.cpp":50 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 104 103 105 9 (set (reg/f:DI 112 [ _26 ])
        (reg:DI 0 ax)) "classes/Collider.cpp":50 -1
     (nil))
(insn 105 104 106 9 (set (reg:SF 113 [ _27 ])
        (mem:SF (reg/f:DI 112 [ _26 ]) [5 *_26+0 S4 A32])) "classes/Collider.cpp":50 -1
     (nil))
(insn 106 105 107 9 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -92 [0xffffffffffffffa4])) [5 push+0 S4 A32])
        (reg:SF 113 [ _27 ])) "classes/Collider.cpp":50 -1
     (nil))
(insn 107 106 108 9 (set (reg:SF 185)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [5 intersectX+0 S4 A32])) "classes/Collider.cpp":52 -1
     (nil))
(insn 108 107 109 9 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 185)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -44 [0xffffffffffffffd4])) [5 intersectY+0 S4 A32]))) "classes/Collider.cpp":52 -1
     (nil))
(jump_insn 109 108 295 9 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 305)
            (pc))) "classes/Collider.cpp":52 617 {*jcc_1}
     (nil)
 -> 305)
;;  succ:       12
;;              10 (FALLTHRU)

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
(note 295 109 110 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(jump_insn 110 295 111 10 (set (pc)
        (label_ref 192)) "classes/Collider.cpp":52 -1
     (nil)
 -> 192)
;;  succ:       18

(barrier 111 110 305)
;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9
(code_label 305 111 113 12 36 (nil) [1 uses])
(note 113 305 114 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 114 113 115 12 (set (reg:SF 186)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [5 deltaX+0 S4 A32])) "classes/Collider.cpp":53 -1
     (nil))
(insn 115 114 116 12 (set (reg:SF 187)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":53 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 116 115 117 12 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 186)
            (reg:SF 187))) "classes/Collider.cpp":53 -1
     (nil))
(jump_insn 117 116 297 12 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 306)
            (pc))) "classes/Collider.cpp":53 617 {*jcc_1}
     (nil)
 -> 306)
;;  succ:       15
;;              13 (FALLTHRU)

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
(note 297 117 118 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(jump_insn 118 297 119 13 (set (pc)
        (label_ref 155)) "classes/Collider.cpp":53 -1
     (nil)
 -> 155)
;;  succ:       16

(barrier 119 118 306)
;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12
(code_label 306 119 121 15 37 (nil) [1 uses])
(note 121 306 122 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 123 15 (set (reg/f:DI 188)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [9 this+0 S8 A64])) "classes/Collider.cpp":54 -1
     (nil))
(insn 123 122 124 15 (set (reg/f:DI 114 [ _28 ])
        (mem/f:DI (reg/f:DI 188) [2 this_77(D)->_vptr.CollisionBox+0 S8 A64])) "classes/Collider.cpp":54 -1
     (nil))
(insn 124 123 125 15 (set (reg/f:DI 115 [ _29 ])
        (mem/f:DI (reg/f:DI 114 [ _28 ]) [10 *_28+0 S8 A64])) "classes/Collider.cpp":54 -1
     (nil))
(insn 125 124 126 15 (set (reg:SF 116 [ push.1_30 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -92 [0xffffffffffffffa4])) [5 push+0 S4 A32])) "classes/Collider.cpp":54 -1
     (nil))
(insn 126 125 127 15 (set (reg:SF 189)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":54 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 127 126 128 15 (set (reg:SF 117 [ _31 ])
        (minus:SF (reg:SF 189)
            (reg:SF 116 [ push.1_30 ]))) "classes/Collider.cpp":54 -1
     (nil))
(insn 128 127 129 15 (set (reg:SF 118 [ _32 ])
        (mult:SF (reg:SF 117 [ _31 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [5 intersectX+0 S4 A32]))) "classes/Collider.cpp":54 -1
     (nil))
(insn 129 128 130 15 (set (reg:DI 190)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [9 this+0 S8 A64])) "classes/Collider.cpp":54 -1
     (nil))
(insn 130 129 131 15 (set (reg:SF 22 xmm1)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":54 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 131 130 132 15 (set (reg:SF 21 xmm0)
        (reg:SF 118 [ _32 ])) "classes/Collider.cpp":54 -1
     (nil))
(insn 132 131 133 15 (set (reg:DI 5 di)
        (reg:DI 190)) "classes/Collider.cpp":54 -1
     (nil))
(call_insn 133 132 134 15 (call (mem:QI (reg/f:DI 115 [ _29 ]) [0 *OBJ_TYPE_REF(_29;(struct CollisionBox)this_77(D)->0) S1 A8])
        (const_int 0 [0])) "classes/Collider.cpp":54 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SF (use (reg:SF 21 xmm0))
            (expr_list:SF (use (reg:SF 22 xmm1))
                (nil)))))
(insn 134 133 135 15 (set (reg/f:DI 191)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [9 other+0 S8 A64])) "classes/Collider.cpp":55 -1
     (nil))
(insn 135 134 136 15 (set (reg/f:DI 119 [ _33 ])
        (mem/f:DI (reg/f:DI 191) [2 other_74(D)->_vptr.CollisionBox+0 S8 A64])) "classes/Collider.cpp":55 -1
     (nil))
(insn 136 135 137 15 (set (reg/f:DI 120 [ _34 ])
        (mem/f:DI (reg/f:DI 119 [ _33 ]) [10 *_33+0 S8 A64])) "classes/Collider.cpp":55 -1
     (nil))
(insn 137 136 138 15 (set (reg:SF 192)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [5 intersectX+0 S4 A32])) "classes/Collider.cpp":55 -1
     (nil))
(insn 138 137 139 15 (set (reg:V4SF 193)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [5  S16 A128])) "classes/Collider.cpp":55 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 139 138 140 15 (parallel [
            (set (reg:SF 121 [ _35 ])
                (neg:SF (reg:SF 192)))
            (use (reg:V4SF 193))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":55 -1
     (expr_list:REG_EQUAL (neg:SF (reg:SF 192))
        (nil)))
(insn 140 139 141 15 (set (reg:SF 122 [ push.2_36 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -92 [0xffffffffffffffa4])) [5 push+0 S4 A32])) "classes/Collider.cpp":55 -1
     (nil))
(insn 141 140 142 15 (set (reg:SF 123 [ _37 ])
        (mult:SF (reg:SF 121 [ _35 ])
            (reg:SF 122 [ push.2_36 ]))) "classes/Collider.cpp":55 -1
     (nil))
(insn 142 141 143 15 (set (reg:DI 194)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [9 other+0 S8 A64])) "classes/Collider.cpp":55 -1
     (nil))
(insn 143 142 144 15 (set (reg:SF 22 xmm1)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":55 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 144 143 145 15 (set (reg:SF 21 xmm0)
        (reg:SF 123 [ _37 ])) "classes/Collider.cpp":55 -1
     (nil))
(insn 145 144 146 15 (set (reg:DI 5 di)
        (reg:DI 194)) "classes/Collider.cpp":55 -1
     (nil))
(call_insn 146 145 147 15 (call (mem:QI (reg/f:DI 120 [ _34 ]) [0 *OBJ_TYPE_REF(_34;(struct CollisionBox)other_74(D)->0) S1 A8])
        (const_int 0 [0])) "classes/Collider.cpp":55 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SF (use (reg:SF 21 xmm0))
            (expr_list:SF (use (reg:SF 22 xmm1))
                (nil)))))
(insn 147 146 148 15 (set (reg/f:DI 195)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [15 direction+0 S8 A64])) "classes/Collider.cpp":57 -1
     (nil))
(insn 148 147 149 15 (set (reg:SF 196)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":57 -1
     (nil))
(insn 149 148 150 15 (set (mem:SF (reg/f:DI 195) [5 direction_95(D)->x+0 S4 A32])
        (reg:SF 196)) "classes/Collider.cpp":57 -1
     (nil))
(insn 150 149 151 15 (set (reg/f:DI 197)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [15 direction+0 S8 A64])) "classes/Collider.cpp":58 -1
     (nil))
(insn 151 150 152 15 (set (reg:SF 198)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":58 -1
     (nil))
(insn 152 151 153 15 (set (mem:SF (plus:DI (reg/f:DI 197)
                (const_int 4 [0x4])) [5 direction_95(D)->y+0 S4 A32])
        (reg:SF 198)) "classes/Collider.cpp":58 -1
     (nil))
(jump_insn 153 152 154 15 (set (pc)
        (label_ref:DI 267)) 649 {jump}
     (nil)
 -> 267)
;;  succ:       23 [100.0%] 

(barrier 154 153 155)
;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       13
(code_label 155 154 156 16 25 (nil) [1 uses])
(note 156 155 157 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 157 156 158 16 (set (reg/f:DI 199)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [9 this+0 S8 A64])) "classes/Collider.cpp":60 -1
     (nil))
(insn 158 157 159 16 (set (reg/f:DI 124 [ _38 ])
        (mem/f:DI (reg/f:DI 199) [2 this_77(D)->_vptr.CollisionBox+0 S8 A64])) "classes/Collider.cpp":60 -1
     (nil))
(insn 159 158 160 16 (set (reg/f:DI 125 [ _39 ])
        (mem/f:DI (reg/f:DI 124 [ _38 ]) [10 *_38+0 S8 A64])) "classes/Collider.cpp":60 -1
     (nil))
(insn 160 159 161 16 (set (reg:SF 200)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [5 intersectX+0 S4 A32])) "classes/Collider.cpp":60 -1
     (nil))
(insn 161 160 162 16 (set (reg:V4SF 201)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [5  S16 A128])) "classes/Collider.cpp":60 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 162 161 163 16 (parallel [
            (set (reg:SF 126 [ _40 ])
                (neg:SF (reg:SF 200)))
            (use (reg:V4SF 201))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":60 -1
     (expr_list:REG_EQUAL (neg:SF (reg:SF 200))
        (nil)))
(insn 163 162 164 16 (set (reg:SF 127 [ push.3_41 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -92 [0xffffffffffffffa4])) [5 push+0 S4 A32])) "classes/Collider.cpp":60 -1
     (nil))
(insn 164 163 165 16 (set (reg:SF 202)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":60 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 165 164 166 16 (set (reg:SF 128 [ _42 ])
        (minus:SF (reg:SF 202)
            (reg:SF 127 [ push.3_41 ]))) "classes/Collider.cpp":60 -1
     (nil))
(insn 166 165 167 16 (set (reg:SF 129 [ _43 ])
        (mult:SF (reg:SF 126 [ _40 ])
            (reg:SF 128 [ _42 ]))) "classes/Collider.cpp":60 -1
     (nil))
(insn 167 166 168 16 (set (reg:DI 203)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [9 this+0 S8 A64])) "classes/Collider.cpp":60 -1
     (nil))
(insn 168 167 169 16 (set (reg:SF 22 xmm1)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":60 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 169 168 170 16 (set (reg:SF 21 xmm0)
        (reg:SF 129 [ _43 ])) "classes/Collider.cpp":60 -1
     (nil))
(insn 170 169 171 16 (set (reg:DI 5 di)
        (reg:DI 203)) "classes/Collider.cpp":60 -1
     (nil))
(call_insn 171 170 172 16 (call (mem:QI (reg/f:DI 125 [ _39 ]) [0 *OBJ_TYPE_REF(_39;(struct CollisionBox)this_77(D)->0) S1 A8])
        (const_int 0 [0])) "classes/Collider.cpp":60 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SF (use (reg:SF 21 xmm0))
            (expr_list:SF (use (reg:SF 22 xmm1))
                (nil)))))
(insn 172 171 173 16 (set (reg/f:DI 204)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [9 other+0 S8 A64])) "classes/Collider.cpp":61 -1
     (nil))
(insn 173 172 174 16 (set (reg/f:DI 130 [ _44 ])
        (mem/f:DI (reg/f:DI 204) [2 other_74(D)->_vptr.CollisionBox+0 S8 A64])) "classes/Collider.cpp":61 -1
     (nil))
(insn 174 173 175 16 (set (reg/f:DI 131 [ _45 ])
        (mem/f:DI (reg/f:DI 130 [ _44 ]) [10 *_44+0 S8 A64])) "classes/Collider.cpp":61 -1
     (nil))
(insn 175 174 176 16 (set (reg:SF 132 [ push.4_46 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -92 [0xffffffffffffffa4])) [5 push+0 S4 A32])) "classes/Collider.cpp":61 -1
     (nil))
(insn 176 175 177 16 (set (reg:SF 133 [ _47 ])
        (mult:SF (reg:SF 132 [ push.4_46 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])) [5 intersectX+0 S4 A32]))) "classes/Collider.cpp":61 -1
     (nil))
(insn 177 176 178 16 (set (reg:DI 205)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [9 other+0 S8 A64])) "classes/Collider.cpp":61 -1
     (nil))
(insn 178 177 179 16 (set (reg:SF 22 xmm1)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":61 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 179 178 180 16 (set (reg:SF 21 xmm0)
        (reg:SF 133 [ _47 ])) "classes/Collider.cpp":61 -1
     (nil))
(insn 180 179 181 16 (set (reg:DI 5 di)
        (reg:DI 205)) "classes/Collider.cpp":61 -1
     (nil))
(call_insn 181 180 182 16 (call (mem:QI (reg/f:DI 131 [ _45 ]) [0 *OBJ_TYPE_REF(_45;(struct CollisionBox)other_74(D)->0) S1 A8])
        (const_int 0 [0])) "classes/Collider.cpp":61 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SF (use (reg:SF 21 xmm0))
            (expr_list:SF (use (reg:SF 22 xmm1))
                (nil)))))
(insn 182 181 183 16 (set (reg/f:DI 206)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [15 direction+0 S8 A64])) "classes/Collider.cpp":63 -1
     (nil))
(insn 183 182 184 16 (set (reg:SF 207)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":63 -1
     (nil))
(insn 184 183 185 16 (set (mem:SF (reg/f:DI 206) [5 direction_95(D)->x+0 S4 A32])
        (reg:SF 207)) "classes/Collider.cpp":63 -1
     (nil))
(insn 185 184 186 16 (set (reg/f:DI 208)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [15 direction+0 S8 A64])) "classes/Collider.cpp":64 -1
     (nil))
(insn 186 185 187 16 (set (reg:SF 209)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":64 -1
     (nil))
(insn 187 186 190 16 (set (mem:SF (plus:DI (reg/f:DI 208)
                (const_int 4 [0x4])) [5 direction_95(D)->y+0 S4 A32])
        (reg:SF 209)) "classes/Collider.cpp":64 -1
     (nil))
(jump_insn 190 187 191 16 (set (pc)
        (label_ref 267)) -1
     (nil)
 -> 267)
;;  succ:       23

(barrier 191 190 192)
;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10
(code_label 192 191 193 18 23 (nil) [1 uses])
(note 193 192 194 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 194 193 195 18 (set (reg:SF 210)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":67 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 195 194 196 18 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 210)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -52 [0xffffffffffffffcc])) [5 deltaY+0 S4 A32]))) "classes/Collider.cpp":67 -1
     (nil))
(jump_insn 196 195 299 18 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 307)
            (pc))) "classes/Collider.cpp":67 617 {*jcc_1}
     (nil)
 -> 307)
;;  succ:       21
;;              19 (FALLTHRU)

;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 18, next block 21, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
(note 299 196 197 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(jump_insn 197 299 198 19 (set (pc)
        (label_ref 234)) "classes/Collider.cpp":67 -1
     (nil)
 -> 234)
;;  succ:       22

(barrier 198 197 307)
;; basic block 21, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 22, flags: (NEW, REACHABLE, RTL)
;;  pred:       18
(code_label 307 198 200 21 38 (nil) [1 uses])
(note 200 307 201 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 201 200 202 21 (set (reg/f:DI 211)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [9 this+0 S8 A64])) "classes/Collider.cpp":68 -1
     (nil))
(insn 202 201 203 21 (set (reg/f:DI 134 [ _48 ])
        (mem/f:DI (reg/f:DI 211) [2 this_77(D)->_vptr.CollisionBox+0 S8 A64])) "classes/Collider.cpp":68 -1
     (nil))
(insn 203 202 204 21 (set (reg/f:DI 135 [ _49 ])
        (mem/f:DI (reg/f:DI 134 [ _48 ]) [10 *_48+0 S8 A64])) "classes/Collider.cpp":68 -1
     (nil))
(insn 204 203 205 21 (set (reg:SF 212)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [5 intersectY+0 S4 A32])) "classes/Collider.cpp":68 -1
     (nil))
(insn 205 204 206 21 (set (reg:V4SF 213)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [5  S16 A128])) "classes/Collider.cpp":68 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 206 205 207 21 (parallel [
            (set (reg:SF 136 [ _50 ])
                (neg:SF (reg:SF 212)))
            (use (reg:V4SF 213))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":68 -1
     (expr_list:REG_EQUAL (neg:SF (reg:SF 212))
        (nil)))
(insn 207 206 208 21 (set (reg:SF 137 [ push.5_51 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -92 [0xffffffffffffffa4])) [5 push+0 S4 A32])) "classes/Collider.cpp":68 -1
     (nil))
(insn 208 207 209 21 (set (reg:SF 214)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":68 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 209 208 210 21 (set (reg:SF 138 [ _52 ])
        (minus:SF (reg:SF 214)
            (reg:SF 137 [ push.5_51 ]))) "classes/Collider.cpp":68 -1
     (nil))
(insn 210 209 211 21 (set (reg:SF 139 [ _53 ])
        (mult:SF (reg:SF 136 [ _50 ])
            (reg:SF 138 [ _52 ]))) "classes/Collider.cpp":68 -1
     (nil))
(insn 211 210 212 21 (set (reg:DI 215)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [9 this+0 S8 A64])) "classes/Collider.cpp":68 -1
     (nil))
(insn 212 211 213 21 (set (reg:SF 22 xmm1)
        (reg:SF 139 [ _53 ])) "classes/Collider.cpp":68 -1
     (nil))
(insn 213 212 214 21 (set (reg:SF 21 xmm0)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":68 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 214 213 215 21 (set (reg:DI 5 di)
        (reg:DI 215)) "classes/Collider.cpp":68 -1
     (nil))
(call_insn 215 214 216 21 (call (mem:QI (reg/f:DI 135 [ _49 ]) [0 *OBJ_TYPE_REF(_49;(struct CollisionBox)this_77(D)->0) S1 A8])
        (const_int 0 [0])) "classes/Collider.cpp":68 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SF (use (reg:SF 21 xmm0))
            (expr_list:SF (use (reg:SF 22 xmm1))
                (nil)))))
(insn 216 215 217 21 (set (reg/f:DI 216)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [9 other+0 S8 A64])) "classes/Collider.cpp":69 -1
     (nil))
(insn 217 216 218 21 (set (reg/f:DI 140 [ _54 ])
        (mem/f:DI (reg/f:DI 216) [2 other_74(D)->_vptr.CollisionBox+0 S8 A64])) "classes/Collider.cpp":69 -1
     (nil))
(insn 218 217 219 21 (set (reg/f:DI 141 [ _55 ])
        (mem/f:DI (reg/f:DI 140 [ _54 ]) [10 *_54+0 S8 A64])) "classes/Collider.cpp":69 -1
     (nil))
(insn 219 218 220 21 (set (reg:SF 142 [ push.6_56 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -92 [0xffffffffffffffa4])) [5 push+0 S4 A32])) "classes/Collider.cpp":69 -1
     (nil))
(insn 220 219 221 21 (set (reg:SF 143 [ _57 ])
        (mult:SF (reg:SF 142 [ push.6_56 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -44 [0xffffffffffffffd4])) [5 intersectY+0 S4 A32]))) "classes/Collider.cpp":69 -1
     (nil))
(insn 221 220 222 21 (set (reg:DI 217)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [9 other+0 S8 A64])) "classes/Collider.cpp":69 -1
     (nil))
(insn 222 221 223 21 (set (reg:SF 22 xmm1)
        (reg:SF 143 [ _57 ])) "classes/Collider.cpp":69 -1
     (nil))
(insn 223 222 224 21 (set (reg:SF 21 xmm0)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":69 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 224 223 225 21 (set (reg:DI 5 di)
        (reg:DI 217)) "classes/Collider.cpp":69 -1
     (nil))
(call_insn 225 224 226 21 (call (mem:QI (reg/f:DI 141 [ _55 ]) [0 *OBJ_TYPE_REF(_55;(struct CollisionBox)other_74(D)->0) S1 A8])
        (const_int 0 [0])) "classes/Collider.cpp":69 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SF (use (reg:SF 21 xmm0))
            (expr_list:SF (use (reg:SF 22 xmm1))
                (nil)))))
(insn 226 225 227 21 (set (reg/f:DI 218)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [15 direction+0 S8 A64])) "classes/Collider.cpp":71 -1
     (nil))
(insn 227 226 228 21 (set (reg:SF 219)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":71 -1
     (nil))
(insn 228 227 229 21 (set (mem:SF (reg/f:DI 218) [5 direction_95(D)->x+0 S4 A32])
        (reg:SF 219)) "classes/Collider.cpp":71 -1
     (nil))
(insn 229 228 230 21 (set (reg/f:DI 220)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [15 direction+0 S8 A64])) "classes/Collider.cpp":72 -1
     (nil))
(insn 230 229 231 21 (set (reg:SF 221)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":72 -1
     (nil))
(insn 231 230 232 21 (set (mem:SF (plus:DI (reg/f:DI 220)
                (const_int 4 [0x4])) [5 direction_95(D)->y+0 S4 A32])
        (reg:SF 221)) "classes/Collider.cpp":72 -1
     (nil))
(jump_insn 232 231 233 21 (set (pc)
        (label_ref 267)) -1
     (nil)
 -> 267)
;;  succ:       23

(barrier 233 232 234)
;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL)
;;  pred:       19
(code_label 234 233 235 22 29 (nil) [1 uses])
(note 235 234 236 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 236 235 237 22 (set (reg/f:DI 222)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [9 this+0 S8 A64])) "classes/Collider.cpp":74 -1
     (nil))
(insn 237 236 238 22 (set (reg/f:DI 144 [ _58 ])
        (mem/f:DI (reg/f:DI 222) [2 this_77(D)->_vptr.CollisionBox+0 S8 A64])) "classes/Collider.cpp":74 -1
     (nil))
(insn 238 237 239 22 (set (reg/f:DI 145 [ _59 ])
        (mem/f:DI (reg/f:DI 144 [ _58 ]) [10 *_58+0 S8 A64])) "classes/Collider.cpp":74 -1
     (nil))
(insn 239 238 240 22 (set (reg:SF 146 [ push.7_60 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -92 [0xffffffffffffffa4])) [5 push+0 S4 A32])) "classes/Collider.cpp":74 -1
     (nil))
(insn 240 239 241 22 (set (reg:SF 223)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":74 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 241 240 242 22 (set (reg:SF 147 [ _61 ])
        (minus:SF (reg:SF 223)
            (reg:SF 146 [ push.7_60 ]))) "classes/Collider.cpp":74 -1
     (nil))
(insn 242 241 243 22 (set (reg:SF 148 [ _62 ])
        (mult:SF (reg:SF 147 [ _61 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -44 [0xffffffffffffffd4])) [5 intersectY+0 S4 A32]))) "classes/Collider.cpp":74 -1
     (nil))
(insn 243 242 244 22 (set (reg:DI 224)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [9 this+0 S8 A64])) "classes/Collider.cpp":74 -1
     (nil))
(insn 244 243 245 22 (set (reg:SF 22 xmm1)
        (reg:SF 148 [ _62 ])) "classes/Collider.cpp":74 -1
     (nil))
(insn 245 244 246 22 (set (reg:SF 21 xmm0)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":74 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 246 245 247 22 (set (reg:DI 5 di)
        (reg:DI 224)) "classes/Collider.cpp":74 -1
     (nil))
(call_insn 247 246 248 22 (call (mem:QI (reg/f:DI 145 [ _59 ]) [0 *OBJ_TYPE_REF(_59;(struct CollisionBox)this_77(D)->0) S1 A8])
        (const_int 0 [0])) "classes/Collider.cpp":74 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SF (use (reg:SF 21 xmm0))
            (expr_list:SF (use (reg:SF 22 xmm1))
                (nil)))))
(insn 248 247 249 22 (set (reg/f:DI 225)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [9 other+0 S8 A64])) "classes/Collider.cpp":75 -1
     (nil))
(insn 249 248 250 22 (set (reg/f:DI 149 [ _63 ])
        (mem/f:DI (reg/f:DI 225) [2 other_74(D)->_vptr.CollisionBox+0 S8 A64])) "classes/Collider.cpp":75 -1
     (nil))
(insn 250 249 251 22 (set (reg/f:DI 150 [ _64 ])
        (mem/f:DI (reg/f:DI 149 [ _63 ]) [10 *_63+0 S8 A64])) "classes/Collider.cpp":75 -1
     (nil))
(insn 251 250 252 22 (set (reg:SF 226)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [5 intersectY+0 S4 A32])) "classes/Collider.cpp":75 -1
     (nil))
(insn 252 251 253 22 (set (reg:V4SF 227)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [5  S16 A128])) "classes/Collider.cpp":75 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 253 252 254 22 (parallel [
            (set (reg:SF 151 [ _65 ])
                (neg:SF (reg:SF 226)))
            (use (reg:V4SF 227))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":75 -1
     (expr_list:REG_EQUAL (neg:SF (reg:SF 226))
        (nil)))
(insn 254 253 255 22 (set (reg:SF 152 [ push.8_66 ])
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -92 [0xffffffffffffffa4])) [5 push+0 S4 A32])) "classes/Collider.cpp":75 -1
     (nil))
(insn 255 254 256 22 (set (reg:SF 153 [ _67 ])
        (mult:SF (reg:SF 151 [ _65 ])
            (reg:SF 152 [ push.8_66 ]))) "classes/Collider.cpp":75 -1
     (nil))
(insn 256 255 257 22 (set (reg:DI 228)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [9 other+0 S8 A64])) "classes/Collider.cpp":75 -1
     (nil))
(insn 257 256 258 22 (set (reg:SF 22 xmm1)
        (reg:SF 153 [ _67 ])) "classes/Collider.cpp":75 -1
     (nil))
(insn 258 257 259 22 (set (reg:SF 21 xmm0)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":75 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 259 258 260 22 (set (reg:DI 5 di)
        (reg:DI 228)) "classes/Collider.cpp":75 -1
     (nil))
(call_insn 260 259 261 22 (call (mem:QI (reg/f:DI 150 [ _64 ]) [0 *OBJ_TYPE_REF(_64;(struct CollisionBox)other_74(D)->0) S1 A8])
        (const_int 0 [0])) "classes/Collider.cpp":75 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SF (use (reg:SF 21 xmm0))
            (expr_list:SF (use (reg:SF 22 xmm1))
                (nil)))))
(insn 261 260 262 22 (set (reg/f:DI 229)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [15 direction+0 S8 A64])) "classes/Collider.cpp":77 -1
     (nil))
(insn 262 261 263 22 (set (reg:SF 230)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":77 -1
     (nil))
(insn 263 262 264 22 (set (mem:SF (reg/f:DI 229) [5 direction_95(D)->x+0 S4 A32])
        (reg:SF 230)) "classes/Collider.cpp":77 -1
     (nil))
(insn 264 263 265 22 (set (reg/f:DI 231)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [15 direction+0 S8 A64])) "classes/Collider.cpp":78 -1
     (nil))
(insn 265 264 266 22 (set (reg:SF 232)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":78 -1
     (nil))
(insn 266 265 267 22 (set (mem:SF (plus:DI (reg/f:DI 231)
                (const_int 4 [0x4])) [5 direction_95(D)->y+0 S4 A32])
        (reg:SF 232)) "classes/Collider.cpp":78 -1
     (nil))
;;  succ:       23 (FALLTHRU)

;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       16
;;              21
;;              22 (FALLTHRU)
;;              15 [100.0%] 
(code_label 267 266 268 23 28 (nil) [3 uses])
(note 268 267 269 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 269 268 270 23 (set (reg:QI 154 [ _68 ])
        (const_int 1 [0x1])) "classes/Collider.cpp":81 -1
     (nil))
(jump_insn 270 269 271 23 (set (pc)
        (label_ref:DI 277)) "classes/Collider.cpp":81 649 {jump}
     (nil)
 -> 277)
;;  succ:       26 [100.0%] 

(barrier 271 270 272)
;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 26, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
;;              7
(code_label 272 271 273 24 20 (nil) [2 uses])
(note 273 272 274 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 274 273 277 24 (set (reg:QI 154 [ _68 ])
        (const_int 0 [0])) "classes/Collider.cpp":83 -1
     (nil))
;;  succ:       26 (FALLTHRU)

;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 28, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       24 (FALLTHRU)
;;              23 [100.0%] 
(code_label 277 274 278 26 32 (nil) [1 uses])
(note 278 277 279 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 279 278 283 26 (set (reg:QI 155 [ <retval> ])
        (reg:QI 154 [ _68 ])) -1
     (nil))
(insn 283 279 284 26 (set (reg/i:QI 0 ax)
        (reg:QI 155 [ <retval> ])) "classes/Collider.cpp":84 -1
     (nil))
(insn 284 283 285 26 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [14 D.84916+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) "classes/Collider.cpp":84 -1
     (nil))
(jump_insn 285 284 301 26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 288)
            (pc))) "classes/Collider.cpp":84 -1
     (nil)
 -> 288)
;;  succ:       29
;;              28 (FALLTHRU)

;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 29, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       26 (FALLTHRU)
(note 301 285 286 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(call_insn 286 301 287 28 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f71b51e7f00 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "classes/Collider.cpp":84 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      

(barrier 287 286 288)
;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 28, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       26
(code_label 288 287 302 29 33 (nil) [1 uses])
(note 302 288 289 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 289 302 0 29 (use (reg/i:QI 0 ax)) "classes/Collider.cpp":84 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function Collider::Collider(sf::RectangleShape&, sf::Vector2f) (_ZN8ColliderC2ERN2sf14RectangleShapeENS0_7Vector2IfEE, funcdef_no=3477, decl_uid=76543, cgraph_uid=917, symbol_order=922)

Collider::Collider(sf::RectangleShape&, sf::Vector2f) (struct Collider * const this, struct RectangleShape & body, struct Vector2f velocity)
{
  struct CollisionBox * _1;
  int (*__vtbl_ptr_type) () * _2;
  struct Vector2f * _3;
  struct CollisionBox * _4;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  MEM[(struct  &)this_6(D)] ={v} {CLOBBER};
  _1 = &this_6(D)->D.76553;
  CollisionBox::CollisionBox (_1);
  _2 = &_ZTV8Collider + 16;
  this_6(D)->D.76553._vptr.CollisionBox = _2;
  this_6(D)->body = body_10(D);
  _3 = &this_6(D)->velocity;
  sf::Vector2<float>::Vector2 (_3);
  this_6(D)->velocity = velocity;
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 6 (this_6(D) - 6 )
Partition 10 (body_10(D) - 10 )


Partition map 

Partition 0 (this_6(D) - 6 )
Partition 1 (body_10(D) - 10 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (this_6(D) - 6 )
Partition 1 (body_10(D) - 10 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (this_6(D) - 6 )
Partition 5 (body_10(D) - 10 )

Collider::Collider(sf::RectangleShape&, sf::Vector2f) (struct Collider * const this, struct RectangleShape & body, struct Vector2f velocity)
{
  struct CollisionBox * _1;
  int (*__vtbl_ptr_type) () * _2;
  struct Vector2f * _3;
  struct CollisionBox * _4;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  MEM[(struct  &)this_6(D)] ={v} {CLOBBER};
  _1 = &this_6(D)->D.76553;
  CollisionBox::CollisionBox (_1);
  _2 = &_ZTV8Collider + 16;
  this_6(D)->D.76553._vptr.CollisionBox = _2;
  this_6(D)->body = body_10(D);
  _3 = &this_6(D)->velocity;
  sf::Vector2<float>::Vector2 (_3);
  this_6(D)->velocity = velocity;
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; MEM[(struct  &)this_6(D)] ={v} {CLOBBER};

(nil)

;; _1 = &this_6(D)->D.76553;

(insn 8 7 0 (set (reg/f:DI 87 [ _1 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [17 this+0 S8 A64])) "classes/Collider.cpp":87 -1
     (nil))

;; CollisionBox::CollisionBox (_1);

(insn 9 8 10 (set (reg:DI 5 di)
        (reg/f:DI 87 [ _1 ])) "classes/Collider.cpp":87 -1
     (nil))

(call_insn 10 9 0 (call (mem:QI (symbol_ref:DI ("_ZN12CollisionBoxC2Ev") [flags 0x3]  <function_decl 0x7f71b56c4900 __base_ctor >) [0 __base_ctor  S1 A8])
        (const_int 0 [0])) "classes/Collider.cpp":87 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _2 = &_ZTV8Collider + 16;

(insn 11 10 0 (set (reg/f:DI 88 [ _2 ])
        (const:DI (plus:DI (symbol_ref/i:DI ("_ZTV8Collider") [flags 0x2]  <var_decl 0x7f71b59aeab0 _ZTV8Collider>)
                (const_int 16 [0x10])))) "classes/Collider.cpp":87 -1
     (nil))

;; this_6(D)->D.76553._vptr.CollisionBox = _2;

(insn 12 11 13 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [17 this+0 S8 A64])) "classes/Collider.cpp":87 -1
     (nil))

(insn 13 12 0 (set (mem/f:DI (reg/f:DI 91) [2 this_6(D)->D.76553._vptr.CollisionBox+0 S8 A64])
        (reg/f:DI 88 [ _2 ])) "classes/Collider.cpp":87 -1
     (nil))

;; this_6(D)->body = body_10(D);

(insn 14 13 15 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [17 this+0 S8 A64])) "classes/Collider.cpp":87 -1
     (nil))

(insn 15 14 16 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [18 body+0 S8 A64])) "classes/Collider.cpp":87 -1
     (nil))

(insn 16 15 0 (set (mem/f:DI (plus:DI (reg/f:DI 92)
                (const_int 8 [0x8])) [18 this_6(D)->body+0 S8 A64])
        (reg/f:DI 93)) "classes/Collider.cpp":87 -1
     (nil))

;; _3 = &this_6(D)->velocity;

(insn 17 16 18 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [17 this+0 S8 A64])) "classes/Collider.cpp":87 -1
     (nil))

(insn 18 17 0 (parallel [
            (set (reg/f:DI 89 [ _3 ])
                (plus:DI (reg/f:DI 94)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":87 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [17 this+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))

;; sf::Vector2<float>::Vector2 (_3);

(insn 19 18 20 (set (reg:DI 5 di)
        (reg/f:DI 89 [ _3 ])) "classes/Collider.cpp":87 -1
     (nil))

(call_insn 20 19 0 (call (mem:QI (symbol_ref/i:DI ("_ZN2sf7Vector2IfEC1Ev") [flags 0x3]  <function_decl 0x7f71b6580500 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) "classes/Collider.cpp":87 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; this_6(D)->velocity = velocity;

(insn 21 20 22 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [17 this+0 S8 A64])) "classes/Collider.cpp":88 -1
     (nil))

(insn 22 21 23 (set (reg:DI 96)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 velocity+0 S8 A32])) "classes/Collider.cpp":88 -1
     (nil))

(insn 23 22 0 (set (mem:DI (plus:DI (reg/f:DI 95)
                (const_int 16 [0x10])) [12 this_6(D)->velocity+0 S8 A64])
        (reg:DI 96)) "classes/Collider.cpp":88 -1
     (nil))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [17 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "classes/Collider.cpp":86 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [18 body+0 S8 A64])
        (reg:DI 4 si [ body ])) "classes/Collider.cpp":86 -1
     (nil))
(insn 4 3 5 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 velocity+0 S8 A32])
        (reg:DI 21 xmm0 [ velocity ])) "classes/Collider.cpp":86 -1
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 87 [ _1 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [17 this+0 S8 A64])) "classes/Collider.cpp":87 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ _1 ])) "classes/Collider.cpp":87 -1
     (nil))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:DI ("_ZN12CollisionBoxC2Ev") [flags 0x3]  <function_decl 0x7f71b56c4900 __base_ctor >) [0 __base_ctor  S1 A8])
        (const_int 0 [0])) "classes/Collider.cpp":87 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 88 [ _2 ])
        (const:DI (plus:DI (symbol_ref/i:DI ("_ZTV8Collider") [flags 0x2]  <var_decl 0x7f71b59aeab0 _ZTV8Collider>)
                (const_int 16 [0x10])))) "classes/Collider.cpp":87 -1
     (nil))
(insn 12 11 13 2 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [17 this+0 S8 A64])) "classes/Collider.cpp":87 -1
     (nil))
(insn 13 12 14 2 (set (mem/f:DI (reg/f:DI 91) [2 this_6(D)->D.76553._vptr.CollisionBox+0 S8 A64])
        (reg/f:DI 88 [ _2 ])) "classes/Collider.cpp":87 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [17 this+0 S8 A64])) "classes/Collider.cpp":87 -1
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [18 body+0 S8 A64])) "classes/Collider.cpp":87 -1
     (nil))
(insn 16 15 17 2 (set (mem/f:DI (plus:DI (reg/f:DI 92)
                (const_int 8 [0x8])) [18 this_6(D)->body+0 S8 A64])
        (reg/f:DI 93)) "classes/Collider.cpp":87 -1
     (nil))
(insn 17 16 18 2 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [17 this+0 S8 A64])) "classes/Collider.cpp":87 -1
     (nil))
(insn 18 17 19 2 (parallel [
            (set (reg/f:DI 89 [ _3 ])
                (plus:DI (reg/f:DI 94)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":87 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [17 this+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (reg/f:DI 89 [ _3 ])) "classes/Collider.cpp":87 -1
     (nil))
(call_insn 20 19 21 2 (call (mem:QI (symbol_ref/i:DI ("_ZN2sf7Vector2IfEC1Ev") [flags 0x3]  <function_decl 0x7f71b6580500 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) "classes/Collider.cpp":87 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 21 20 22 2 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [17 this+0 S8 A64])) "classes/Collider.cpp":88 -1
     (nil))
(insn 22 21 23 2 (set (reg:DI 96)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 velocity+0 S8 A32])) "classes/Collider.cpp":88 -1
     (nil))
(insn 23 22 26 2 (set (mem:DI (plus:DI (reg/f:DI 95)
                (const_int 16 [0x10])) [12 this_6(D)->velocity+0 S8 A64])
        (reg:DI 96)) "classes/Collider.cpp":88 -1
     (nil))
(insn 26 23 0 2 (const_int 0 [0]) "classes/Collider.cpp":89 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function Collider::~Collider() (_ZN8ColliderD2Ev, funcdef_no=3480, decl_uid=76550, cgraph_uid=920, symbol_order=925)

Collider::~Collider() (struct Collider * const this)
{
  int (*__vtbl_ptr_type) () * _1;
  struct CollisionBox * _2;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = &_ZTV8Collider + 16;
  this_4(D)->D.76553._vptr.CollisionBox = _1;
  _2 = &this_4(D)->D.76553;
  CollisionBox::~CollisionBox (_2);
  MEM[(struct  &)this_4(D)] ={v} {CLOBBER};
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 4 (this_4(D) - 4 )


Partition map 

Partition 0 (this_4(D) - 4 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (this_4(D) - 4 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (this_4(D) - 4 )

Collider::~Collider() (struct Collider * const this)
{
  int (*__vtbl_ptr_type) () * _1;
  struct CollisionBox * _2;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = &_ZTV8Collider + 16;
  this_4(D)->D.76553._vptr.CollisionBox = _1;
  _2 = &this_4(D)->D.76553;
  CollisionBox::~CollisionBox (_2);
  MEM[(struct  &)this_4(D)] ={v} {CLOBBER};
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = &_ZTV8Collider + 16;

(insn 6 5 0 (set (reg/f:DI 87 [ _1 ])
        (const:DI (plus:DI (symbol_ref/i:DI ("_ZTV8Collider") [flags 0x2]  <var_decl 0x7f71b59aeab0 _ZTV8Collider>)
                (const_int 16 [0x10])))) "classes/Collider.cpp":91 -1
     (nil))

;; this_4(D)->D.76553._vptr.CollisionBox = _1;

(insn 7 6 8 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [17 this+0 S8 A64])) "classes/Collider.cpp":91 -1
     (nil))

(insn 8 7 0 (set (mem/f:DI (reg/f:DI 89) [2 this_4(D)->D.76553._vptr.CollisionBox+0 S8 A64])
        (reg/f:DI 87 [ _1 ])) "classes/Collider.cpp":91 -1
     (nil))

;; _2 = &this_4(D)->D.76553;

(insn 9 8 0 (set (reg/f:DI 88 [ _2 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [17 this+0 S8 A64])) "classes/Collider.cpp":91 -1
     (nil))

;; CollisionBox::~CollisionBox (_2);

(insn 10 9 11 (set (reg:DI 5 di)
        (reg/f:DI 88 [ _2 ])) "classes/Collider.cpp":91 -1
     (nil))

(call_insn 11 10 0 (call (mem:QI (symbol_ref:DI ("_ZN12CollisionBoxD2Ev") [flags 0x3]  <function_decl 0x7f71b56c4b00 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) "classes/Collider.cpp":91 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; MEM[(struct  &)this_4(D)] ={v} {CLOBBER};

(nil)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [17 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "classes/Collider.cpp":91 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 87 [ _1 ])
        (const:DI (plus:DI (symbol_ref/i:DI ("_ZTV8Collider") [flags 0x2]  <var_decl 0x7f71b59aeab0 _ZTV8Collider>)
                (const_int 16 [0x10])))) "classes/Collider.cpp":91 -1
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [17 this+0 S8 A64])) "classes/Collider.cpp":91 -1
     (nil))
(insn 8 7 9 2 (set (mem/f:DI (reg/f:DI 89) [2 this_4(D)->D.76553._vptr.CollisionBox+0 S8 A64])
        (reg/f:DI 87 [ _1 ])) "classes/Collider.cpp":91 -1
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 88 [ _2 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [17 this+0 S8 A64])) "classes/Collider.cpp":91 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg/f:DI 88 [ _2 ])) "classes/Collider.cpp":91 -1
     (nil))
(call_insn 11 10 14 2 (call (mem:QI (symbol_ref:DI ("_ZN12CollisionBoxD2Ev") [flags 0x3]  <function_decl 0x7f71b56c4b00 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) "classes/Collider.cpp":91 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 14 11 0 2 (const_int 0 [0]) "classes/Collider.cpp":93 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function virtual void Collider::move(float, float) (_ZN8Collider4moveEff, funcdef_no=3482, decl_uid=76531, cgraph_uid=922, symbol_order=927)

virtual void Collider::move(float, float) (struct Collider * const this, float dx, float dy)
{
  struct RectangleShape & _1;
  struct Transformable * _2;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = this_4(D)->body;
  _2 = &_1->D.71808.D.59983;
  sf::Transformable::move (_2, dx_5(D), dy_6(D));
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 4 (this_4(D) - 4 )
Partition 5 (dx_5(D) - 5 )
Partition 6 (dy_6(D) - 6 )


Partition map 

Partition 0 (this_4(D) - 4 )
Partition 1 (dx_5(D) - 5 )
Partition 2 (dy_6(D) - 6 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (this_4(D) - 4 )
Partition 1 (dx_5(D) - 5 )
Partition 2 (dy_6(D) - 6 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (this_4(D) - 4 )
Partition 3 (dx_5(D) - 5 )
Partition 4 (dy_6(D) - 6 )

virtual void Collider::move(float, float) (struct Collider * const this, float dx, float dy)
{
  struct RectangleShape & _1;
  struct Transformable * _2;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = this_4(D)->body;
  _2 = &_1->D.71808.D.59983;
  sf::Transformable::move (_2, dx_5(D), dy_6(D));
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = this_4(D)->body;

(insn 8 7 9 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [17 this+0 S8 A64])) "classes/Collider.cpp":96 -1
     (nil))

(insn 9 8 0 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (plus:DI (reg/f:DI 89)
                (const_int 8 [0x8])) [18 this_4(D)->body+0 S8 A64])) "classes/Collider.cpp":96 -1
     (nil))

;; _2 = &_1->D.71808.D.59983;

(insn 10 9 0 (parallel [
            (set (reg/f:DI 88 [ _2 ])
                (plus:DI (reg/f:DI 87 [ _1 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":96 -1
     (nil))

;; sf::Transformable::move (_2, dx_5(D), dy_6(D));

(insn 11 10 12 (set (reg:SF 90)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [5 dy+0 S4 A32])) "classes/Collider.cpp":96 -1
     (nil))

(insn 12 11 13 (set (reg:SF 91)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [5 dx+0 S4 A32])) "classes/Collider.cpp":96 -1
     (nil))

(insn 13 12 14 (set (reg:SF 22 xmm1)
        (reg:SF 90)) "classes/Collider.cpp":96 -1
     (nil))

(insn 14 13 15 (set (reg:SF 21 xmm0)
        (reg:SF 91)) "classes/Collider.cpp":96 -1
     (nil))

(insn 15 14 16 (set (reg:DI 5 di)
        (reg/f:DI 88 [ _2 ])) "classes/Collider.cpp":96 -1
     (nil))

(call_insn 16 15 0 (call (mem:QI (symbol_ref:DI ("_ZN2sf13Transformable4moveEff") [flags 0x41]  <function_decl 0x7f71b657b500 move>) [0 move S1 A8])
        (const_int 0 [0])) "classes/Collider.cpp":96 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SF (use (reg:SF 21 xmm0))
            (expr_list:SF (use (reg:SF 22 xmm1))
                (nil)))))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [17 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "classes/Collider.cpp":95 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [5 dx+0 S4 A32])
        (reg:SF 21 xmm0 [ dx ])) "classes/Collider.cpp":95 -1
     (nil))
(insn 4 3 5 2 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [5 dy+0 S4 A32])
        (reg:SF 22 xmm1 [ dy ])) "classes/Collider.cpp":95 -1
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [17 this+0 S8 A64])) "classes/Collider.cpp":96 -1
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (plus:DI (reg/f:DI 89)
                (const_int 8 [0x8])) [18 this_4(D)->body+0 S8 A64])) "classes/Collider.cpp":96 -1
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg/f:DI 88 [ _2 ])
                (plus:DI (reg/f:DI 87 [ _1 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":96 -1
     (nil))
(insn 11 10 12 2 (set (reg:SF 90)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [5 dy+0 S4 A32])) "classes/Collider.cpp":96 -1
     (nil))
(insn 12 11 13 2 (set (reg:SF 91)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [5 dx+0 S4 A32])) "classes/Collider.cpp":96 -1
     (nil))
(insn 13 12 14 2 (set (reg:SF 22 xmm1)
        (reg:SF 90)) "classes/Collider.cpp":96 -1
     (nil))
(insn 14 13 15 2 (set (reg:SF 21 xmm0)
        (reg:SF 91)) "classes/Collider.cpp":96 -1
     (nil))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg/f:DI 88 [ _2 ])) "classes/Collider.cpp":96 -1
     (nil))
(call_insn 16 15 19 2 (call (mem:QI (symbol_ref:DI ("_ZN2sf13Transformable4moveEff") [flags 0x41]  <function_decl 0x7f71b657b500 move>) [0 move S1 A8])
        (const_int 0 [0])) "classes/Collider.cpp":96 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SF (use (reg:SF 21 xmm0))
            (expr_list:SF (use (reg:SF 22 xmm1))
                (nil)))))
(insn 19 16 0 2 (const_int 0 [0]) "classes/Collider.cpp":97 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function virtual sf::Vector2f Collider::getPosition() (_ZN8Collider11getPositionEv, funcdef_no=3483, decl_uid=76533, cgraph_uid=923, symbol_order=928)

virtual sf::Vector2f Collider::getPosition() (struct Collider * const this)
{
  const struct Vector2f & D.84872;
  struct Vector2f D.84870;
  struct RectangleShape & _1;
  struct Transformable * _2;
  const struct Vector2f & _3;
  const struct Vector2f & _7;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = this_5(D)->body;
  _2 = &_1->D.71808.D.59983;
  _7 = sf::Transformable::getPosition (_2);
  _3 = _7;
  D.84870 = MEM[(const struct Vector2 &)_3];
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0> [0.00%]:
  return D.84870;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 5 (this_5(D) - 5 )
Partition 7 (_7 - 7 )


Partition map 

Partition 0 (_3 - 3 )
Partition 1 (this_5(D) - 5 )
Partition 2 (_7 - 7 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(1, 0) _3 <-> _7

Partition map 

Partition 0 (_3 - 3 )
Partition 1 (this_5(D) - 5 )
Partition 2 (_7 - 7 )

Coalesce list: (3)_3 & (7)_7 [map: 0, 2] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 7 )
Partition 3 (this_5(D) - 5 )

virtual sf::Vector2f Collider::getPosition() (struct Collider * const this)
{
  const struct Vector2f & D.84872;
  struct Vector2f D.84870;
  struct RectangleShape & _1;
  struct Transformable * _2;
  const struct Vector2f & _3;
  const struct Vector2f & _7;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = this_5(D)->body;
  _2 = &_1->D.71808.D.59983;
  _7 = sf::Transformable::getPosition (_2);
  _3 = _7;
  D.84870 = MEM[(const struct Vector2 &)_3];
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0> [0.00%]:
  return D.84870;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = this_5(D)->body;

(insn 6 5 7 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [17 this+0 S8 A64])) "classes/Collider.cpp":100 -1
     (nil))

(insn 7 6 0 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (plus:DI (reg/f:DI 92)
                (const_int 8 [0x8])) [18 this_5(D)->body+0 S8 A64])) "classes/Collider.cpp":100 -1
     (nil))

;; _2 = &_1->D.71808.D.59983;

(insn 8 7 0 (parallel [
            (set (reg/f:DI 88 [ _2 ])
                (plus:DI (reg/f:DI 87 [ _1 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":100 -1
     (nil))

;; _7 = sf::Transformable::getPosition (_2);

(insn 9 8 10 (set (reg:DI 5 di)
        (reg/f:DI 88 [ _2 ])) "classes/Collider.cpp":100 -1
     (nil))

(call_insn 10 9 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNK2sf13Transformable11getPositionEv") [flags 0x41]  <function_decl 0x7f71b657b100 getPosition>) [0 getPosition S1 A8])
            (const_int 0 [0]))) "classes/Collider.cpp":100 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 11 10 0 (set (reg/f:DI 89 [ _3 ])
        (reg:DI 0 ax)) "classes/Collider.cpp":100 -1
     (nil))

;; _3 = _7;

(nil)

;; D.84870 = MEM[(const struct Vector2 &)_3];

(insn 12 11 0 (set (reg:DI 90 [ D.84870 ])
        (mem:DI (reg/f:DI 89 [ _3 ]) [12 MEM[(const struct Vector2 &)_3]+0 S8 A32])) "classes/Collider.cpp":100 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0> [0.00%]:

(code_label 13 12 14 46 (nil) [0 uses])

(note 14 13 0 NOTE_INSN_BASIC_BLOCK)

;; return D.84870;

(insn 15 14 16 (set (reg:DI 91 [ <retval> ])
        (reg:DI 90 [ D.84870 ])) "classes/Collider.cpp":100 -1
     (nil))

(jump_insn 16 15 17 (set (pc)
        (label_ref 0)) "classes/Collider.cpp":100 -1
     (nil))

(barrier 17 16 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 16.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [17 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "classes/Collider.cpp":99 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [17 this+0 S8 A64])) "classes/Collider.cpp":100 -1
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (plus:DI (reg/f:DI 92)
                (const_int 8 [0x8])) [18 this_5(D)->body+0 S8 A64])) "classes/Collider.cpp":100 -1
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg/f:DI 88 [ _2 ])
                (plus:DI (reg/f:DI 87 [ _1 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":100 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 88 [ _2 ])) "classes/Collider.cpp":100 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNK2sf13Transformable11getPositionEv") [flags 0x41]  <function_decl 0x7f71b657b100 getPosition>) [0 getPosition S1 A8])
            (const_int 0 [0]))) "classes/Collider.cpp":100 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 89 [ _3 ])
        (reg:DI 0 ax)) "classes/Collider.cpp":100 -1
     (nil))
(insn 12 11 15 2 (set (reg:DI 90 [ D.84870 ])
        (mem:DI (reg/f:DI 89 [ _3 ]) [12 MEM[(const struct Vector2 &)_3]+0 S8 A32])) "classes/Collider.cpp":100 -1
     (nil))
(insn 15 12 19 2 (set (reg:DI 91 [ <retval> ])
        (reg:DI 90 [ D.84870 ])) "classes/Collider.cpp":100 -1
     (nil))
(insn 19 15 20 2 (set (reg/i:DI 21 xmm0)
        (reg:DI 91 [ <retval> ])) "classes/Collider.cpp":101 -1
     (nil))
(insn 20 19 0 2 (use (reg/i:DI 21 xmm0)) "classes/Collider.cpp":101 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function virtual sf::Vector2f Collider::getHalfSize() (_ZN8Collider11getHalfSizeEv, funcdef_no=3484, decl_uid=76535, cgraph_uid=924, symbol_order=929)

virtual sf::Vector2f Collider::getHalfSize() (struct Collider * const this)
{
  const struct Vector2f & D.84875;
  struct Vector2f D.84873;
  struct RectangleShape & _1;
  const struct Vector2f & _2;
  const struct Vector2f & _6;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = this_4(D)->body;
  _6 = sf::RectangleShape::getSize (_1);
  _2 = _6;
  D.84873 = sf::operator/<float> (_2, 2.0e+0);
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0> [0.00%]:
  return D.84873;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 4 (this_4(D) - 4 )
Partition 6 (_6 - 6 )


Partition map 

Partition 0 (_2 - 2 )
Partition 1 (this_4(D) - 4 )
Partition 2 (_6 - 6 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(1, 0) _2 <-> _6

Partition map 

Partition 0 (_2 - 2 )
Partition 1 (this_4(D) - 4 )
Partition 2 (_6 - 6 )

Coalesce list: (2)_2 & (6)_6 [map: 0, 2] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 6 )
Partition 2 (this_4(D) - 4 )

virtual sf::Vector2f Collider::getHalfSize() (struct Collider * const this)
{
  const struct Vector2f & D.84875;
  struct Vector2f D.84873;
  struct RectangleShape & _1;
  const struct Vector2f & _2;
  const struct Vector2f & _6;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = this_4(D)->body;
  _6 = sf::RectangleShape::getSize (_1);
  _2 = _6;
  D.84873 = sf::operator/<float> (_2, 2.0e+0);
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0> [0.00%]:
  return D.84873;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = this_4(D)->body;

(insn 6 5 7 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [17 this+0 S8 A64])) "classes/Collider.cpp":104 -1
     (nil))

(insn 7 6 0 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (plus:DI (reg/f:DI 91)
                (const_int 8 [0x8])) [18 this_4(D)->body+0 S8 A64])) "classes/Collider.cpp":104 -1
     (nil))

;; _6 = sf::RectangleShape::getSize (_1);

(insn 8 7 9 (set (reg:DI 5 di)
        (reg/f:DI 87 [ _1 ])) "classes/Collider.cpp":104 -1
     (nil))

(call_insn 9 8 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNK2sf14RectangleShape7getSizeEv") [flags 0x41]  <function_decl 0x7f71b5c40b00 getSize>) [0 getSize S1 A8])
            (const_int 0 [0]))) "classes/Collider.cpp":104 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 10 9 0 (set (reg/f:DI 88 [ _2 ])
        (reg:DI 0 ax)) "classes/Collider.cpp":104 -1
     (nil))

;; _2 = _6;

(nil)

;; D.84873 = sf::operator/<float> (_2, 2.0e+0);

(insn 11 10 12 (set (reg:SF 21 xmm0)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":104 -1
     (expr_list:REG_EQUAL (const_double:SF 2.0e+0 [0x0.8p+2])
        (nil)))

(insn 12 11 13 (set (reg:DI 5 di)
        (reg/f:DI 88 [ _2 ])) "classes/Collider.cpp":104 -1
     (nil))

(call_insn 13 12 14 (set (reg:DI 21 xmm0)
        (call (mem:QI (symbol_ref/i:DI ("_ZN2sfdvIfEENS_7Vector2IT_EERKS3_S2_") [flags 0x3]  <function_decl 0x7f71b5494100 operator/>) [0 operator/ S1 A8])
            (const_int 0 [0]))) "classes/Collider.cpp":104 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SF (use (reg:SF 21 xmm0))
            (nil))))

(insn 14 13 0 (set (reg:DI 89 [ D.84873 ])
        (reg:DI 21 xmm0)) "classes/Collider.cpp":104 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0> [0.00%]:

(code_label 15 14 16 48 (nil) [0 uses])

(note 16 15 0 NOTE_INSN_BASIC_BLOCK)

;; return D.84873;

(insn 17 16 18 (set (reg:DI 90 [ <retval> ])
        (reg:DI 89 [ D.84873 ])) "classes/Collider.cpp":104 -1
     (nil))

(jump_insn 18 17 19 (set (pc)
        (label_ref 0)) "classes/Collider.cpp":104 -1
     (nil))

(barrier 19 18 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 18.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [17 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "classes/Collider.cpp":103 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [17 this+0 S8 A64])) "classes/Collider.cpp":104 -1
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (plus:DI (reg/f:DI 91)
                (const_int 8 [0x8])) [18 this_4(D)->body+0 S8 A64])) "classes/Collider.cpp":104 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ _1 ])) "classes/Collider.cpp":104 -1
     (nil))
(call_insn 9 8 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNK2sf14RectangleShape7getSizeEv") [flags 0x41]  <function_decl 0x7f71b5c40b00 getSize>) [0 getSize S1 A8])
            (const_int 0 [0]))) "classes/Collider.cpp":104 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 88 [ _2 ])
        (reg:DI 0 ax)) "classes/Collider.cpp":104 -1
     (nil))
(insn 11 10 12 2 (set (reg:SF 21 xmm0)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":104 -1
     (expr_list:REG_EQUAL (const_double:SF 2.0e+0 [0x0.8p+2])
        (nil)))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg/f:DI 88 [ _2 ])) "classes/Collider.cpp":104 -1
     (nil))
(call_insn 13 12 14 2 (set (reg:DI 21 xmm0)
        (call (mem:QI (symbol_ref/i:DI ("_ZN2sfdvIfEENS_7Vector2IT_EERKS3_S2_") [flags 0x3]  <function_decl 0x7f71b5494100 operator/>) [0 operator/ S1 A8])
            (const_int 0 [0]))) "classes/Collider.cpp":104 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SF (use (reg:SF 21 xmm0))
            (nil))))
(insn 14 13 17 2 (set (reg:DI 89 [ D.84873 ])
        (reg:DI 21 xmm0)) "classes/Collider.cpp":104 -1
     (nil))
(insn 17 14 21 2 (set (reg:DI 90 [ <retval> ])
        (reg:DI 89 [ D.84873 ])) "classes/Collider.cpp":104 -1
     (nil))
(insn 21 17 22 2 (set (reg/i:DI 21 xmm0)
        (reg:DI 90 [ <retval> ])) "classes/Collider.cpp":105 -1
     (nil))
(insn 22 21 0 2 (use (reg/i:DI 21 xmm0)) "classes/Collider.cpp":105 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function SpriteCollider::SpriteCollider(sf::Sprite&, sf::Vector2f) (_ZN14SpriteColliderC2ERN2sf6SpriteENS0_7Vector2IfEE, funcdef_no=3486, decl_uid=76582, cgraph_uid=926, symbol_order=931)

SpriteCollider::SpriteCollider(sf::Sprite&, sf::Vector2f) (struct SpriteCollider * const this, struct Sprite & sprite, struct Vector2f velocity)
{
  struct CollisionBox * _1;
  int (*__vtbl_ptr_type) () * _2;
  struct Vector2f * _3;
  struct CollisionBox * _4;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  MEM[(struct  &)this_6(D)] ={v} {CLOBBER};
  _1 = &this_6(D)->D.76592;
  CollisionBox::CollisionBox (_1);
  _2 = &_ZTV14SpriteCollider + 16;
  this_6(D)->D.76592._vptr.CollisionBox = _2;
  this_6(D)->body = sprite_10(D);
  _3 = &this_6(D)->velocity;
  sf::Vector2<float>::Vector2 (_3);
  this_6(D)->velocity = velocity;
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 6 (this_6(D) - 6 )
Partition 10 (sprite_10(D) - 10 )


Partition map 

Partition 0 (this_6(D) - 6 )
Partition 1 (sprite_10(D) - 10 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (this_6(D) - 6 )
Partition 1 (sprite_10(D) - 10 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (this_6(D) - 6 )
Partition 5 (sprite_10(D) - 10 )

SpriteCollider::SpriteCollider(sf::Sprite&, sf::Vector2f) (struct SpriteCollider * const this, struct Sprite & sprite, struct Vector2f velocity)
{
  struct CollisionBox * _1;
  int (*__vtbl_ptr_type) () * _2;
  struct Vector2f * _3;
  struct CollisionBox * _4;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  MEM[(struct  &)this_6(D)] ={v} {CLOBBER};
  _1 = &this_6(D)->D.76592;
  CollisionBox::CollisionBox (_1);
  _2 = &_ZTV14SpriteCollider + 16;
  this_6(D)->D.76592._vptr.CollisionBox = _2;
  this_6(D)->body = sprite_10(D);
  _3 = &this_6(D)->velocity;
  sf::Vector2<float>::Vector2 (_3);
  this_6(D)->velocity = velocity;
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; MEM[(struct  &)this_6(D)] ={v} {CLOBBER};

(nil)

;; _1 = &this_6(D)->D.76592;

(insn 8 7 0 (set (reg/f:DI 87 [ _1 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [20 this+0 S8 A64])) "classes/Collider.cpp":108 -1
     (nil))

;; CollisionBox::CollisionBox (_1);

(insn 9 8 10 (set (reg:DI 5 di)
        (reg/f:DI 87 [ _1 ])) "classes/Collider.cpp":108 -1
     (nil))

(call_insn 10 9 0 (call (mem:QI (symbol_ref:DI ("_ZN12CollisionBoxC2Ev") [flags 0x3]  <function_decl 0x7f71b56c4900 __base_ctor >) [0 __base_ctor  S1 A8])
        (const_int 0 [0])) "classes/Collider.cpp":108 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _2 = &_ZTV14SpriteCollider + 16;

(insn 11 10 0 (set (reg/f:DI 88 [ _2 ])
        (const:DI (plus:DI (symbol_ref/i:DI ("_ZTV14SpriteCollider") [flags 0x2]  <var_decl 0x7f71b56cc120 _ZTV14SpriteCollider>)
                (const_int 16 [0x10])))) "classes/Collider.cpp":108 -1
     (nil))

;; this_6(D)->D.76592._vptr.CollisionBox = _2;

(insn 12 11 13 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [20 this+0 S8 A64])) "classes/Collider.cpp":108 -1
     (nil))

(insn 13 12 0 (set (mem/f:DI (reg/f:DI 91) [2 this_6(D)->D.76592._vptr.CollisionBox+0 S8 A64])
        (reg/f:DI 88 [ _2 ])) "classes/Collider.cpp":108 -1
     (nil))

;; this_6(D)->body = sprite_10(D);

(insn 14 13 15 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [20 this+0 S8 A64])) "classes/Collider.cpp":108 -1
     (nil))

(insn 15 14 16 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [21 sprite+0 S8 A64])) "classes/Collider.cpp":108 -1
     (nil))

(insn 16 15 0 (set (mem/f:DI (plus:DI (reg/f:DI 92)
                (const_int 8 [0x8])) [21 this_6(D)->body+0 S8 A64])
        (reg/f:DI 93)) "classes/Collider.cpp":108 -1
     (nil))

;; _3 = &this_6(D)->velocity;

(insn 17 16 18 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [20 this+0 S8 A64])) "classes/Collider.cpp":108 -1
     (nil))

(insn 18 17 0 (parallel [
            (set (reg/f:DI 89 [ _3 ])
                (plus:DI (reg/f:DI 94)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":108 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [20 this+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))

;; sf::Vector2<float>::Vector2 (_3);

(insn 19 18 20 (set (reg:DI 5 di)
        (reg/f:DI 89 [ _3 ])) "classes/Collider.cpp":108 -1
     (nil))

(call_insn 20 19 0 (call (mem:QI (symbol_ref/i:DI ("_ZN2sf7Vector2IfEC1Ev") [flags 0x3]  <function_decl 0x7f71b6580500 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) "classes/Collider.cpp":108 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; this_6(D)->velocity = velocity;

(insn 21 20 22 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [20 this+0 S8 A64])) "classes/Collider.cpp":109 -1
     (nil))

(insn 22 21 23 (set (reg:DI 96)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 velocity+0 S8 A32])) "classes/Collider.cpp":109 -1
     (nil))

(insn 23 22 0 (set (mem:DI (plus:DI (reg/f:DI 95)
                (const_int 16 [0x10])) [12 this_6(D)->velocity+0 S8 A64])
        (reg:DI 96)) "classes/Collider.cpp":109 -1
     (nil))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [20 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "classes/Collider.cpp":107 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [21 sprite+0 S8 A64])
        (reg:DI 4 si [ sprite ])) "classes/Collider.cpp":107 -1
     (nil))
(insn 4 3 5 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 velocity+0 S8 A32])
        (reg:DI 21 xmm0 [ velocity ])) "classes/Collider.cpp":107 -1
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 87 [ _1 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [20 this+0 S8 A64])) "classes/Collider.cpp":108 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ _1 ])) "classes/Collider.cpp":108 -1
     (nil))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:DI ("_ZN12CollisionBoxC2Ev") [flags 0x3]  <function_decl 0x7f71b56c4900 __base_ctor >) [0 __base_ctor  S1 A8])
        (const_int 0 [0])) "classes/Collider.cpp":108 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 88 [ _2 ])
        (const:DI (plus:DI (symbol_ref/i:DI ("_ZTV14SpriteCollider") [flags 0x2]  <var_decl 0x7f71b56cc120 _ZTV14SpriteCollider>)
                (const_int 16 [0x10])))) "classes/Collider.cpp":108 -1
     (nil))
(insn 12 11 13 2 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [20 this+0 S8 A64])) "classes/Collider.cpp":108 -1
     (nil))
(insn 13 12 14 2 (set (mem/f:DI (reg/f:DI 91) [2 this_6(D)->D.76592._vptr.CollisionBox+0 S8 A64])
        (reg/f:DI 88 [ _2 ])) "classes/Collider.cpp":108 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [20 this+0 S8 A64])) "classes/Collider.cpp":108 -1
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [21 sprite+0 S8 A64])) "classes/Collider.cpp":108 -1
     (nil))
(insn 16 15 17 2 (set (mem/f:DI (plus:DI (reg/f:DI 92)
                (const_int 8 [0x8])) [21 this_6(D)->body+0 S8 A64])
        (reg/f:DI 93)) "classes/Collider.cpp":108 -1
     (nil))
(insn 17 16 18 2 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [20 this+0 S8 A64])) "classes/Collider.cpp":108 -1
     (nil))
(insn 18 17 19 2 (parallel [
            (set (reg/f:DI 89 [ _3 ])
                (plus:DI (reg/f:DI 94)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":108 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [20 this+0 S8 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (reg/f:DI 89 [ _3 ])) "classes/Collider.cpp":108 -1
     (nil))
(call_insn 20 19 21 2 (call (mem:QI (symbol_ref/i:DI ("_ZN2sf7Vector2IfEC1Ev") [flags 0x3]  <function_decl 0x7f71b6580500 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) "classes/Collider.cpp":108 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 21 20 22 2 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [20 this+0 S8 A64])) "classes/Collider.cpp":109 -1
     (nil))
(insn 22 21 23 2 (set (reg:DI 96)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 velocity+0 S8 A32])) "classes/Collider.cpp":109 -1
     (nil))
(insn 23 22 26 2 (set (mem:DI (plus:DI (reg/f:DI 95)
                (const_int 16 [0x10])) [12 this_6(D)->velocity+0 S8 A64])
        (reg:DI 96)) "classes/Collider.cpp":109 -1
     (nil))
(insn 26 23 0 2 (const_int 0 [0]) "classes/Collider.cpp":110 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function SpriteCollider::~SpriteCollider() (_ZN14SpriteColliderD2Ev, funcdef_no=3489, decl_uid=76589, cgraph_uid=929, symbol_order=934)

SpriteCollider::~SpriteCollider() (struct SpriteCollider * const this)
{
  int (*__vtbl_ptr_type) () * _1;
  struct CollisionBox * _2;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = &_ZTV14SpriteCollider + 16;
  this_4(D)->D.76592._vptr.CollisionBox = _1;
  _2 = &this_4(D)->D.76592;
  CollisionBox::~CollisionBox (_2);
  MEM[(struct  &)this_4(D)] ={v} {CLOBBER};
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 4 (this_4(D) - 4 )


Partition map 

Partition 0 (this_4(D) - 4 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (this_4(D) - 4 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (this_4(D) - 4 )

SpriteCollider::~SpriteCollider() (struct SpriteCollider * const this)
{
  int (*__vtbl_ptr_type) () * _1;
  struct CollisionBox * _2;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = &_ZTV14SpriteCollider + 16;
  this_4(D)->D.76592._vptr.CollisionBox = _1;
  _2 = &this_4(D)->D.76592;
  CollisionBox::~CollisionBox (_2);
  MEM[(struct  &)this_4(D)] ={v} {CLOBBER};
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = &_ZTV14SpriteCollider + 16;

(insn 6 5 0 (set (reg/f:DI 87 [ _1 ])
        (const:DI (plus:DI (symbol_ref/i:DI ("_ZTV14SpriteCollider") [flags 0x2]  <var_decl 0x7f71b56cc120 _ZTV14SpriteCollider>)
                (const_int 16 [0x10])))) "classes/Collider.cpp":112 -1
     (nil))

;; this_4(D)->D.76592._vptr.CollisionBox = _1;

(insn 7 6 8 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [20 this+0 S8 A64])) "classes/Collider.cpp":112 -1
     (nil))

(insn 8 7 0 (set (mem/f:DI (reg/f:DI 89) [2 this_4(D)->D.76592._vptr.CollisionBox+0 S8 A64])
        (reg/f:DI 87 [ _1 ])) "classes/Collider.cpp":112 -1
     (nil))

;; _2 = &this_4(D)->D.76592;

(insn 9 8 0 (set (reg/f:DI 88 [ _2 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [20 this+0 S8 A64])) "classes/Collider.cpp":112 -1
     (nil))

;; CollisionBox::~CollisionBox (_2);

(insn 10 9 11 (set (reg:DI 5 di)
        (reg/f:DI 88 [ _2 ])) "classes/Collider.cpp":112 -1
     (nil))

(call_insn 11 10 0 (call (mem:QI (symbol_ref:DI ("_ZN12CollisionBoxD2Ev") [flags 0x3]  <function_decl 0x7f71b56c4b00 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) "classes/Collider.cpp":112 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; MEM[(struct  &)this_4(D)] ={v} {CLOBBER};

(nil)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [20 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "classes/Collider.cpp":112 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 87 [ _1 ])
        (const:DI (plus:DI (symbol_ref/i:DI ("_ZTV14SpriteCollider") [flags 0x2]  <var_decl 0x7f71b56cc120 _ZTV14SpriteCollider>)
                (const_int 16 [0x10])))) "classes/Collider.cpp":112 -1
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [20 this+0 S8 A64])) "classes/Collider.cpp":112 -1
     (nil))
(insn 8 7 9 2 (set (mem/f:DI (reg/f:DI 89) [2 this_4(D)->D.76592._vptr.CollisionBox+0 S8 A64])
        (reg/f:DI 87 [ _1 ])) "classes/Collider.cpp":112 -1
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 88 [ _2 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [20 this+0 S8 A64])) "classes/Collider.cpp":112 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg/f:DI 88 [ _2 ])) "classes/Collider.cpp":112 -1
     (nil))
(call_insn 11 10 14 2 (call (mem:QI (symbol_ref:DI ("_ZN12CollisionBoxD2Ev") [flags 0x3]  <function_decl 0x7f71b56c4b00 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) "classes/Collider.cpp":112 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 14 11 0 2 (const_int 0 [0]) "classes/Collider.cpp":114 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function virtual void SpriteCollider::move(float, float) (_ZN14SpriteCollider4moveEff, funcdef_no=3491, decl_uid=76570, cgraph_uid=931, symbol_order=936)

virtual void SpriteCollider::move(float, float) (struct SpriteCollider * const this, float dx, float dy)
{
  struct Sprite & _1;
  struct Transformable * _2;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = this_4(D)->body;
  _2 = &_1->D.76331;
  sf::Transformable::move (_2, dx_5(D), dy_6(D));
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 4 (this_4(D) - 4 )
Partition 5 (dx_5(D) - 5 )
Partition 6 (dy_6(D) - 6 )


Partition map 

Partition 0 (this_4(D) - 4 )
Partition 1 (dx_5(D) - 5 )
Partition 2 (dy_6(D) - 6 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (this_4(D) - 4 )
Partition 1 (dx_5(D) - 5 )
Partition 2 (dy_6(D) - 6 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (this_4(D) - 4 )
Partition 3 (dx_5(D) - 5 )
Partition 4 (dy_6(D) - 6 )

virtual void SpriteCollider::move(float, float) (struct SpriteCollider * const this, float dx, float dy)
{
  struct Sprite & _1;
  struct Transformable * _2;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = this_4(D)->body;
  _2 = &_1->D.76331;
  sf::Transformable::move (_2, dx_5(D), dy_6(D));
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = this_4(D)->body;

(insn 8 7 9 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [20 this+0 S8 A64])) "classes/Collider.cpp":117 -1
     (nil))

(insn 9 8 0 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (plus:DI (reg/f:DI 89)
                (const_int 8 [0x8])) [21 this_4(D)->body+0 S8 A64])) "classes/Collider.cpp":117 -1
     (nil))

;; _2 = &_1->D.76331;

(insn 10 9 0 (parallel [
            (set (reg/f:DI 88 [ _2 ])
                (plus:DI (reg/f:DI 87 [ _1 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":117 -1
     (nil))

;; sf::Transformable::move (_2, dx_5(D), dy_6(D));

(insn 11 10 12 (set (reg:SF 90)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [5 dy+0 S4 A32])) "classes/Collider.cpp":117 -1
     (nil))

(insn 12 11 13 (set (reg:SF 91)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [5 dx+0 S4 A32])) "classes/Collider.cpp":117 -1
     (nil))

(insn 13 12 14 (set (reg:SF 22 xmm1)
        (reg:SF 90)) "classes/Collider.cpp":117 -1
     (nil))

(insn 14 13 15 (set (reg:SF 21 xmm0)
        (reg:SF 91)) "classes/Collider.cpp":117 -1
     (nil))

(insn 15 14 16 (set (reg:DI 5 di)
        (reg/f:DI 88 [ _2 ])) "classes/Collider.cpp":117 -1
     (nil))

(call_insn 16 15 0 (call (mem:QI (symbol_ref:DI ("_ZN2sf13Transformable4moveEff") [flags 0x41]  <function_decl 0x7f71b657b500 move>) [0 move S1 A8])
        (const_int 0 [0])) "classes/Collider.cpp":117 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SF (use (reg:SF 21 xmm0))
            (expr_list:SF (use (reg:SF 22 xmm1))
                (nil)))))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [20 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "classes/Collider.cpp":116 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [5 dx+0 S4 A32])
        (reg:SF 21 xmm0 [ dx ])) "classes/Collider.cpp":116 -1
     (nil))
(insn 4 3 5 2 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [5 dy+0 S4 A32])
        (reg:SF 22 xmm1 [ dy ])) "classes/Collider.cpp":116 -1
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [20 this+0 S8 A64])) "classes/Collider.cpp":117 -1
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (plus:DI (reg/f:DI 89)
                (const_int 8 [0x8])) [21 this_4(D)->body+0 S8 A64])) "classes/Collider.cpp":117 -1
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg/f:DI 88 [ _2 ])
                (plus:DI (reg/f:DI 87 [ _1 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":117 -1
     (nil))
(insn 11 10 12 2 (set (reg:SF 90)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [5 dy+0 S4 A32])) "classes/Collider.cpp":117 -1
     (nil))
(insn 12 11 13 2 (set (reg:SF 91)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [5 dx+0 S4 A32])) "classes/Collider.cpp":117 -1
     (nil))
(insn 13 12 14 2 (set (reg:SF 22 xmm1)
        (reg:SF 90)) "classes/Collider.cpp":117 -1
     (nil))
(insn 14 13 15 2 (set (reg:SF 21 xmm0)
        (reg:SF 91)) "classes/Collider.cpp":117 -1
     (nil))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg/f:DI 88 [ _2 ])) "classes/Collider.cpp":117 -1
     (nil))
(call_insn 16 15 19 2 (call (mem:QI (symbol_ref:DI ("_ZN2sf13Transformable4moveEff") [flags 0x41]  <function_decl 0x7f71b657b500 move>) [0 move S1 A8])
        (const_int 0 [0])) "classes/Collider.cpp":117 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SF (use (reg:SF 21 xmm0))
            (expr_list:SF (use (reg:SF 22 xmm1))
                (nil)))))
(insn 19 16 0 2 (const_int 0 [0]) "classes/Collider.cpp":118 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function virtual sf::Vector2f SpriteCollider::getPosition() (_ZN14SpriteCollider11getPositionEv, funcdef_no=3492, decl_uid=76572, cgraph_uid=932, symbol_order=937)

virtual sf::Vector2f SpriteCollider::getPosition() (struct SpriteCollider * const this)
{
  const struct Vector2f & D.84881;
  struct Vector2f D.84879;
  struct Sprite & _1;
  struct Transformable * _2;
  const struct Vector2f & _3;
  const struct Vector2f & _7;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = this_5(D)->body;
  _2 = &_1->D.76331;
  _7 = sf::Transformable::getPosition (_2);
  _3 = _7;
  D.84879 = MEM[(const struct Vector2 &)_3];
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0> [0.00%]:
  return D.84879;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 5 (this_5(D) - 5 )
Partition 7 (_7 - 7 )


Partition map 

Partition 0 (_3 - 3 )
Partition 1 (this_5(D) - 5 )
Partition 2 (_7 - 7 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(1, 0) _3 <-> _7

Partition map 

Partition 0 (_3 - 3 )
Partition 1 (this_5(D) - 5 )
Partition 2 (_7 - 7 )

Coalesce list: (3)_3 & (7)_7 [map: 0, 2] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 7 )
Partition 3 (this_5(D) - 5 )

virtual sf::Vector2f SpriteCollider::getPosition() (struct SpriteCollider * const this)
{
  const struct Vector2f & D.84881;
  struct Vector2f D.84879;
  struct Sprite & _1;
  struct Transformable * _2;
  const struct Vector2f & _3;
  const struct Vector2f & _7;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = this_5(D)->body;
  _2 = &_1->D.76331;
  _7 = sf::Transformable::getPosition (_2);
  _3 = _7;
  D.84879 = MEM[(const struct Vector2 &)_3];
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0> [0.00%]:
  return D.84879;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = this_5(D)->body;

(insn 6 5 7 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [20 this+0 S8 A64])) "classes/Collider.cpp":121 -1
     (nil))

(insn 7 6 0 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (plus:DI (reg/f:DI 92)
                (const_int 8 [0x8])) [21 this_5(D)->body+0 S8 A64])) "classes/Collider.cpp":121 -1
     (nil))

;; _2 = &_1->D.76331;

(insn 8 7 0 (parallel [
            (set (reg/f:DI 88 [ _2 ])
                (plus:DI (reg/f:DI 87 [ _1 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":121 -1
     (nil))

;; _7 = sf::Transformable::getPosition (_2);

(insn 9 8 10 (set (reg:DI 5 di)
        (reg/f:DI 88 [ _2 ])) "classes/Collider.cpp":121 -1
     (nil))

(call_insn 10 9 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNK2sf13Transformable11getPositionEv") [flags 0x41]  <function_decl 0x7f71b657b100 getPosition>) [0 getPosition S1 A8])
            (const_int 0 [0]))) "classes/Collider.cpp":121 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 11 10 0 (set (reg/f:DI 89 [ _3 ])
        (reg:DI 0 ax)) "classes/Collider.cpp":121 -1
     (nil))

;; _3 = _7;

(nil)

;; D.84879 = MEM[(const struct Vector2 &)_3];

(insn 12 11 0 (set (reg:DI 90 [ D.84879 ])
        (mem:DI (reg/f:DI 89 [ _3 ]) [12 MEM[(const struct Vector2 &)_3]+0 S8 A32])) "classes/Collider.cpp":121 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0> [0.00%]:

(code_label 13 12 14 53 (nil) [0 uses])

(note 14 13 0 NOTE_INSN_BASIC_BLOCK)

;; return D.84879;

(insn 15 14 16 (set (reg:DI 91 [ <retval> ])
        (reg:DI 90 [ D.84879 ])) "classes/Collider.cpp":121 -1
     (nil))

(jump_insn 16 15 17 (set (pc)
        (label_ref 0)) "classes/Collider.cpp":121 -1
     (nil))

(barrier 17 16 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 16.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [20 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "classes/Collider.cpp":120 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [20 this+0 S8 A64])) "classes/Collider.cpp":121 -1
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (plus:DI (reg/f:DI 92)
                (const_int 8 [0x8])) [21 this_5(D)->body+0 S8 A64])) "classes/Collider.cpp":121 -1
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg/f:DI 88 [ _2 ])
                (plus:DI (reg/f:DI 87 [ _1 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":121 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 88 [ _2 ])) "classes/Collider.cpp":121 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNK2sf13Transformable11getPositionEv") [flags 0x41]  <function_decl 0x7f71b657b100 getPosition>) [0 getPosition S1 A8])
            (const_int 0 [0]))) "classes/Collider.cpp":121 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 89 [ _3 ])
        (reg:DI 0 ax)) "classes/Collider.cpp":121 -1
     (nil))
(insn 12 11 15 2 (set (reg:DI 90 [ D.84879 ])
        (mem:DI (reg/f:DI 89 [ _3 ]) [12 MEM[(const struct Vector2 &)_3]+0 S8 A32])) "classes/Collider.cpp":121 -1
     (nil))
(insn 15 12 19 2 (set (reg:DI 91 [ <retval> ])
        (reg:DI 90 [ D.84879 ])) "classes/Collider.cpp":121 -1
     (nil))
(insn 19 15 20 2 (set (reg/i:DI 21 xmm0)
        (reg:DI 91 [ <retval> ])) "classes/Collider.cpp":122 -1
     (nil))
(insn 20 19 0 2 (use (reg/i:DI 21 xmm0)) "classes/Collider.cpp":122 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function virtual sf::Vector2f SpriteCollider::getHalfSize() (_ZN14SpriteCollider11getHalfSizeEv, funcdef_no=3493, decl_uid=76574, cgraph_uid=933, symbol_order=938)

virtual sf::Vector2f SpriteCollider::getHalfSize() (struct SpriteCollider * const this)
{
  const struct IntRect & D.84884;
  struct IntRect boundRect;
  struct Vector2f D.81194;
  struct Vector2f D.84882;
  struct Sprite & _1;
  const struct IntRect & _2;
  int _3;
  float _4;
  int _5;
  float _6;
  const struct IntRect & _10;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = this_8(D)->body;
  _10 = sf::Sprite::getTextureRect (_1);
  _2 = _10;
  boundRect = MEM[(const struct Rect &)_2];
  _3 = boundRect.height;
  _4 = (float) _3;
  _5 = boundRect.width;
  _6 = (float) _5;
  sf::Vector2<float>::Vector2 (&D.81194, _6, _4);
  D.84882 = sf::operator/<float> (&D.81194, 2.0e+0);
  D.81194 ={v} {CLOBBER};
  boundRect ={v} {CLOBBER};
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L2> [0.00%]:
  return D.84882;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 8 (this_8(D) - 8 )
Partition 10 (_10 - 10 )


Partition map 

Partition 0 (_2 - 2 )
Partition 1 (this_8(D) - 8 )
Partition 2 (_10 - 10 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(1, 0) _2 <-> _10

Partition map 

Partition 0 (_2 - 2 )
Partition 1 (this_8(D) - 8 )
Partition 2 (_10 - 10 )

Coalesce list: (2)_2 & (10)_10 [map: 0, 2] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 10 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (this_8(D) - 8 )

virtual sf::Vector2f SpriteCollider::getHalfSize() (struct SpriteCollider * const this)
{
  const struct IntRect & D.84884;
  struct IntRect boundRect;
  struct Vector2f D.81194;
  struct Vector2f D.84882;
  struct Sprite & _1;
  const struct IntRect & _2;
  int _3;
  float _4;
  int _5;
  float _6;
  const struct IntRect & _10;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = this_8(D)->body;
  _10 = sf::Sprite::getTextureRect (_1);
  _2 = _10;
  boundRect = MEM[(const struct Rect &)_2];
  _3 = boundRect.height;
  _4 = (float) _3;
  _5 = boundRect.width;
  _6 = (float) _5;
  sf::Vector2<float>::Vector2 (&D.81194, _6, _4);
  D.84882 = sf::operator/<float> (&D.81194, 2.0e+0);
  D.81194 ={v} {CLOBBER};
  boundRect ={v} {CLOBBER};
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L2> [0.00%]:
  return D.84882;
;;    succ:       EXIT

}


Partition 1: size 16 align 16
	boundRect
Partition 0: size 8 align 4
	D.81194

;; Generating RTL for gimple basic block 2

;; _1 = this_8(D)->body;

(insn 7 6 8 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [20 this+0 S8 A64])) "classes/Collider.cpp":125 -1
     (nil))

(insn 8 7 0 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (plus:DI (reg/f:DI 95)
                (const_int 8 [0x8])) [21 this_8(D)->body+0 S8 A64])) "classes/Collider.cpp":125 -1
     (nil))

;; _10 = sf::Sprite::getTextureRect (_1);

(insn 9 8 10 (set (reg:DI 5 di)
        (reg/f:DI 87 [ _1 ])) "classes/Collider.cpp":125 -1
     (nil))

(call_insn 10 9 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNK2sf6Sprite14getTextureRectEv") [flags 0x41]  <function_decl 0x7f71b56ae500 getTextureRect>) [0 getTextureRect S1 A8])
            (const_int 0 [0]))) "classes/Collider.cpp":125 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 11 10 0 (set (reg/f:DI 88 [ _2 ])
        (reg:DI 0 ax)) "classes/Collider.cpp":125 -1
     (nil))

;; _2 = _10;

(nil)

;; boundRect = MEM[(const struct Rect &)_2];

(insn 12 11 13 (set (reg:TI 96)
        (mem:TI (reg/f:DI 88 [ _2 ]) [23 MEM[(const struct Rect &)_2]+0 S16 A32])) "classes/Collider.cpp":125 -1
     (nil))

(insn 13 12 0 (set (mem/c:TI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [23 boundRect+0 S16 A64])
        (reg:TI 96)) "classes/Collider.cpp":125 -1
     (nil))

;; _3 = boundRect.height;

(insn 14 13 0 (set (reg:SI 89 [ _3 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [24 boundRect.height+0 S4 A32])) "classes/Collider.cpp":127 -1
     (nil))

;; _4 = (float) _3;

(insn 15 14 0 (set (reg:SF 90 [ _4 ])
        (float:SF (reg:SI 89 [ _3 ]))) "classes/Collider.cpp":127 -1
     (nil))

;; _5 = boundRect.width;

(insn 16 15 0 (set (reg:SI 91 [ _5 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [24 boundRect.width+0 S4 A64])) "classes/Collider.cpp":127 -1
     (nil))

;; _6 = (float) _5;

(insn 17 16 0 (set (reg:SF 92 [ _6 ])
        (float:SF (reg:SI 91 [ _5 ]))) "classes/Collider.cpp":127 -1
     (nil))

;; sf::Vector2<float>::Vector2 (&D.81194, _6, _4);

(insn 18 17 19 (parallel [
            (set (reg:DI 97)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":127 -1
     (nil))

(insn 19 18 20 (set (reg:SF 22 xmm1)
        (reg:SF 90 [ _4 ])) "classes/Collider.cpp":127 -1
     (nil))

(insn 20 19 21 (set (reg:SF 21 xmm0)
        (reg:SF 92 [ _6 ])) "classes/Collider.cpp":127 -1
     (nil))

(insn 21 20 22 (set (reg:DI 5 di)
        (reg:DI 97)) "classes/Collider.cpp":127 -1
     (nil))

(call_insn 22 21 0 (call (mem:QI (symbol_ref/i:DI ("_ZN2sf7Vector2IfEC1Eff") [flags 0x3]  <function_decl 0x7f71b6580300 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) "classes/Collider.cpp":127 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SF (use (reg:SF 21 xmm0))
            (expr_list:SF (use (reg:SF 22 xmm1))
                (nil)))))

;; D.84882 = sf::operator/<float> (&D.81194, 2.0e+0);

(insn 23 22 24 (parallel [
            (set (reg:DI 98)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":127 -1
     (nil))

(insn 24 23 25 (set (reg:SF 21 xmm0)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":127 -1
     (expr_list:REG_EQUAL (const_double:SF 2.0e+0 [0x0.8p+2])
        (nil)))

(insn 25 24 26 (set (reg:DI 5 di)
        (reg:DI 98)) "classes/Collider.cpp":127 -1
     (nil))

(call_insn 26 25 27 (set (reg:DI 21 xmm0)
        (call (mem:QI (symbol_ref/i:DI ("_ZN2sfdvIfEENS_7Vector2IT_EERKS3_S2_") [flags 0x3]  <function_decl 0x7f71b5494100 operator/>) [0 operator/ S1 A8])
            (const_int 0 [0]))) "classes/Collider.cpp":127 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SF (use (reg:SF 21 xmm0))
            (nil))))

(insn 27 26 0 (set (reg:DI 93 [ D.84882 ])
        (reg:DI 21 xmm0)) "classes/Collider.cpp":127 -1
     (nil))

;; D.81194 ={v} {CLOBBER};

(nil)

;; boundRect ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 3

;; <L2> [0.00%]:

(code_label 28 27 29 55 (nil) [0 uses])

(note 29 28 0 NOTE_INSN_BASIC_BLOCK)

;; return D.84882;

(insn 30 29 31 (set (reg:DI 94 [ <retval> ])
        (reg:DI 93 [ D.84882 ])) "classes/Collider.cpp":127 -1
     (nil))

(jump_insn 31 30 32 (set (pc)
        (label_ref 0)) "classes/Collider.cpp":127 -1
     (nil))

(barrier 32 31 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 31.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [20 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "classes/Collider.cpp":124 -1
     (nil))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [14 D.84919+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":124 -1
     (nil))
(insn 7 4 8 2 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [20 this+0 S8 A64])) "classes/Collider.cpp":125 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (plus:DI (reg/f:DI 95)
                (const_int 8 [0x8])) [21 this_8(D)->body+0 S8 A64])) "classes/Collider.cpp":125 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ _1 ])) "classes/Collider.cpp":125 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNK2sf6Sprite14getTextureRectEv") [flags 0x41]  <function_decl 0x7f71b56ae500 getTextureRect>) [0 getTextureRect S1 A8])
            (const_int 0 [0]))) "classes/Collider.cpp":125 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 88 [ _2 ])
        (reg:DI 0 ax)) "classes/Collider.cpp":125 -1
     (nil))
(insn 12 11 13 2 (set (reg:TI 96)
        (mem:TI (reg/f:DI 88 [ _2 ]) [23 MEM[(const struct Rect &)_2]+0 S16 A32])) "classes/Collider.cpp":125 -1
     (nil))
(insn 13 12 14 2 (set (mem/c:TI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [23 boundRect+0 S16 A64])
        (reg:TI 96)) "classes/Collider.cpp":125 -1
     (nil))
(insn 14 13 15 2 (set (reg:SI 89 [ _3 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [24 boundRect.height+0 S4 A32])) "classes/Collider.cpp":127 -1
     (nil))
(insn 15 14 16 2 (set (reg:SF 90 [ _4 ])
        (float:SF (reg:SI 89 [ _3 ]))) "classes/Collider.cpp":127 -1
     (nil))
(insn 16 15 17 2 (set (reg:SI 91 [ _5 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [24 boundRect.width+0 S4 A64])) "classes/Collider.cpp":127 -1
     (nil))
(insn 17 16 18 2 (set (reg:SF 92 [ _6 ])
        (float:SF (reg:SI 91 [ _5 ]))) "classes/Collider.cpp":127 -1
     (nil))
(insn 18 17 19 2 (parallel [
            (set (reg:DI 97)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":127 -1
     (nil))
(insn 19 18 20 2 (set (reg:SF 22 xmm1)
        (reg:SF 90 [ _4 ])) "classes/Collider.cpp":127 -1
     (nil))
(insn 20 19 21 2 (set (reg:SF 21 xmm0)
        (reg:SF 92 [ _6 ])) "classes/Collider.cpp":127 -1
     (nil))
(insn 21 20 22 2 (set (reg:DI 5 di)
        (reg:DI 97)) "classes/Collider.cpp":127 -1
     (nil))
(call_insn 22 21 23 2 (call (mem:QI (symbol_ref/i:DI ("_ZN2sf7Vector2IfEC1Eff") [flags 0x3]  <function_decl 0x7f71b6580300 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) "classes/Collider.cpp":127 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SF (use (reg:SF 21 xmm0))
            (expr_list:SF (use (reg:SF 22 xmm1))
                (nil)))))
(insn 23 22 24 2 (parallel [
            (set (reg:DI 98)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Collider.cpp":127 -1
     (nil))
(insn 24 23 25 2 (set (reg:SF 21 xmm0)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [5  S4 A32])) "classes/Collider.cpp":127 -1
     (expr_list:REG_EQUAL (const_double:SF 2.0e+0 [0x0.8p+2])
        (nil)))
(insn 25 24 26 2 (set (reg:DI 5 di)
        (reg:DI 98)) "classes/Collider.cpp":127 -1
     (nil))
(call_insn 26 25 27 2 (set (reg:DI 21 xmm0)
        (call (mem:QI (symbol_ref/i:DI ("_ZN2sfdvIfEENS_7Vector2IT_EERKS3_S2_") [flags 0x3]  <function_decl 0x7f71b5494100 operator/>) [0 operator/ S1 A8])
            (const_int 0 [0]))) "classes/Collider.cpp":127 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SF (use (reg:SF 21 xmm0))
            (nil))))
(insn 27 26 30 2 (set (reg:DI 93 [ D.84882 ])
        (reg:DI 21 xmm0)) "classes/Collider.cpp":127 -1
     (nil))
(insn 30 27 34 2 (set (reg:DI 94 [ <retval> ])
        (reg:DI 93 [ D.84882 ])) "classes/Collider.cpp":127 -1
     (nil))
(insn 34 30 35 2 (set (reg/i:DI 21 xmm0)
        (reg:DI 94 [ <retval> ])) "classes/Collider.cpp":128 -1
     (nil))
(insn 35 34 36 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [14 D.84919+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) "classes/Collider.cpp":128 -1
     (nil))
(jump_insn 36 35 42 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) "classes/Collider.cpp":128 -1
     (nil)
 -> 39)
;;  succ:       7
;;              6 (FALLTHRU)

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
(note 42 36 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn 37 42 38 6 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f71b51e7f00 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "classes/Collider.cpp":128 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      

(barrier 38 37 39)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
(code_label 39 38 43 7 56 (nil) [1 uses])
(note 43 39 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 40 43 0 7 (use (reg/i:DI 21 xmm0)) "classes/Collider.cpp":128 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function sf::Vector2<T>::Vector2(T, T) [with T = float] (_ZN2sf7Vector2IfEC2Eff, funcdef_no=3755, decl_uid=58339, cgraph_uid=1195, symbol_order=1200)

sf::Vector2<T>::Vector2(T, T) [with T = float] (struct Vector2 * const this, float X, float Y)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  this_2(D)->x = X_4(D);
  this_2(D)->y = Y_6(D);
  return;
;;    succ:       EXIT

}



Partition map 

Partition 2 (this_2(D) - 2 )
Partition 4 (X_4(D) - 4 )
Partition 6 (Y_6(D) - 6 )


Partition map 

Partition 0 (this_2(D) - 2 )
Partition 1 (X_4(D) - 4 )
Partition 2 (Y_6(D) - 6 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (this_2(D) - 2 )
Partition 1 (X_4(D) - 4 )
Partition 2 (Y_6(D) - 6 )

After Coalescing:

Partition map 

Partition 0 (this_2(D) - 2 )
Partition 1 (X_4(D) - 4 )
Partition 2 (Y_6(D) - 6 )

sf::Vector2<T>::Vector2(T, T) [with T = float] (struct Vector2 * const this, float X, float Y)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  this_2(D)->x = X_4(D);
  this_2(D)->y = Y_6(D);
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; MEM[(struct  &)this_2(D)] ={v} {CLOBBER};

(nil)

;; this_2(D)->x = X_4(D);

(insn 8 7 9 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [25 this+0 S8 A64])) "/usr/include/SFML/System/Vector2.inl":40 -1
     (nil))

(insn 9 8 10 (set (reg:SF 88)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [5 X+0 S4 A32])) "/usr/include/SFML/System/Vector2.inl":40 -1
     (nil))

(insn 10 9 0 (set (mem:SF (reg/f:DI 87) [5 this_2(D)->x+0 S4 A32])
        (reg:SF 88)) "/usr/include/SFML/System/Vector2.inl":40 -1
     (nil))

;; this_2(D)->y = Y_6(D);

(insn 11 10 12 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [25 this+0 S8 A64])) "/usr/include/SFML/System/Vector2.inl":40 -1
     (nil))

(insn 12 11 13 (set (reg:SF 90)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [5 Y+0 S4 A32])) "/usr/include/SFML/System/Vector2.inl":40 -1
     (nil))

(insn 13 12 0 (set (mem:SF (plus:DI (reg/f:DI 89)
                (const_int 4 [0x4])) [5 this_2(D)->y+0 S4 A32])
        (reg:SF 90)) "/usr/include/SFML/System/Vector2.inl":40 -1
     (nil))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [25 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "/usr/include/SFML/System/Vector2.inl":38 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [5 X+0 S4 A32])
        (reg:SF 21 xmm0 [ X ])) "/usr/include/SFML/System/Vector2.inl":38 -1
     (nil))
(insn 4 3 5 2 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [5 Y+0 S4 A32])
        (reg:SF 22 xmm1 [ Y ])) "/usr/include/SFML/System/Vector2.inl":38 -1
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [25 this+0 S8 A64])) "/usr/include/SFML/System/Vector2.inl":40 -1
     (nil))
(insn 9 8 10 2 (set (reg:SF 88)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [5 X+0 S4 A32])) "/usr/include/SFML/System/Vector2.inl":40 -1
     (nil))
(insn 10 9 11 2 (set (mem:SF (reg/f:DI 87) [5 this_2(D)->x+0 S4 A32])
        (reg:SF 88)) "/usr/include/SFML/System/Vector2.inl":40 -1
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [25 this+0 S8 A64])) "/usr/include/SFML/System/Vector2.inl":40 -1
     (nil))
(insn 12 11 13 2 (set (reg:SF 90)
        (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [5 Y+0 S4 A32])) "/usr/include/SFML/System/Vector2.inl":40 -1
     (nil))
(insn 13 12 16 2 (set (mem:SF (plus:DI (reg/f:DI 89)
                (const_int 4 [0x4])) [5 this_2(D)->y+0 S4 A32])
        (reg:SF 90)) "/usr/include/SFML/System/Vector2.inl":40 -1
     (nil))
(insn 16 13 0 2 (const_int 0 [0]) "/usr/include/SFML/System/Vector2.inl":43 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function constexpr const _Tp& std::min(const _Tp&, const _Tp&) [with _Tp = float] (_ZSt3minIfERKT_S2_S2_, funcdef_no=3757, decl_uid=81074, cgraph_uid=1197, symbol_order=1202)

constexpr const _Tp& std::min(const _Tp&, const _Tp&) [with _Tp = float] (const float & __a, const float & __b)
{
  const float & D.84868;
  float _1;
  float _2;
  const float & _3;
  const float & _7;
  const float & _8;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = *__b_5(D);
  _2 = *__a_6(D);
  if (_1 < _2)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _8 = __b_5(D);
  goto <bb 5> (<L2>); [0.00%]
;;    succ:       5

;;   basic block 4, loop depth 0
;;    pred:       2
  _7 = __a_6(D);
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       3
;;                4
  # _3 = PHI <_8(3), _7(4)>
<L2> [0.00%]:
  return _3;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 5 (__b_5(D) - 5 )
Partition 6 (__a_6(D) - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9(D) - 9 )


Partition map 

Partition 0 (_3 - 3 )
Partition 1 (__b_5(D) - 5 )
Partition 2 (__a_6(D) - 6 )
Partition 3 (_7 - 7 )
Partition 4 (_8 - 8 )
Partition 5 (_9(D) - 9 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (_3 - 3 )
Partition 1 (__b_5(D) - 5 )
Partition 2 (__a_6(D) - 6 )
Partition 3 (_7 - 7 )
Partition 4 (_8 - 8 )
Partition 5 (_9(D) - 9 )

Coalesce list: (3)_3 & (7)_7 [map: 0, 3] : Success -> 0
Coalesce list: (3)_3 & (8)_8 [map: 0, 4] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 7 8 )
Partition 3 (__b_5(D) - 5 )
Partition 4 (__a_6(D) - 6 )
Partition 5 (_9(D) - 9 )

constexpr const _Tp& std::min(const _Tp&, const _Tp&) [with _Tp = float] (const float & __a, const float & __b)
{
  const float & D.84868;
  float _1;
  float _2;
  const float & _3;
  const float & _7;
  const float & _8;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = *__b_5(D);
  _2 = *__a_6(D);
  if (_1 < _2)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _8 = __b_5(D);
  goto <bb 5> (<L2>); [0.00%]
;;    succ:       5

;;   basic block 4, loop depth 0
;;    pred:       2
  _7 = __a_6(D);
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       3
;;                4
  # _3 = PHI <_8(3), _7(4)>
<L2> [0.00%]:
  return _3;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = *__b_5(D);

(insn 7 6 8 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [13 __b+0 S8 A64])) "/usr/include/c++/7/bits/stl_algobase.h":200 -1
     (nil))

(insn 8 7 0 (set (reg:SF 87 [ _1 ])
        (mem:SF (reg/f:DI 91) [5 *__b_5(D)+0 S4 A32])) "/usr/include/c++/7/bits/stl_algobase.h":200 -1
     (nil))

;; _2 = *__a_6(D);

(insn 9 8 10 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [13 __a+0 S8 A64])) "/usr/include/c++/7/bits/stl_algobase.h":200 -1
     (nil))

(insn 10 9 0 (set (reg:SF 88 [ _2 ])
        (mem:SF (reg/f:DI 92) [5 *__a_6(D)+0 S4 A32])) "/usr/include/c++/7/bits/stl_algobase.h":200 -1
     (nil))

;; if (_1 < _2)

(insn 11 10 12 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 88 [ _2 ])
            (reg:SF 87 [ _1 ]))) "/usr/include/c++/7/bits/stl_algobase.h":200 -1
     (nil))

(jump_insn 12 11 13 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 15)
            (pc))) "/usr/include/c++/7/bits/stl_algobase.h":200 -1
     (nil))

(jump_insn 13 12 14 (set (pc)
        (label_ref 0)) "/usr/include/c++/7/bits/stl_algobase.h":200 -1
     (nil))

(barrier 14 13 15)

(code_label 15 14 0 60 (nil) [0 uses])

;; Generating RTL for gimple basic block 3

;; _8 = __b_5(D);

(insn 17 16 0 (set (reg/f:DI 89 [ _3 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [13 __b+0 S8 A64])) "/usr/include/c++/7/bits/stl_algobase.h":201 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 20 19 21 59 (nil) [0 uses])

(note 21 20 0 NOTE_INSN_BASIC_BLOCK)

;; _7 = __a_6(D);

(insn 22 21 0 (set (reg/f:DI 89 [ _3 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [13 __a+0 S8 A64])) "/usr/include/c++/7/bits/stl_algobase.h":202 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; <L2> [0.00%]:

(code_label 23 22 24 61 (nil) [0 uses])

(note 24 23 0 NOTE_INSN_BASIC_BLOCK)

;; return _3;

(insn 25 24 26 (set (reg/f:DI 90 [ <retval> ])
        (reg/f:DI 89 [ _3 ])) -1
     (nil))

(jump_insn 26 25 27 (set (pc)
        (label_ref 0)) -1
     (nil))

(barrier 27 26 0)
Purged non-fallthru edges from bb 9


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 2->5 redirected to 6
Forwarding edge 2->4 to 7 failed.
Forwarding edge 2->4 to 7 failed.
deleting block 5
Removing jump 26.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.


try_optimize_cfg iteration 2

Forwarding edge 2->4 to 7 failed.
fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [13 __a+0 S8 A64])
        (reg:DI 5 di [ __a ])) "/usr/include/c++/7/bits/stl_algobase.h":195 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [13 __b+0 S8 A64])
        (reg:DI 4 si [ __b ])) "/usr/include/c++/7/bits/stl_algobase.h":195 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [13 __b+0 S8 A64])) "/usr/include/c++/7/bits/stl_algobase.h":200 -1
     (nil))
(insn 8 7 9 2 (set (reg:SF 87 [ _1 ])
        (mem:SF (reg/f:DI 91) [5 *__b_5(D)+0 S4 A32])) "/usr/include/c++/7/bits/stl_algobase.h":200 -1
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [13 __a+0 S8 A64])) "/usr/include/c++/7/bits/stl_algobase.h":200 -1
     (nil))
(insn 10 9 11 2 (set (reg:SF 88 [ _2 ])
        (mem:SF (reg/f:DI 92) [5 *__a_6(D)+0 S4 A32])) "/usr/include/c++/7/bits/stl_algobase.h":200 -1
     (nil))
(insn 11 10 12 2 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 88 [ _2 ])
            (reg:SF 87 [ _1 ]))) "/usr/include/c++/7/bits/stl_algobase.h":200 -1
     (nil))
(jump_insn 12 11 32 2 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 34)
            (pc))) "/usr/include/c++/7/bits/stl_algobase.h":200 617 {*jcc_1}
     (nil)
 -> 34)
;;  succ:       6
;;              4 (FALLTHRU)

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
(note 32 12 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 13 32 14 4 (set (pc)
        (label_ref 20)) "/usr/include/c++/7/bits/stl_algobase.h":200 -1
     (nil)
 -> 20)
;;  succ:       7

(barrier 14 13 34)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
(code_label 34 14 16 6 62 (nil) [1 uses])
(note 16 34 17 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 6 (set (reg/f:DI 89 [ _3 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [13 __b+0 S8 A64])) "/usr/include/c++/7/bits/stl_algobase.h":201 -1
     (nil))
(jump_insn 18 17 19 6 (set (pc)
        (label_ref 23)) "/usr/include/c++/7/bits/stl_algobase.h":201 -1
     (nil)
 -> 23)
;;  succ:       8

(barrier 19 18 20)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
(code_label 20 19 21 7 59 (nil) [1 uses])
(note 21 20 22 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 7 (set (reg/f:DI 89 [ _3 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [13 __a+0 S8 A64])) "/usr/include/c++/7/bits/stl_algobase.h":202 -1
     (nil))
;;  succ:       8 (FALLTHRU)

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
;;              7 (FALLTHRU)
(code_label 23 22 24 8 61 (nil) [1 uses])
(note 24 23 25 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 29 8 (set (reg/f:DI 90 [ <retval> ])
        (reg/f:DI 89 [ _3 ])) -1
     (nil))
(insn 29 25 30 8 (set (reg/i:DI 0 ax)
        (reg/f:DI 90 [ <retval> ])) "/usr/include/c++/7/bits/stl_algobase.h":203 -1
     (nil))
(insn 30 29 0 8 (use (reg/i:DI 0 ax)) "/usr/include/c++/7/bits/stl_algobase.h":203 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function sf::Vector2<T>::Vector2() [with T = float] (_ZN2sf7Vector2IfEC2Ev, funcdef_no=3759, decl_uid=58345, cgraph_uid=1199, symbol_order=1204)

sf::Vector2<T>::Vector2() [with T = float] (struct Vector2 * const this)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  this_2(D)->x = 0.0;
  this_2(D)->y = 0.0;
  return;
;;    succ:       EXIT

}



Partition map 

Partition 2 (this_2(D) - 2 )


Partition map 

Partition 0 (this_2(D) - 2 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (this_2(D) - 2 )

After Coalescing:

Partition map 

Partition 0 (this_2(D) - 2 )

sf::Vector2<T>::Vector2() [with T = float] (struct Vector2 * const this)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  this_2(D)->x = 0.0;
  this_2(D)->y = 0.0;
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; MEM[(struct  &)this_2(D)] ={v} {CLOBBER};

(nil)

;; this_2(D)->x = 0.0;

(insn 6 5 7 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [25 this+0 S8 A64])) "/usr/include/SFML/System/Vector2.inl":30 -1
     (nil))

(insn 7 6 8 (set (reg:SF 88)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [5  S4 A32])) "/usr/include/SFML/System/Vector2.inl":30 -1
     (nil))

(insn 8 7 0 (set (mem:SF (reg/f:DI 87) [5 this_2(D)->x+0 S4 A32])
        (reg:SF 88)) "/usr/include/SFML/System/Vector2.inl":30 -1
     (nil))

;; this_2(D)->y = 0.0;

(insn 9 8 10 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [25 this+0 S8 A64])) "/usr/include/SFML/System/Vector2.inl":30 -1
     (nil))

(insn 10 9 11 (set (reg:SF 90)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [5  S4 A32])) "/usr/include/SFML/System/Vector2.inl":30 -1
     (nil))

(insn 11 10 0 (set (mem:SF (plus:DI (reg/f:DI 89)
                (const_int 4 [0x4])) [5 this_2(D)->y+0 S4 A32])
        (reg:SF 90)) "/usr/include/SFML/System/Vector2.inl":30 -1
     (nil))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [25 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "/usr/include/SFML/System/Vector2.inl":28 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [25 this+0 S8 A64])) "/usr/include/SFML/System/Vector2.inl":30 -1
     (nil))
(insn 7 6 8 2 (set (reg:SF 88)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [5  S4 A32])) "/usr/include/SFML/System/Vector2.inl":30 -1
     (nil))
(insn 8 7 9 2 (set (mem:SF (reg/f:DI 87) [5 this_2(D)->x+0 S4 A32])
        (reg:SF 88)) "/usr/include/SFML/System/Vector2.inl":30 -1
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [25 this+0 S8 A64])) "/usr/include/SFML/System/Vector2.inl":30 -1
     (nil))
(insn 10 9 11 2 (set (reg:SF 90)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [5  S4 A32])) "/usr/include/SFML/System/Vector2.inl":30 -1
     (nil))
(insn 11 10 14 2 (set (mem:SF (plus:DI (reg/f:DI 89)
                (const_int 4 [0x4])) [5 this_2(D)->y+0 S4 A32])
        (reg:SF 90)) "/usr/include/SFML/System/Vector2.inl":30 -1
     (nil))
(insn 14 11 0 2 (const_int 0 [0]) "/usr/include/SFML/System/Vector2.inl":33 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function sf::Vector2<T> sf::operator/(const sf::Vector2<T>&, T) [with T = float] (_ZN2sfdvIfEENS_7Vector2IT_EERKS3_S2_, funcdef_no=3761, decl_uid=81150, cgraph_uid=1201, symbol_order=1206)

sf::Vector2<T> sf::operator/(const sf::Vector2<T>&, T) [with T = float] (const struct Vector2 & left, float right)
{
  struct Vector2 D.83061;
  struct Vector2 D.84876;
  float _1;
  float _2;
  float _3;
  float _4;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = left_6(D)->y;
  _2 = _1 / right_7(D);
  _3 = left_6(D)->x;
  _4 = _3 / right_7(D);
  sf::Vector2<float>::Vector2 (&D.83061, _4, _2);
  D.84876 = D.83061;
  D.83061 ={v} {CLOBBER};
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L1> [0.00%]:
  return D.84876;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 6 (left_6(D) - 6 )
Partition 7 (right_7(D) - 7 )


Partition map 

Partition 0 (left_6(D) - 6 )
Partition 1 (right_7(D) - 7 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (left_6(D) - 6 )
Partition 1 (right_7(D) - 7 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (left_6(D) - 6 )
Partition 5 (right_7(D) - 7 )

sf::Vector2<T> sf::operator/(const sf::Vector2<T>&, T) [with T = float] (const struct Vector2 & left, float right)
{
  struct Vector2 D.83061;
  struct Vector2 D.84876;
  float _1;
  float _2;
  float _3;
  float _4;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = left_6(D)->y;
  _2 = _1 / right_7(D);
  _3 = left_6(D)->x;
  _4 = _3 / right_7(D);
  sf::Vector2<float>::Vector2 (&D.83061, _4, _2);
  D.84876 = D.83061;
  D.83061 ={v} {CLOBBER};
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L1> [0.00%]:
  return D.84876;
;;    succ:       EXIT

}


Partition 0: size 8 align 4
	D.83061

;; Generating RTL for gimple basic block 2

;; _1 = left_6(D)->y;

(insn 8 7 9 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [15 left+0 S8 A64])) "/usr/include/SFML/System/Vector2.inl":133 -1
     (nil))

(insn 9 8 0 (set (reg:SF 87 [ _1 ])
        (mem:SF (plus:DI (reg/f:DI 93)
                (const_int 4 [0x4])) [5 left_6(D)->y+0 S4 A32])) "/usr/include/SFML/System/Vector2.inl":133 -1
     (nil))

;; _2 = _1 / right_7(D);

(insn 10 9 0 (set (reg:SF 88 [ _2 ])
        (div:SF (reg:SF 87 [ _1 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [5 right+0 S4 A32]))) "/usr/include/SFML/System/Vector2.inl":133 -1
     (nil))

;; _3 = left_6(D)->x;

(insn 11 10 12 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [15 left+0 S8 A64])) "/usr/include/SFML/System/Vector2.inl":133 -1
     (nil))

(insn 12 11 0 (set (reg:SF 89 [ _3 ])
        (mem:SF (reg/f:DI 94) [5 left_6(D)->x+0 S4 A32])) "/usr/include/SFML/System/Vector2.inl":133 -1
     (nil))

;; _4 = _3 / right_7(D);

(insn 13 12 0 (set (reg:SF 90 [ _4 ])
        (div:SF (reg:SF 89 [ _3 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [5 right+0 S4 A32]))) "/usr/include/SFML/System/Vector2.inl":133 -1
     (nil))

;; sf::Vector2<float>::Vector2 (&D.83061, _4, _2);

(insn 14 13 15 (parallel [
            (set (reg:DI 95)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/SFML/System/Vector2.inl":133 -1
     (nil))

(insn 15 14 16 (set (reg:SF 22 xmm1)
        (reg:SF 88 [ _2 ])) "/usr/include/SFML/System/Vector2.inl":133 -1
     (nil))

(insn 16 15 17 (set (reg:SF 21 xmm0)
        (reg:SF 90 [ _4 ])) "/usr/include/SFML/System/Vector2.inl":133 -1
     (nil))

(insn 17 16 18 (set (reg:DI 5 di)
        (reg:DI 95)) "/usr/include/SFML/System/Vector2.inl":133 -1
     (nil))

(call_insn 18 17 0 (call (mem:QI (symbol_ref/i:DI ("_ZN2sf7Vector2IfEC1Eff") [flags 0x3]  <function_decl 0x7f71b6580300 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) "/usr/include/SFML/System/Vector2.inl":133 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SF (use (reg:SF 21 xmm0))
            (expr_list:SF (use (reg:SF 22 xmm1))
                (nil)))))

;; D.84876 = D.83061;

(insn 19 18 0 (set (reg:DI 91 [ D.84876 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [12 D.83061+0 S8 A64])) "/usr/include/SFML/System/Vector2.inl":133 -1
     (nil))

;; D.83061 ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 3

;; <L1> [0.00%]:

(code_label 20 19 21 66 (nil) [0 uses])

(note 21 20 0 NOTE_INSN_BASIC_BLOCK)

;; return D.84876;

(insn 22 21 23 (set (reg:DI 92 [ <retval> ])
        (reg:DI 91 [ D.84876 ])) "/usr/include/SFML/System/Vector2.inl":133 -1
     (nil))

(jump_insn 23 22 24 (set (pc)
        (label_ref 0)) "/usr/include/SFML/System/Vector2.inl":133 -1
     (nil))

(barrier 24 23 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 23.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [15 left+0 S8 A64])
        (reg:DI 5 di [ left ])) "/usr/include/SFML/System/Vector2.inl":131 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [5 right+0 S4 A32])
        (reg:SF 21 xmm0 [ right ])) "/usr/include/SFML/System/Vector2.inl":131 -1
     (nil))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [14 D.84920+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/SFML/System/Vector2.inl":131 -1
     (nil))
(insn 8 5 9 2 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [15 left+0 S8 A64])) "/usr/include/SFML/System/Vector2.inl":133 -1
     (nil))
(insn 9 8 10 2 (set (reg:SF 87 [ _1 ])
        (mem:SF (plus:DI (reg/f:DI 93)
                (const_int 4 [0x4])) [5 left_6(D)->y+0 S4 A32])) "/usr/include/SFML/System/Vector2.inl":133 -1
     (nil))
(insn 10 9 11 2 (set (reg:SF 88 [ _2 ])
        (div:SF (reg:SF 87 [ _1 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [5 right+0 S4 A32]))) "/usr/include/SFML/System/Vector2.inl":133 -1
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [15 left+0 S8 A64])) "/usr/include/SFML/System/Vector2.inl":133 -1
     (nil))
(insn 12 11 13 2 (set (reg:SF 89 [ _3 ])
        (mem:SF (reg/f:DI 94) [5 left_6(D)->x+0 S4 A32])) "/usr/include/SFML/System/Vector2.inl":133 -1
     (nil))
(insn 13 12 14 2 (set (reg:SF 90 [ _4 ])
        (div:SF (reg:SF 89 [ _3 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [5 right+0 S4 A32]))) "/usr/include/SFML/System/Vector2.inl":133 -1
     (nil))
(insn 14 13 15 2 (parallel [
            (set (reg:DI 95)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/SFML/System/Vector2.inl":133 -1
     (nil))
(insn 15 14 16 2 (set (reg:SF 22 xmm1)
        (reg:SF 88 [ _2 ])) "/usr/include/SFML/System/Vector2.inl":133 -1
     (nil))
(insn 16 15 17 2 (set (reg:SF 21 xmm0)
        (reg:SF 90 [ _4 ])) "/usr/include/SFML/System/Vector2.inl":133 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (reg:DI 95)) "/usr/include/SFML/System/Vector2.inl":133 -1
     (nil))
(call_insn 18 17 19 2 (call (mem:QI (symbol_ref/i:DI ("_ZN2sf7Vector2IfEC1Eff") [flags 0x3]  <function_decl 0x7f71b6580300 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) "/usr/include/SFML/System/Vector2.inl":133 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SF (use (reg:SF 21 xmm0))
            (expr_list:SF (use (reg:SF 22 xmm1))
                (nil)))))
(insn 19 18 22 2 (set (reg:DI 91 [ D.84876 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [12 D.83061+0 S8 A64])) "/usr/include/SFML/System/Vector2.inl":133 -1
     (nil))
(insn 22 19 26 2 (set (reg:DI 92 [ <retval> ])
        (reg:DI 91 [ D.84876 ])) "/usr/include/SFML/System/Vector2.inl":133 -1
     (nil))
(insn 26 22 27 2 (set (reg/i:DI 21 xmm0)
        (reg:DI 92 [ <retval> ])) "/usr/include/SFML/System/Vector2.inl":134 -1
     (nil))
(insn 27 26 28 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [14 D.84920+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) "/usr/include/SFML/System/Vector2.inl":134 -1
     (nil))
(jump_insn 28 27 34 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "/usr/include/SFML/System/Vector2.inl":134 -1
     (nil)
 -> 31)
;;  succ:       7
;;              6 (FALLTHRU)

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
(note 34 28 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn 29 34 30 6 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f71b51e7f00 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "/usr/include/SFML/System/Vector2.inl":134 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      

(barrier 30 29 31)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
(code_label 31 30 35 7 67 (nil) [1 uses])
(note 35 31 32 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 32 35 0 7 (use (reg/i:DI 21 xmm0)) "/usr/include/SFML/System/Vector2.inl":134 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void __static_initialization_and_destruction_0(int, int) (_Z41__static_initialization_and_destruction_0ii, funcdef_no=4008, decl_uid=84824, cgraph_uid=1448, symbol_order=1543)

void __static_initialization_and_destruction_0(int, int) (int __initialize_p, int __priority)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (__initialize_p_2(D) == 1)
    goto <bb 3>; [0.00%]
  else
    goto <bb 5>; [0.00%]
;;    succ:       3
;;                5

;;   basic block 3, loop depth 0
;;    pred:       2
  if (__priority_4(D) == 65535)
    goto <bb 4>; [0.00%]
  else
    goto <bb 5>; [0.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  std::ios_base::Init::Init (&__ioinit);
  __cxa_atexit (__comp_dtor , &__ioinit, &__dso_handle);
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       2
;;                4
;;                3
  return;
;;    succ:       EXIT

}



Partition map 

Partition 2 (__initialize_p_2(D) - 2 )
Partition 4 (__priority_4(D) - 4 )


Partition map 

Partition 0 (__initialize_p_2(D) - 2 )
Partition 1 (__priority_4(D) - 4 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (__initialize_p_2(D) - 2 )
Partition 1 (__priority_4(D) - 4 )

After Coalescing:

Partition map 

Partition 0 (__initialize_p_2(D) - 2 )
Partition 1 (__priority_4(D) - 4 )

void __static_initialization_and_destruction_0(int, int) (int __initialize_p, int __priority)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (__initialize_p_2(D) == 1)
    goto <bb 3>; [0.00%]
  else
    goto <bb 5>; [0.00%]
;;    succ:       3
;;                5

;;   basic block 3, loop depth 0
;;    pred:       2
  if (__priority_4(D) == 65535)
    goto <bb 4>; [0.00%]
  else
    goto <bb 5>; [0.00%]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  std::ios_base::Init::Init (&__ioinit);
  __cxa_atexit (__comp_dtor , &__ioinit, &__dso_handle);
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       2
;;                4
;;                3
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; if (__initialize_p_2(D) == 1)

(insn 7 6 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [24 __initialize_p+0 S4 A32])
            (const_int 1 [0x1]))) "classes/Collider.cpp":128 -1
     (nil))

(jump_insn 8 7 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "classes/Collider.cpp":128 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; if (__priority_4(D) == 65535)

(insn 10 9 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [24 __priority+0 S4 A32])
            (const_int 65535 [0xffff]))) "classes/Collider.cpp":128 -1
     (nil))

(jump_insn 11 10 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "classes/Collider.cpp":128 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; std::ios_base::Init::Init (&__ioinit);

(insn 13 12 14 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f71b56cc900 __ioinit>)) "/usr/include/c++/7/iostream":74 -1
     (nil))

(call_insn 14 13 0 (call (mem:QI (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0x7f71b76a8300 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) "/usr/include/c++/7/iostream":74 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; __cxa_atexit (__comp_dtor , &__ioinit, &__dso_handle);

(insn 15 14 16 (set (reg:DI 1 dx)
        (symbol_ref:DI ("__dso_handle") [flags 0x42]  <var_decl 0x7f71b542df30 __dso_handle>)) "/usr/include/c++/7/iostream":74 -1
     (nil))

(insn 16 15 17 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f71b56cc900 __ioinit>)) "/usr/include/c++/7/iostream":74 -1
     (nil))

(insn 17 16 18 (set (reg:DI 87)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x7f71b76a8500 __comp_dtor >)
                    ] UNSPEC_GOTPCREL)) [29  S8 A8])) "/usr/include/c++/7/iostream":74 -1
     (nil))

(insn 18 17 19 (set (reg:DI 5 di)
        (reg:DI 87)) "/usr/include/c++/7/iostream":74 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x7f71b76a8500 __comp_dtor >)
        (nil)))

(call_insn 19 18 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x7f71b542cc00 __cxa_atexit>) [0 __cxa_atexit S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/iostream":74 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; Generating RTL for gimple basic block 5

;; 

(code_label 20 19 21 69 (nil) [0 uses])

(note 21 20 0 NOTE_INSN_BASIC_BLOCK)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 2->6 redirected to 7
Edge 4->6 redirected to 7
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [24 __initialize_p+0 S4 A32])
        (reg:SI 5 di [ __initialize_p ])) "classes/Collider.cpp":128 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [24 __priority+0 S4 A32])
        (reg:SI 4 si [ __priority ])) "classes/Collider.cpp":128 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [24 __initialize_p+0 S4 A32])
            (const_int 1 [0x1]))) "classes/Collider.cpp":128 -1
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 22)
            (pc))) "classes/Collider.cpp":128 617 {*jcc_1}
     (nil)
 -> 22)
;;  succ:       4 (FALLTHRU)
;;              7

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
(note 9 8 10 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [24 __priority+0 S4 A32])
            (const_int 65535 [0xffff]))) "classes/Collider.cpp":128 -1
     (nil))
(jump_insn 11 10 12 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 22)
            (pc))) "classes/Collider.cpp":128 617 {*jcc_1}
     (nil)
 -> 22)
;;  succ:       5 (FALLTHRU)
;;              7

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 12 11 13 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 5 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f71b56cc900 __ioinit>)) "/usr/include/c++/7/iostream":74 -1
     (nil))
(call_insn 14 13 15 5 (call (mem:QI (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0x7f71b76a8300 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) "/usr/include/c++/7/iostream":74 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 5 (set (reg:DI 1 dx)
        (symbol_ref:DI ("__dso_handle") [flags 0x42]  <var_decl 0x7f71b542df30 __dso_handle>)) "/usr/include/c++/7/iostream":74 -1
     (nil))
(insn 16 15 17 5 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7f71b56cc900 __ioinit>)) "/usr/include/c++/7/iostream":74 -1
     (nil))
(insn 17 16 18 5 (set (reg:DI 87)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x7f71b76a8500 __comp_dtor >)
                    ] UNSPEC_GOTPCREL)) [29  S8 A8])) "/usr/include/c++/7/iostream":74 -1
     (nil))
(insn 18 17 19 5 (set (reg:DI 5 di)
        (reg:DI 87)) "/usr/include/c++/7/iostream":74 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x7f71b76a8500 __comp_dtor >)
        (nil)))
(call_insn 19 18 22 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x7f71b542cc00 __cxa_atexit>) [0 __cxa_atexit S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/iostream":74 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       7 (FALLTHRU)

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
;;              2
;;              4
(code_label 22 19 23 7 68 (nil) [2 uses])
(note 23 22 0 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function (static initializers for classes/Collider.cpp) (_GLOBAL__sub_I__ZN12CollisionBoxC2Ev, funcdef_no=4009, decl_uid=84831, cgraph_uid=1449, symbol_order=2200)

(static initializers for classes/Collider.cpp) ()
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  __static_initialization_and_destruction_0 (1, 65535);
  return;
;;    succ:       EXIT

}



Partition map 


After Coalescing:

Partition map 


(static initializers for classes/Collider.cpp) ()
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  __static_initialization_and_destruction_0 (1, 65535);
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; __static_initialization_and_destruction_0 (1, 65535);

(insn 5 4 6 (set (reg:SI 4 si)
        (const_int 65535 [0xffff])) "classes/Collider.cpp":128 -1
     (nil))

(insn 6 5 7 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "classes/Collider.cpp":128 -1
     (nil))

(call_insn 7 6 0 (call (mem:QI (symbol_ref:DI ("_Z41__static_initialization_and_destruction_0ii") [flags 0x3]  <function_decl 0x7f71b542ca00 __static_initialization_and_destruction_0>) [0 __static_initialization_and_destruction_0 S1 A8])
        (const_int 0 [0])) "classes/Collider.cpp":128 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 4 si)
        (const_int 65535 [0xffff])) "classes/Collider.cpp":128 -1
     (nil))
(insn 6 5 7 2 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "classes/Collider.cpp":128 -1
     (nil))
(call_insn 7 6 0 2 (call (mem:QI (symbol_ref:DI ("_Z41__static_initialization_and_destruction_0ii") [flags 0x3]  <function_decl 0x7f71b542ca00 __static_initialization_and_destruction_0>) [0 __static_initialization_and_destruction_0 S1 A8])
        (const_int 0 [0])) "classes/Collider.cpp":128 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)

