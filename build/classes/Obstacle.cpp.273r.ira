
;; Function void* operator new(std::size_t, void*) (_ZnwmPv, funcdef_no=38, decl_uid=3478, cgraph_uid=26, symbol_order=26)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 15(l0): point = 0
   Insn 14(l0): point = 2
   Insn 10(l0): point = 4
   Insn 7(l0): point = 6
   Insn 3(l0): point = 8
   Insn 2(l0): point = 10
 a0(r88): [3..4]
 a1(r87): [5..6]
Compressing live ranges: from 13 to 4 - 30%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     0    0:r88  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void* operator new(std::size_t, void*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 6 [bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,5u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 38{22d,16u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 87 88
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [4 D.3476+0 S8 A64])
        (reg:DI 5 di [ D.3476 ])) "/usr/include/c++/7/new":169 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ D.3476 ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [5 __p+0 S8 A64])
        (reg:DI 4 si [ __p ])) "/usr/include/c++/7/new":169 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __p ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 10 2 (set (reg/f:DI 87 [ _2 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [5 __p+0 S8 A64])) "/usr/include/c++/7/new":169 81 {*movdi_internal}
     (nil))
(insn 10 7 14 2 (set (reg/f:DI 88 [ <retval> ])
        (reg/f:DI 87 [ _2 ])) "/usr/include/c++/7/new":169 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _2 ])
        (nil)))
(insn 14 10 15 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 88 [ <retval> ])) "/usr/include/c++/7/new":169 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ <retval> ])
        (nil)))
(insn 15 14 0 2 (use (reg/i:DI 0 ax)) "/usr/include/c++/7/new":169 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function sf::Drawable::~Drawable() (_ZN2sf8DrawableD2Ev, funcdef_no=2892, decl_uid=58227, cgraph_uid=726, symbol_order=730)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 11(l0): point = 0
   Insn 8(l0): point = 2
   Insn 7(l0): point = 4
   Insn 6(l0): point = 6
   Insn 2(l0): point = 8
 a0(r88): [3..4]
 a1(r87): [3..6]
Compressing live ranges: from 11 to 2 - 18%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [0..1]
  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     1    0:r88  l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


sf::Drawable::~Drawable()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5 [di] 6 [bp]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 33{21d,12u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87 88
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "/usr/include/SFML/Graphics/Drawable.hpp":52 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 87 [ _1 ])
        (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVN2sf8DrawableE") [flags 0x2]  <var_decl 0x7f7f8d90f480 _ZTVN2sf8DrawableE>)
                (const_int 16 [0x10])))) "/usr/include/SFML/Graphics/Drawable.hpp":52 81 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 this+0 S8 A64])) "/usr/include/SFML/Graphics/Drawable.hpp":52 81 {*movdi_internal}
     (nil))
(insn 8 7 11 2 (set (mem/f:DI (reg/f:DI 88) [2 this_3(D)->_vptr.Drawable+0 S8 A64])
        (reg/f:DI 87 [ _1 ])) "/usr/include/SFML/Graphics/Drawable.hpp":52 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88)
        (expr_list:REG_DEAD (reg/f:DI 87 [ _1 ])
            (nil))))
(insn 11 8 0 2 (const_int 0 [0]) "/usr/include/SFML/Graphics/Drawable.hpp":52 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function virtual sf::Drawable::~Drawable() (_ZN2sf8DrawableD0Ev, funcdef_no=2894, decl_uid=58221, cgraph_uid=728, symbol_order=732)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 12(l0): point = 0
   Insn 11(l0): point = 2
   Insn 10(l0): point = 4
   Insn 9(l0): point = 6
   Insn 8(l0): point = 8
   Insn 7(l0): point = 10
   Insn 6(l0): point = 12
   Insn 2(l0): point = 14
 a0(r88): [3..6]
 a1(r87): [11..12]
Compressing live ranges: from 17 to 4 - 23%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     0    0:r88  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


virtual sf::Drawable::~Drawable()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={4d,1u} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,5u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 186{168d,18u,0e} in 8{6 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "/usr/include/SFML/Graphics/Drawable.hpp":52 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 this+0 S8 A64])) "/usr/include/SFML/Graphics/Drawable.hpp":52 81 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 87)) "/usr/include/SFML/Graphics/Drawable.hpp":52 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(call_insn 8 7 9 2 (call (mem:QI (symbol_ref/i:DI ("_ZN2sf8DrawableD1Ev") [flags 0x3]  <function_decl 0x7f7f8d925e00 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) "/usr/include/SFML/Graphics/Drawable.hpp":52 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 this+0 S8 A64])) "/usr/include/SFML/Graphics/Drawable.hpp":52 81 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (const_int 8 [0x8])) "/usr/include/SFML/Graphics/Drawable.hpp":52 81 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg:DI 88)) "/usr/include/SFML/Graphics/Drawable.hpp":52 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(call_insn 12 11 0 2 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f7f904f2100 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/SFML/Graphics/Drawable.hpp":52 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function constexpr sf::Drawable& sf::Drawable::operator=(const sf::Drawable&) (_ZN2sf8DrawableaSERKS0_, funcdef_no=3241, decl_uid=76933, cgraph_uid=747, symbol_order=751)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 15(l0): point = 0
   Insn 14(l0): point = 2
   Insn 10(l0): point = 4
   Insn 7(l0): point = 6
   Insn 3(l0): point = 8
   Insn 2(l0): point = 10
 a0(r88): [3..4]
 a1(r87): [5..6]
Compressing live ranges: from 13 to 4 - 30%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     0    0:r88  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


constexpr sf::Drawable& sf::Drawable::operator=(const sf::Drawable&)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 6 [bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,5u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 38{22d,16u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 87 88
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "/usr/include/SFML/Graphics/Drawable.hpp":44 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [12 D.76934+0 S8 A64])
        (reg:DI 4 si [ D.76934 ])) "/usr/include/SFML/Graphics/Drawable.hpp":44 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ D.76934 ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 10 2 (set (reg/f:DI 87 [ _2 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [9 this+0 S8 A64])) "/usr/include/SFML/Graphics/Drawable.hpp":44 81 {*movdi_internal}
     (nil))
(insn 10 7 14 2 (set (reg/f:DI 88 [ <retval> ])
        (reg/f:DI 87 [ _2 ])) "/usr/include/SFML/Graphics/Drawable.hpp":44 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _2 ])
        (nil)))
(insn 14 10 15 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 88 [ <retval> ])) "/usr/include/SFML/Graphics/Drawable.hpp":44 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ <retval> ])
        (nil)))
(insn 15 14 0 2 (use (reg/i:DI 0 ax)) "/usr/include/SFML/Graphics/Drawable.hpp":44 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function constexpr sf::Transformable& sf::Transformable::operator=(const sf::Transformable&) (_ZN2sf13TransformableaSERKS0_, funcdef_no=3242, decl_uid=76948, cgraph_uid=748, symbol_order=752)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred INT_SSE_REGS, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a6 (r116,l0) best INT_SSE_REGS, allocno INT_SSE_REGS
    r115: preferred INT_SSE_REGS, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a8 (r115,l0) best INT_SSE_REGS, allocno INT_SSE_REGS
    r114: preferred INT_SSE_REGS, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a9 (r114,l0) best INT_SSE_REGS, allocno INT_SSE_REGS
    r113: preferred INT_SSE_REGS, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a10 (r113,l0) best INT_SSE_REGS, allocno INT_SSE_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred INT_SSE_REGS, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a15 (r108,l0) best INT_SSE_REGS, allocno INT_SSE_REGS
    r107: preferred INT_SSE_REGS, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a17 (r107,l0) best INT_SSE_REGS, allocno INT_SSE_REGS
    r106: preferred INT_SSE_REGS, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a18 (r106,l0) best INT_SSE_REGS, allocno INT_SSE_REGS
    r105: preferred INT_SSE_REGS, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a19 (r105,l0) best INT_SSE_REGS, allocno INT_SSE_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r91,l0) best AREG, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a24 (r87,l0) best SSE_REGS, allocno SSE_REGS

  a0(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a3(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:8
  a4(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a5(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:44 NO_REX_SSE_REGS:44 SSE_REGS:44 MMX_REGS:64 INT_SSE_REGS:48 ALL_REGS:936 MEM:20
  a6(r116,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 INT_SSE_REGS:33 MEM:16
  a7(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:44 NO_REX_SSE_REGS:44 SSE_REGS:44 MMX_REGS:64 INT_SSE_REGS:48 ALL_REGS:936 MEM:20
  a8(r115,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 INT_SSE_REGS:33 MEM:16
  a9(r114,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 INT_SSE_REGS:33 MEM:16
  a10(r113,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 INT_SSE_REGS:33 MEM:16
  a11(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a12(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:8
  a13(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a14(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:44 NO_REX_SSE_REGS:44 SSE_REGS:44 MMX_REGS:64 INT_SSE_REGS:48 ALL_REGS:936 MEM:20
  a15(r108,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 INT_SSE_REGS:33 MEM:16
  a16(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:44 NO_REX_SSE_REGS:44 SSE_REGS:44 MMX_REGS:64 INT_SSE_REGS:48 ALL_REGS:936 MEM:20
  a17(r107,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 INT_SSE_REGS:33 MEM:16
  a18(r106,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 INT_SSE_REGS:33 MEM:16
  a19(r105,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 INT_SSE_REGS:33 MEM:16
  a20(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a21(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a22(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a23(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a24(r87,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a25(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a26(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a27(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a28(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a29(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a30(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a31(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 59(l0): point = 0
   Insn 58(l0): point = 2
   Insn 54(l0): point = 4
   Insn 51(l0): point = 6
   Insn 50(l0): point = 8
   Insn 49(l0): point = 10
   Insn 48(l0): point = 12
   Insn 47(l0): point = 14
   Insn 46(l0): point = 16
   Insn 45(l0): point = 18
   Insn 44(l0): point = 20
   Insn 43(l0): point = 22
   Insn 42(l0): point = 24
   Insn 41(l0): point = 26
   Insn 40(l0): point = 28
   Insn 39(l0): point = 30
   Insn 38(l0): point = 32
   Insn 37(l0): point = 34
   Insn 36(l0): point = 36
   Insn 35(l0): point = 38
   Insn 34(l0): point = 40
   Insn 33(l0): point = 42
   Insn 32(l0): point = 44
   Insn 31(l0): point = 46
   Insn 30(l0): point = 48
   Insn 29(l0): point = 50
   Insn 28(l0): point = 52
   Insn 27(l0): point = 54
   Insn 26(l0): point = 56
   Insn 25(l0): point = 58
   Insn 24(l0): point = 60
   Insn 23(l0): point = 62
   Insn 22(l0): point = 64
   Insn 21(l0): point = 66
   Insn 20(l0): point = 68
   Insn 19(l0): point = 70
   Insn 18(l0): point = 72
   Insn 17(l0): point = 74
   Insn 16(l0): point = 76
   Insn 15(l0): point = 78
   Insn 14(l0): point = 80
   Insn 13(l0): point = 82
   Insn 12(l0): point = 84
   Insn 11(l0): point = 86
   Insn 10(l0): point = 88
   Insn 9(l0): point = 90
   Insn 8(l0): point = 92
   Insn 7(l0): point = 94
   Insn 3(l0): point = 96
   Insn 2(l0): point = 98
 a0(r91): [3..4]
 a1(r90): [5..6]
 a2(r118): [9..10]
 a3(r89): [9..12]
 a4(r117): [13..14]
 a5(r111): [17..34]
 a6(r116 [0]): [17..18]
 a6(r116 [1]): [17..18]
 a7(r112): [19..32]
 a8(r115 [0]): [21..22]
 a8(r115 [1]): [21..22]
 a9(r114 [0]): [25..26]
 a9(r114 [1]): [25..26]
 a10(r113 [0]): [29..30]
 a10(r113 [1]): [29..30]
 a11(r110): [37..38]
 a12(r88): [37..40]
 a13(r109): [41..42]
 a14(r103): [45..62]
 a15(r108 [0]): [45..46]
 a15(r108 [1]): [45..46]
 a16(r104): [47..60]
 a17(r107 [0]): [49..50]
 a17(r107 [1]): [49..50]
 a18(r106 [0]): [53..54]
 a18(r106 [1]): [53..54]
 a19(r105 [0]): [57..58]
 a19(r105 [1]): [57..58]
 a20(r100): [65..70]
 a21(r102): [65..66]
 a22(r101): [67..68]
 a23(r99): [73..74]
 a24(r87): [73..76]
 a25(r98): [77..78]
 a26(r95): [81..86]
 a27(r97): [81..82]
 a28(r96): [83..84]
 a29(r92): [89..94]
 a30(r94): [89..90]
 a31(r93): [91..92]
Compressing live ranges: from 101 to 44 - 43%
Ranges after the compression:
 a0(r91): [0..1]
 a1(r90): [2..3]
 a2(r118): [4..5]
 a3(r89): [4..5]
 a4(r117): [6..7]
 a5(r111): [8..15]
 a6(r116 [0]): [8..9]
 a6(r116 [1]): [8..9]
 a7(r112): [10..15]
 a8(r115 [0]): [10..11]
 a8(r115 [1]): [10..11]
 a9(r114 [0]): [12..13]
 a9(r114 [1]): [12..13]
 a10(r113 [0]): [14..15]
 a10(r113 [1]): [14..15]
 a11(r110): [16..17]
 a12(r88): [16..17]
 a13(r109): [18..19]
 a14(r103): [20..27]
 a15(r108 [0]): [20..21]
 a15(r108 [1]): [20..21]
 a16(r104): [22..27]
 a17(r107 [0]): [22..23]
 a17(r107 [1]): [22..23]
 a18(r106 [0]): [24..25]
 a18(r106 [1]): [24..25]
 a19(r105 [0]): [26..27]
 a19(r105 [1]): [26..27]
 a20(r100): [28..31]
 a21(r102): [28..29]
 a22(r101): [30..31]
 a23(r99): [32..33]
 a24(r87): [32..33]
 a25(r98): [34..35]
 a26(r95): [36..39]
 a27(r97): [36..37]
 a28(r96): [38..39]
 a29(r92): [40..43]
 a30(r94): [40..41]
 a31(r93): [42..43]
  regions=1, blocks=3, points=44
    allocnos=32 (big 8), copies=0, conflicts=0, ranges=40
Disposition:
   24:r87  l0    21   12:r88  l0     1    3:r89  l0     1    1:r90  l0     0
    0:r91  l0     0   29:r92  l0     0   31:r93  l0     1   30:r94  l0     1
   26:r95  l0     0   28:r96  l0     1   27:r97  l0     1   25:r98  l0     0
   23:r99  l0     0   20:r100 l0     0   22:r101 l0     1   21:r102 l0     1
   14:r103 l0     2   16:r104 l0     4   19:r105 l0     0   18:r106 l0     0
   17:r107 l0     0   15:r108 l0     0   13:r109 l0     0   11:r110 l0     0
    5:r111 l0     2    7:r112 l0     4   10:r113 l0     0    9:r114 l0     0
    8:r115 l0     0    6:r116 l0     0    4:r117 l0     0    2:r118 l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


constexpr sf::Transformable& sf::Transformable::operator=(const sf::Transformable&)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 6 [bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,21u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,4u} r104={1d,4u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,4u} r112={1d,4u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} 
;;    total ref usage 126{52d,74u,0e} in 50{50 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [13 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "/usr/include/SFML/Graphics/Transformable.hpp":41 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [14 D.76949+0 S8 A64])
        (reg:DI 4 si [ D.76949 ])) "/usr/include/SFML/Graphics/Transformable.hpp":41 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ D.76949 ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [13 this+0 S8 A64])) "/usr/include/SFML/Graphics/Transformable.hpp":41 81 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [14 D.76949+0 S8 A64])) "/usr/include/SFML/Graphics/Transformable.hpp":41 81 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 94)
        (mem:DI (plus:DI (reg/f:DI 93)
                (const_int 8 [0x8])) [16 _6(D)->m_origin+0 S8 A64])) "/usr/include/SFML/Graphics/Transformable.hpp":41 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93)
        (nil)))
(insn 10 9 11 2 (set (mem:DI (plus:DI (reg/f:DI 92)
                (const_int 8 [0x8])) [16 this_5(D)->m_origin+0 S8 A64])
        (reg:DI 94)) "/usr/include/SFML/Graphics/Transformable.hpp":41 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94)
        (expr_list:REG_DEAD (reg/f:DI 92)
            (nil))))
(insn 11 10 12 2 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [13 this+0 S8 A64])) "/usr/include/SFML/Graphics/Transformable.hpp":41 81 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [14 D.76949+0 S8 A64])) "/usr/include/SFML/Graphics/Transformable.hpp":41 81 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 97)
        (mem:DI (plus:DI (reg/f:DI 96)
                (const_int 16 [0x10])) [16 _6(D)->m_position+0 S8 A64])) "/usr/include/SFML/Graphics/Transformable.hpp":41 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 96)
        (nil)))
(insn 14 13 15 2 (set (mem:DI (plus:DI (reg/f:DI 95)
                (const_int 16 [0x10])) [16 this_5(D)->m_position+0 S8 A64])
        (reg:DI 97)) "/usr/include/SFML/Graphics/Transformable.hpp":41 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 97)
        (expr_list:REG_DEAD (reg/f:DI 95)
            (nil))))
(insn 15 14 16 2 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [14 D.76949+0 S8 A64])) "/usr/include/SFML/Graphics/Transformable.hpp":41 81 {*movdi_internal}
     (nil))
(insn 16 15 17 2 (set (reg:SF 87 [ _1 ])
        (mem:SF (plus:DI (reg/f:DI 98)
                (const_int 24 [0x18])) [17 _6(D)->m_rotation+0 S4 A64])) "/usr/include/SFML/Graphics/Transformable.hpp":41 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 98)
        (nil)))
(insn 17 16 18 2 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [13 this+0 S8 A64])) "/usr/include/SFML/Graphics/Transformable.hpp":41 81 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (mem:SF (plus:DI (reg/f:DI 99)
                (const_int 24 [0x18])) [17 this_5(D)->m_rotation+0 S4 A64])
        (reg:SF 87 [ _1 ])) "/usr/include/SFML/Graphics/Transformable.hpp":41 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 99)
        (expr_list:REG_DEAD (reg:SF 87 [ _1 ])
            (nil))))
(insn 19 18 20 2 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [13 this+0 S8 A64])) "/usr/include/SFML/Graphics/Transformable.hpp":41 81 {*movdi_internal}
     (nil))
(insn 20 19 21 2 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [14 D.76949+0 S8 A64])) "/usr/include/SFML/Graphics/Transformable.hpp":41 81 {*movdi_internal}
     (nil))
(insn 21 20 22 2 (set (reg:DI 102)
        (mem:DI (plus:DI (reg/f:DI 101)
                (const_int 28 [0x1c])) [16 _6(D)->m_scale+0 S8 A32])) "/usr/include/SFML/Graphics/Transformable.hpp":41 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 101)
        (nil)))
(insn 22 21 23 2 (set (mem:DI (plus:DI (reg/f:DI 100)
                (const_int 28 [0x1c])) [16 this_5(D)->m_scale+0 S8 A32])
        (reg:DI 102)) "/usr/include/SFML/Graphics/Transformable.hpp":41 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 102)
        (expr_list:REG_DEAD (reg/f:DI 100)
            (nil))))
(insn 23 22 24 2 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [13 this+0 S8 A64])) "/usr/include/SFML/Graphics/Transformable.hpp":41 81 {*movdi_internal}
     (nil))
(insn 24 23 25 2 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [14 D.76949+0 S8 A64])) "/usr/include/SFML/Graphics/Transformable.hpp":41 81 {*movdi_internal}
     (nil))
(insn 25 24 26 2 (set (reg:TI 105)
        (mem:TI (plus:DI (reg/f:DI 104)
                (const_int 36 [0x24])) [18 _6(D)->m_transform+0 S16 A32])) "/usr/include/SFML/Graphics/Transformable.hpp":41 80 {*movti_internal}
     (nil))
(insn 26 25 27 2 (set (mem:TI (plus:DI (reg/f:DI 103)
                (const_int 36 [0x24])) [18 this_5(D)->m_transform+0 S16 A32])
        (reg:TI 105)) "/usr/include/SFML/Graphics/Transformable.hpp":41 80 {*movti_internal}
     (expr_list:REG_DEAD (reg:TI 105)
        (nil)))
(insn 27 26 28 2 (set (reg:TI 106)
        (mem:TI (plus:DI (reg/f:DI 104)
                (const_int 52 [0x34])) [18 _6(D)->m_transform+16 S16 A32])) "/usr/include/SFML/Graphics/Transformable.hpp":41 80 {*movti_internal}
     (nil))
(insn 28 27 29 2 (set (mem:TI (plus:DI (reg/f:DI 103)
                (const_int 52 [0x34])) [18 this_5(D)->m_transform+16 S16 A32])
        (reg:TI 106)) "/usr/include/SFML/Graphics/Transformable.hpp":41 80 {*movti_internal}
     (expr_list:REG_DEAD (reg:TI 106)
        (nil)))
(insn 29 28 30 2 (set (reg:TI 107)
        (mem:TI (plus:DI (reg/f:DI 104)
                (const_int 68 [0x44])) [18 _6(D)->m_transform+32 S16 A32])) "/usr/include/SFML/Graphics/Transformable.hpp":41 80 {*movti_internal}
     (nil))
(insn 30 29 31 2 (set (mem:TI (plus:DI (reg/f:DI 103)
                (const_int 68 [0x44])) [18 this_5(D)->m_transform+32 S16 A32])
        (reg:TI 107)) "/usr/include/SFML/Graphics/Transformable.hpp":41 80 {*movti_internal}
     (expr_list:REG_DEAD (reg:TI 107)
        (nil)))
(insn 31 30 32 2 (set (reg:TI 108)
        (mem:TI (plus:DI (reg/f:DI 104)
                (const_int 84 [0x54])) [18 _6(D)->m_transform+48 S16 A32])) "/usr/include/SFML/Graphics/Transformable.hpp":41 80 {*movti_internal}
     (expr_list:REG_DEAD (reg/f:DI 104)
        (nil)))
(insn 32 31 33 2 (set (mem:TI (plus:DI (reg/f:DI 103)
                (const_int 84 [0x54])) [18 this_5(D)->m_transform+48 S16 A32])
        (reg:TI 108)) "/usr/include/SFML/Graphics/Transformable.hpp":41 80 {*movti_internal}
     (expr_list:REG_DEAD (reg:TI 108)
        (expr_list:REG_DEAD (reg/f:DI 103)
            (nil))))
(insn 33 32 34 2 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [14 D.76949+0 S8 A64])) "/usr/include/SFML/Graphics/Transformable.hpp":41 81 {*movdi_internal}
     (nil))
(insn 34 33 35 2 (set (reg:QI 88 [ _2 ])
        (mem:QI (plus:DI (reg/f:DI 109)
                (const_int 100 [0x64])) [19 _6(D)->m_transformNeedUpdate+0 S1 A32])) "/usr/include/SFML/Graphics/Transformable.hpp":41 84 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 109)
        (nil)))
(insn 35 34 36 2 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [13 this+0 S8 A64])) "/usr/include/SFML/Graphics/Transformable.hpp":41 81 {*movdi_internal}
     (nil))
(insn 36 35 37 2 (set (mem:QI (plus:DI (reg/f:DI 110)
                (const_int 100 [0x64])) [19 this_5(D)->m_transformNeedUpdate+0 S1 A32])
        (reg:QI 88 [ _2 ])) "/usr/include/SFML/Graphics/Transformable.hpp":41 84 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 110)
        (expr_list:REG_DEAD (reg:QI 88 [ _2 ])
            (nil))))
(insn 37 36 38 2 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [13 this+0 S8 A64])) "/usr/include/SFML/Graphics/Transformable.hpp":41 81 {*movdi_internal}
     (nil))
(insn 38 37 39 2 (set (reg/f:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [14 D.76949+0 S8 A64])) "/usr/include/SFML/Graphics/Transformable.hpp":41 81 {*movdi_internal}
     (nil))
(insn 39 38 40 2 (set (reg:TI 113)
        (mem:TI (plus:DI (reg/f:DI 112)
                (const_int 104 [0x68])) [18 _6(D)->m_inverseTransform+0 S16 A64])) "/usr/include/SFML/Graphics/Transformable.hpp":41 80 {*movti_internal}
     (nil))
(insn 40 39 41 2 (set (mem:TI (plus:DI (reg/f:DI 111)
                (const_int 104 [0x68])) [18 this_5(D)->m_inverseTransform+0 S16 A64])
        (reg:TI 113)) "/usr/include/SFML/Graphics/Transformable.hpp":41 80 {*movti_internal}
     (expr_list:REG_DEAD (reg:TI 113)
        (nil)))
(insn 41 40 42 2 (set (reg:TI 114)
        (mem:TI (plus:DI (reg/f:DI 112)
                (const_int 120 [0x78])) [18 _6(D)->m_inverseTransform+16 S16 A64])) "/usr/include/SFML/Graphics/Transformable.hpp":41 80 {*movti_internal}
     (nil))
(insn 42 41 43 2 (set (mem:TI (plus:DI (reg/f:DI 111)
                (const_int 120 [0x78])) [18 this_5(D)->m_inverseTransform+16 S16 A64])
        (reg:TI 114)) "/usr/include/SFML/Graphics/Transformable.hpp":41 80 {*movti_internal}
     (expr_list:REG_DEAD (reg:TI 114)
        (nil)))
(insn 43 42 44 2 (set (reg:TI 115)
        (mem:TI (plus:DI (reg/f:DI 112)
                (const_int 136 [0x88])) [18 _6(D)->m_inverseTransform+32 S16 A64])) "/usr/include/SFML/Graphics/Transformable.hpp":41 80 {*movti_internal}
     (nil))
(insn 44 43 45 2 (set (mem:TI (plus:DI (reg/f:DI 111)
                (const_int 136 [0x88])) [18 this_5(D)->m_inverseTransform+32 S16 A64])
        (reg:TI 115)) "/usr/include/SFML/Graphics/Transformable.hpp":41 80 {*movti_internal}
     (expr_list:REG_DEAD (reg:TI 115)
        (nil)))
(insn 45 44 46 2 (set (reg:TI 116)
        (mem:TI (plus:DI (reg/f:DI 112)
                (const_int 152 [0x98])) [18 _6(D)->m_inverseTransform+48 S16 A64])) "/usr/include/SFML/Graphics/Transformable.hpp":41 80 {*movti_internal}
     (expr_list:REG_DEAD (reg/f:DI 112)
        (nil)))
(insn 46 45 47 2 (set (mem:TI (plus:DI (reg/f:DI 111)
                (const_int 152 [0x98])) [18 this_5(D)->m_inverseTransform+48 S16 A64])
        (reg:TI 116)) "/usr/include/SFML/Graphics/Transformable.hpp":41 80 {*movti_internal}
     (expr_list:REG_DEAD (reg:TI 116)
        (expr_list:REG_DEAD (reg/f:DI 111)
            (nil))))
(insn 47 46 48 2 (set (reg/f:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [14 D.76949+0 S8 A64])) "/usr/include/SFML/Graphics/Transformable.hpp":41 81 {*movdi_internal}
     (nil))
(insn 48 47 49 2 (set (reg:QI 89 [ _3 ])
        (mem:QI (plus:DI (reg/f:DI 117)
                (const_int 168 [0xa8])) [19 _6(D)->m_inverseTransformNeedUpdate+0 S1 A64])) "/usr/include/SFML/Graphics/Transformable.hpp":41 84 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 117)
        (nil)))
(insn 49 48 50 2 (set (reg/f:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [13 this+0 S8 A64])) "/usr/include/SFML/Graphics/Transformable.hpp":41 81 {*movdi_internal}
     (nil))
(insn 50 49 51 2 (set (mem:QI (plus:DI (reg/f:DI 118)
                (const_int 168 [0xa8])) [19 this_5(D)->m_inverseTransformNeedUpdate+0 S1 A64])
        (reg:QI 89 [ _3 ])) "/usr/include/SFML/Graphics/Transformable.hpp":41 84 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 118)
        (expr_list:REG_DEAD (reg:QI 89 [ _3 ])
            (nil))))
(insn 51 50 54 2 (set (reg/f:DI 90 [ _15 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [13 this+0 S8 A64])) "/usr/include/SFML/Graphics/Transformable.hpp":41 81 {*movdi_internal}
     (nil))
(insn 54 51 58 2 (set (reg/f:DI 91 [ <retval> ])
        (reg/f:DI 90 [ _15 ])) "/usr/include/SFML/Graphics/Transformable.hpp":41 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ _15 ])
        (nil)))
(insn 58 54 59 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 91 [ <retval> ])) "/usr/include/SFML/Graphics/Transformable.hpp":41 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ <retval> ])
        (nil)))
(insn 59 58 0 2 (use (reg/i:DI 0 ax)) "/usr/include/SFML/Graphics/Transformable.hpp":41 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function sf::VertexArray& sf::VertexArray::operator=(const sf::VertexArray&) (_ZN2sf11VertexArrayaSERKS0_, funcdef_no=3243, decl_uid=76963, cgraph_uid=749, symbol_order=753)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 18.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r93,l0) best AREG, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r89,l0) best SIREG, allocno GENERAL_REGS
    r88: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r88,l0) best SIREG, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a3(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a4(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a5(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a6(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a7(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a8(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a9(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a10(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 31(l0): point = 0
   Insn 30(l0): point = 2
   Insn 26(l0): point = 4
   Insn 23(l0): point = 6
   Insn 22(l0): point = 8
   Insn 21(l0): point = 10
   Insn 20(l0): point = 12
   Insn 19(l0): point = 14
   Insn 18(l0): point = 16
   Insn 17(l0): point = 18
   Insn 16(l0): point = 20
   Insn 15(l0): point = 22
   Insn 14(l0): point = 24
   Insn 13(l0): point = 26
   Insn 12(l0): point = 28
   Insn 11(l0): point = 30
   Insn 10(l0): point = 32
   Insn 9(l0): point = 34
   Insn 8(l0): point = 36
   Insn 7(l0): point = 38
   Insn 3(l0): point = 40
   Insn 2(l0): point = 42
 a0(r93): [3..4]
 a1(r92): [5..6]
 a2(r97): [9..10]
 a3(r91): [9..12]
 a4(r96): [13..14]
 a5(r90): [19..22]
 a6(r89): [21..26]
 a7(r95): [23..24]
 a8(r94): [27..28]
 a9(r87): [33..38]
 a10(r88): [35..36]
Compressing live ranges: from 45 to 16 - 35%
Ranges after the compression:
 a0(r93): [0..1]
 a1(r92): [2..3]
 a2(r97): [4..5]
 a3(r91): [4..5]
 a4(r96): [6..7]
 a5(r90): [8..9]
 a6(r89): [8..11]
 a7(r95): [10..11]
 a8(r94): [12..13]
 a9(r87): [14..15]
 a10(r88): [14..15]
  regions=1, blocks=3, points=16
    allocnos=11 (big 0), copies=0, conflicts=0, ranges=11
Disposition:
    9:r87  l0     0   10:r88  l0     1    6:r89  l0     1    5:r90  l0     0
    3:r91  l0     1    1:r92  l0     0    0:r93  l0     0    8:r94  l0     0
    7:r95  l0     0    4:r96  l0     0    2:r97  l0     0
+++Costs: overall -5, reg -5, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


sf::VertexArray& sf::VertexArray::operator=(const sf::VertexArray&)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={4d,2u} r1={3d} r2={3d} r4={5d,3u} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={4d} r18={2d} r19={2d} r20={1d,11u,2e} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} 
;;    total ref usage 220{181d,37u,2e} in 22{20 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93 94 95 96 97
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [20 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "/usr/include/SFML/Graphics/VertexArray.hpp":45 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [21 D.76964+0 S8 A64])
        (reg:DI 4 si [ D.76964 ])) "/usr/include/SFML/Graphics/VertexArray.hpp":45 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ D.76964 ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 87 [ _1 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [20 this+0 S8 A64])) "/usr/include/SFML/Graphics/VertexArray.hpp":45 81 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 88 [ _2 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [21 D.76964+0 S8 A64])) "/usr/include/SFML/Graphics/VertexArray.hpp":45 81 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (reg/f:DI 88 [ _2 ])) "/usr/include/SFML/Graphics/VertexArray.hpp":45 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ _2 ])
        (nil)))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ _1 ])) "/usr/include/SFML/Graphics/VertexArray.hpp":45 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _1 ])
        (nil)))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN2sf8DrawableaSERKS0_") [flags 0x3]  <function_decl 0x7f7f8cfe7900 operator=>) [0 operator= S1 A8])
            (const_int 0 [0]))) "/usr/include/SFML/Graphics/VertexArray.hpp":45 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 12 11 13 2 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [21 D.76964+0 S8 A64])) "/usr/include/SFML/Graphics/VertexArray.hpp":45 81 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg/f:DI 89 [ _3 ])
                (plus:DI (reg/f:DI 94)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/SFML/Graphics/VertexArray.hpp":45 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 94)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [21 D.76964+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 14 13 15 2 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [20 this+0 S8 A64])) "/usr/include/SFML/Graphics/VertexArray.hpp":45 81 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (parallel [
            (set (reg/f:DI 90 [ _4 ])
                (plus:DI (reg/f:DI 95)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/SFML/Graphics/VertexArray.hpp":45 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 95)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [20 this+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 16 15 17 2 (set (reg:DI 4 si)
        (reg/f:DI 89 [ _3 ])) "/usr/include/SFML/Graphics/VertexArray.hpp":45 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ _3 ])
        (nil)))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (reg/f:DI 90 [ _4 ])) "/usr/include/SFML/Graphics/VertexArray.hpp":45 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ _4 ])
        (nil)))
(call_insn 18 17 19 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIN2sf6VertexESaIS1_EEaSERKS3_") [flags 0x3]  <function_decl 0x7f7f8d9a1000 operator=>) [0 operator= S1 A8])
            (const_int 0 [0]))) "/usr/include/SFML/Graphics/VertexArray.hpp":45 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 19 18 20 2 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [21 D.76964+0 S8 A64])) "/usr/include/SFML/Graphics/VertexArray.hpp":45 81 {*movdi_internal}
     (nil))
(insn 20 19 21 2 (set (reg:SI 91 [ _5 ])
        (mem:SI (plus:DI (reg/f:DI 96)
                (const_int 32 [0x20])) [27 _7(D)->m_primitiveType+0 S4 A64])) "/usr/include/SFML/Graphics/VertexArray.hpp":45 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 96)
        (nil)))
(insn 21 20 22 2 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [20 this+0 S8 A64])) "/usr/include/SFML/Graphics/VertexArray.hpp":45 81 {*movdi_internal}
     (nil))
(insn 22 21 23 2 (set (mem:SI (plus:DI (reg/f:DI 97)
                (const_int 32 [0x20])) [27 this_6(D)->m_primitiveType+0 S4 A64])
        (reg:SI 91 [ _5 ])) "/usr/include/SFML/Graphics/VertexArray.hpp":45 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 97)
        (expr_list:REG_DEAD (reg:SI 91 [ _5 ])
            (nil))))
(insn 23 22 26 2 (set (reg/f:DI 92 [ _12 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [20 this+0 S8 A64])) "/usr/include/SFML/Graphics/VertexArray.hpp":45 81 {*movdi_internal}
     (nil))
(insn 26 23 30 2 (set (reg/f:DI 93 [ <retval> ])
        (reg/f:DI 92 [ _12 ])) "/usr/include/SFML/Graphics/VertexArray.hpp":45 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ _12 ])
        (nil)))
(insn 30 26 31 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 93 [ <retval> ])) "/usr/include/SFML/Graphics/VertexArray.hpp":45 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ <retval> ])
        (nil)))
(insn 31 30 0 2 (use (reg/i:DI 0 ax)) "/usr/include/SFML/Graphics/VertexArray.hpp":45 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function sf::Shape& sf::Shape::operator=(const sf::Shape&) (_ZN2sf5ShapeaSERKS0_, funcdef_no=3240, decl_uid=76975, cgraph_uid=750, symbol_order=754)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 45.
verify found no changes in insn with uid = 52.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r123: preferred INT_SSE_REGS, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a3 (r123,l0) best INT_SSE_REGS, allocno INT_SSE_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred INT_SSE_REGS, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a6 (r120,l0) best INT_SSE_REGS, allocno INT_SSE_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred INT_SSE_REGS, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a26 (r105,l0) best INT_SSE_REGS, allocno INT_SSE_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r98,l0) best AREG, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r96,l0) best DIREG, allocno GENERAL_REGS
    r95: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r95,l0) best SIREG, allocno GENERAL_REGS
    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r94,l0) best DIREG, allocno GENERAL_REGS
    r93: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r93,l0) best SIREG, allocno GENERAL_REGS
    r92: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a17 (r92,l0) best SSE_REGS, allocno SSE_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a32 (r90,l0) best SIREG, allocno GENERAL_REGS
    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a31 (r89,l0) best DIREG, allocno GENERAL_REGS
    r88: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a36 (r88,l0) best SIREG, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a35 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a3(r123,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 INT_SSE_REGS:33 MEM:16
  a4(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a5(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a6(r120,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 INT_SSE_REGS:33 MEM:16
  a7(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a8(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a9(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a10(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a11(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a12(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a13(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a14(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a15(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a16(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a17(r92,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a18(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a19(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a20(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a21(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a22(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a23(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a24(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a25(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a26(r105,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 INT_SSE_REGS:33 MEM:16
  a27(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a28(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a29(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a30(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a31(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a32(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a33(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a34(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a35(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a36(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 69(l0): point = 0
   Insn 68(l0): point = 2
   Insn 64(l0): point = 4
   Insn 61(l0): point = 6
   Insn 60(l0): point = 8
   Insn 59(l0): point = 10
   Insn 58(l0): point = 12
   Insn 57(l0): point = 14
   Insn 56(l0): point = 16
   Insn 55(l0): point = 18
   Insn 54(l0): point = 20
   Insn 53(l0): point = 22
   Insn 52(l0): point = 24
   Insn 51(l0): point = 26
   Insn 50(l0): point = 28
   Insn 49(l0): point = 30
   Insn 48(l0): point = 32
   Insn 47(l0): point = 34
   Insn 46(l0): point = 36
   Insn 45(l0): point = 38
   Insn 44(l0): point = 40
   Insn 43(l0): point = 42
   Insn 42(l0): point = 44
   Insn 41(l0): point = 46
   Insn 40(l0): point = 48
   Insn 39(l0): point = 50
   Insn 38(l0): point = 52
   Insn 37(l0): point = 54
   Insn 36(l0): point = 56
   Insn 35(l0): point = 58
   Insn 34(l0): point = 60
   Insn 33(l0): point = 62
   Insn 32(l0): point = 64
   Insn 31(l0): point = 66
   Insn 30(l0): point = 68
   Insn 29(l0): point = 70
   Insn 28(l0): point = 72
   Insn 27(l0): point = 74
   Insn 26(l0): point = 76
   Insn 25(l0): point = 78
   Insn 24(l0): point = 80
   Insn 23(l0): point = 82
   Insn 22(l0): point = 84
   Insn 21(l0): point = 86
   Insn 20(l0): point = 88
   Insn 19(l0): point = 90
   Insn 18(l0): point = 92
   Insn 17(l0): point = 94
   Insn 16(l0): point = 96
   Insn 15(l0): point = 98
   Insn 14(l0): point = 100
   Insn 13(l0): point = 102
   Insn 12(l0): point = 104
   Insn 11(l0): point = 106
   Insn 10(l0): point = 108
   Insn 9(l0): point = 110
   Insn 8(l0): point = 112
   Insn 7(l0): point = 114
   Insn 3(l0): point = 116
   Insn 2(l0): point = 118
 a0(r98): [3..4]
 a1(r97): [5..6]
 a2(r121): [9..14]
 a3(r123 [0]): [9..10]
 a3(r123 [1]): [9..10]
 a4(r122): [11..12]
 a5(r118): [17..22]
 a6(r120 [0]): [17..18]
 a6(r120 [1]): [17..18]
 a7(r119): [19..20]
 a8(r96): [27..30]
 a9(r95): [29..34]
 a10(r117): [31..32]
 a11(r116): [35..36]
 a12(r94): [41..44]
 a13(r93): [43..48]
 a14(r115): [45..46]
 a15(r114): [49..50]
 a16(r113): [53..54]
 a17(r92): [53..56]
 a18(r112): [57..58]
 a19(r109): [61..66]
 a20(r111): [61..62]
 a21(r110): [63..64]
 a22(r106): [69..74]
 a23(r108): [69..70]
 a24(r107): [71..72]
 a25(r103): [77..82]
 a26(r105 [0]): [77..78]
 a26(r105 [1]): [77..78]
 a27(r104): [79..80]
 a28(r102): [85..86]
 a29(r91): [85..88]
 a30(r101): [89..90]
 a31(r89): [95..102]
 a32(r90): [97..98]
 a33(r100): [99..100]
 a34(r99): [103..104]
 a35(r87): [109..114]
 a36(r88): [111..112]
Compressing live ranges: from 121 to 52 - 42%
Ranges after the compression:
 a0(r98): [0..1]
 a1(r97): [2..3]
 a2(r121): [4..7]
 a3(r123 [0]): [4..5]
 a3(r123 [1]): [4..5]
 a4(r122): [6..7]
 a5(r118): [8..11]
 a6(r120 [0]): [8..9]
 a6(r120 [1]): [8..9]
 a7(r119): [10..11]
 a8(r96): [12..13]
 a9(r95): [12..15]
 a10(r117): [14..15]
 a11(r116): [16..17]
 a12(r94): [18..19]
 a13(r93): [18..21]
 a14(r115): [20..21]
 a15(r114): [22..23]
 a16(r113): [24..25]
 a17(r92): [24..25]
 a18(r112): [26..27]
 a19(r109): [28..31]
 a20(r111): [28..29]
 a21(r110): [30..31]
 a22(r106): [32..35]
 a23(r108): [32..33]
 a24(r107): [34..35]
 a25(r103): [36..39]
 a26(r105 [0]): [36..37]
 a26(r105 [1]): [36..37]
 a27(r104): [38..39]
 a28(r102): [40..41]
 a29(r91): [40..41]
 a30(r101): [42..43]
 a31(r89): [44..47]
 a32(r90): [44..45]
 a33(r100): [46..47]
 a34(r99): [48..49]
 a35(r87): [50..51]
 a36(r88): [50..51]
  regions=1, blocks=3, points=52
    allocnos=37 (big 3), copies=0, conflicts=0, ranges=40
Disposition:
   35:r87  l0     0   36:r88  l0     1   31:r89  l0     0   32:r90  l0     1
   29:r91  l0     1   17:r92  l0    21   13:r93  l0     1   12:r94  l0     0
    9:r95  l0     1    8:r96  l0     0    1:r97  l0     0    0:r98  l0     0
   34:r99  l0     0   33:r100 l0     1   30:r101 l0     0   28:r102 l0     0
   25:r103 l0     2   27:r104 l0     0   26:r105 l0     0   22:r106 l0     0
   24:r107 l0     1   23:r108 l0     1   19:r109 l0     0   21:r110 l0     1
   20:r111 l0     1   18:r112 l0     0   16:r113 l0     0   15:r114 l0     0
   14:r115 l0     0   11:r116 l0     0   10:r117 l0     0    5:r118 l0     2
    7:r119 l0     0    6:r120 l0     0    2:r121 l0     2    4:r122 l0     0
    3:r123 l0     0
+++Costs: overall -9, reg -9, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


sf::Shape& sf::Shape::operator=(const sf::Shape&)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={6d,2u} r1={5d} r2={5d} r4={9d,5u} r5={9d,5u} r6={1d,2u} r7={1d,6u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,1u} r17={10d} r18={4d} r19={4d} r20={1d,27u,6e} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} 
;;    total ref usage 450{359d,85u,6e} in 60{56 regular + 4 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [28 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "/usr/include/SFML/Graphics/Shape.hpp":44 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [29 D.76976+0 S8 A64])
        (reg:DI 4 si [ D.76976 ])) "/usr/include/SFML/Graphics/Shape.hpp":44 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ D.76976 ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 87 [ _1 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [28 this+0 S8 A64])) "/usr/include/SFML/Graphics/Shape.hpp":44 81 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 88 [ _2 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [29 D.76976+0 S8 A64])) "/usr/include/SFML/Graphics/Shape.hpp":44 81 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (reg/f:DI 88 [ _2 ])) "/usr/include/SFML/Graphics/Shape.hpp":44 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ _2 ])
        (nil)))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ _1 ])) "/usr/include/SFML/Graphics/Shape.hpp":44 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _1 ])
        (nil)))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN2sf8DrawableaSERKS0_") [flags 0x3]  <function_decl 0x7f7f8cfe7900 operator=>) [0 operator= S1 A8])
            (const_int 0 [0]))) "/usr/include/SFML/Graphics/Shape.hpp":44 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 12 11 13 2 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [28 this+0 S8 A64])) "/usr/include/SFML/Graphics/Shape.hpp":44 81 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg/f:DI 89 [ _3 ])
                (plus:DI (reg/f:DI 99)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/SFML/Graphics/Shape.hpp":44 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 99)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [28 this+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 14 13 15 2 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [29 D.76976+0 S8 A64])) "/usr/include/SFML/Graphics/Shape.hpp":44 81 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (parallel [
            (set (reg/f:DI 90 [ _4 ])
                (plus:DI (reg/f:DI 100)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/SFML/Graphics/Shape.hpp":44 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 100)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [29 D.76976+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 16 15 17 2 (set (reg:DI 4 si)
        (reg/f:DI 90 [ _4 ])) "/usr/include/SFML/Graphics/Shape.hpp":44 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ _4 ])
        (nil)))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (reg/f:DI 89 [ _3 ])) "/usr/include/SFML/Graphics/Shape.hpp":44 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ _3 ])
        (nil)))
(call_insn 18 17 19 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN2sf13TransformableaSERKS0_") [flags 0x3]  <function_decl 0x7f7f8cfe7e00 operator=>) [0 operator= S1 A8])
            (const_int 0 [0]))) "/usr/include/SFML/Graphics/Shape.hpp":44 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 19 18 20 2 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [29 D.76976+0 S8 A64])) "/usr/include/SFML/Graphics/Shape.hpp":44 81 {*movdi_internal}
     (nil))
(insn 20 19 21 2 (set (reg/f:DI 91 [ _5 ])
        (mem/f:DI (plus:DI (reg/f:DI 101)
                (const_int 184 [0xb8])) [31 _12(D)->m_texture+0 S8 A64])) "/usr/include/SFML/Graphics/Shape.hpp":44 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 101)
        (nil)))
(insn 21 20 22 2 (set (reg/f:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [28 this+0 S8 A64])) "/usr/include/SFML/Graphics/Shape.hpp":44 81 {*movdi_internal}
     (nil))
(insn 22 21 23 2 (set (mem/f:DI (plus:DI (reg/f:DI 102)
                (const_int 184 [0xb8])) [31 this_11(D)->m_texture+0 S8 A64])
        (reg/f:DI 91 [ _5 ])) "/usr/include/SFML/Graphics/Shape.hpp":44 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 102)
        (expr_list:REG_DEAD (reg/f:DI 91 [ _5 ])
            (nil))))
(insn 23 22 24 2 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [28 this+0 S8 A64])) "/usr/include/SFML/Graphics/Shape.hpp":44 81 {*movdi_internal}
     (nil))
(insn 24 23 25 2 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [29 D.76976+0 S8 A64])) "/usr/include/SFML/Graphics/Shape.hpp":44 81 {*movdi_internal}
     (nil))
(insn 25 24 26 2 (set (reg:TI 105)
        (mem:TI (plus:DI (reg/f:DI 104)
                (const_int 192 [0xc0])) [32 _12(D)->m_textureRect+0 S16 A64])) "/usr/include/SFML/Graphics/Shape.hpp":44 80 {*movti_internal}
     (expr_list:REG_DEAD (reg/f:DI 104)
        (nil)))
(insn 26 25 27 2 (set (mem:TI (plus:DI (reg/f:DI 103)
                (const_int 192 [0xc0])) [32 this_11(D)->m_textureRect+0 S16 A64])
        (reg:TI 105)) "/usr/include/SFML/Graphics/Shape.hpp":44 80 {*movti_internal}
     (expr_list:REG_DEAD (reg:TI 105)
        (expr_list:REG_DEAD (reg/f:DI 103)
            (nil))))
(insn 27 26 28 2 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [28 this+0 S8 A64])) "/usr/include/SFML/Graphics/Shape.hpp":44 81 {*movdi_internal}
     (nil))
(insn 28 27 29 2 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [29 D.76976+0 S8 A64])) "/usr/include/SFML/Graphics/Shape.hpp":44 81 {*movdi_internal}
     (nil))
(insn 29 28 30 2 (set (reg:SI 108)
        (mem:SI (plus:DI (reg/f:DI 107)
                (const_int 208 [0xd0])) [34 _12(D)->m_fillColor+0 S4 A64])) "/usr/include/SFML/Graphics/Shape.hpp":44 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 107)
        (nil)))
(insn 30 29 31 2 (set (mem:SI (plus:DI (reg/f:DI 106)
                (const_int 208 [0xd0])) [34 this_11(D)->m_fillColor+0 S4 A64])
        (reg:SI 108)) "/usr/include/SFML/Graphics/Shape.hpp":44 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 108)
        (expr_list:REG_DEAD (reg/f:DI 106)
            (nil))))
(insn 31 30 32 2 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [28 this+0 S8 A64])) "/usr/include/SFML/Graphics/Shape.hpp":44 81 {*movdi_internal}
     (nil))
(insn 32 31 33 2 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [29 D.76976+0 S8 A64])) "/usr/include/SFML/Graphics/Shape.hpp":44 81 {*movdi_internal}
     (nil))
(insn 33 32 34 2 (set (reg:SI 111)
        (mem:SI (plus:DI (reg/f:DI 110)
                (const_int 212 [0xd4])) [34 _12(D)->m_outlineColor+0 S4 A32])) "/usr/include/SFML/Graphics/Shape.hpp":44 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 110)
        (nil)))
(insn 34 33 35 2 (set (mem:SI (plus:DI (reg/f:DI 109)
                (const_int 212 [0xd4])) [34 this_11(D)->m_outlineColor+0 S4 A32])
        (reg:SI 111)) "/usr/include/SFML/Graphics/Shape.hpp":44 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 111)
        (expr_list:REG_DEAD (reg/f:DI 109)
            (nil))))
(insn 35 34 36 2 (set (reg/f:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [29 D.76976+0 S8 A64])) "/usr/include/SFML/Graphics/Shape.hpp":44 81 {*movdi_internal}
     (nil))
(insn 36 35 37 2 (set (reg:SF 92 [ _6 ])
        (mem:SF (plus:DI (reg/f:DI 112)
                (const_int 216 [0xd8])) [17 _12(D)->m_outlineThickness+0 S4 A64])) "/usr/include/SFML/Graphics/Shape.hpp":44 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 112)
        (nil)))
(insn 37 36 38 2 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [28 this+0 S8 A64])) "/usr/include/SFML/Graphics/Shape.hpp":44 81 {*movdi_internal}
     (nil))
(insn 38 37 39 2 (set (mem:SF (plus:DI (reg/f:DI 113)
                (const_int 216 [0xd8])) [17 this_11(D)->m_outlineThickness+0 S4 A64])
        (reg:SF 92 [ _6 ])) "/usr/include/SFML/Graphics/Shape.hpp":44 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 113)
        (expr_list:REG_DEAD (reg:SF 92 [ _6 ])
            (nil))))
(insn 39 38 40 2 (set (reg/f:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [29 D.76976+0 S8 A64])) "/usr/include/SFML/Graphics/Shape.hpp":44 81 {*movdi_internal}
     (nil))
(insn 40 39 41 2 (parallel [
            (set (reg/f:DI 93 [ _7 ])
                (plus:DI (reg/f:DI 114)
                    (const_int 224 [0xe0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/SFML/Graphics/Shape.hpp":44 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 114)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [29 D.76976+0 S8 A64])
                    (const_int 224 [0xe0]))
                (nil)))))
(insn 41 40 42 2 (set (reg/f:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [28 this+0 S8 A64])) "/usr/include/SFML/Graphics/Shape.hpp":44 81 {*movdi_internal}
     (nil))
(insn 42 41 43 2 (parallel [
            (set (reg/f:DI 94 [ _8 ])
                (plus:DI (reg/f:DI 115)
                    (const_int 224 [0xe0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/SFML/Graphics/Shape.hpp":44 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 115)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [28 this+0 S8 A64])
                    (const_int 224 [0xe0]))
                (nil)))))
(insn 43 42 44 2 (set (reg:DI 4 si)
        (reg/f:DI 93 [ _7 ])) "/usr/include/SFML/Graphics/Shape.hpp":44 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ _7 ])
        (nil)))
(insn 44 43 45 2 (set (reg:DI 5 di)
        (reg/f:DI 94 [ _8 ])) "/usr/include/SFML/Graphics/Shape.hpp":44 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ _8 ])
        (nil)))
(call_insn 45 44 46 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN2sf11VertexArrayaSERKS0_") [flags 0x3]  <function_decl 0x7f7f8cfed300 operator=>) [0 operator= S1 A8])
            (const_int 0 [0]))) "/usr/include/SFML/Graphics/Shape.hpp":44 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 46 45 47 2 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [29 D.76976+0 S8 A64])) "/usr/include/SFML/Graphics/Shape.hpp":44 81 {*movdi_internal}
     (nil))
(insn 47 46 48 2 (parallel [
            (set (reg/f:DI 95 [ _9 ])
                (plus:DI (reg/f:DI 116)
                    (const_int 264 [0x108])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/SFML/Graphics/Shape.hpp":44 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 116)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [29 D.76976+0 S8 A64])
                    (const_int 264 [0x108]))
                (nil)))))
(insn 48 47 49 2 (set (reg/f:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [28 this+0 S8 A64])) "/usr/include/SFML/Graphics/Shape.hpp":44 81 {*movdi_internal}
     (nil))
(insn 49 48 50 2 (parallel [
            (set (reg/f:DI 96 [ _10 ])
                (plus:DI (reg/f:DI 117)
                    (const_int 264 [0x108])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/SFML/Graphics/Shape.hpp":44 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 117)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [28 this+0 S8 A64])
                    (const_int 264 [0x108]))
                (nil)))))
(insn 50 49 51 2 (set (reg:DI 4 si)
        (reg/f:DI 95 [ _9 ])) "/usr/include/SFML/Graphics/Shape.hpp":44 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ _9 ])
        (nil)))
(insn 51 50 52 2 (set (reg:DI 5 di)
        (reg/f:DI 96 [ _10 ])) "/usr/include/SFML/Graphics/Shape.hpp":44 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 96 [ _10 ])
        (nil)))
(call_insn 52 51 53 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN2sf11VertexArrayaSERKS0_") [flags 0x3]  <function_decl 0x7f7f8cfed300 operator=>) [0 operator= S1 A8])
            (const_int 0 [0]))) "/usr/include/SFML/Graphics/Shape.hpp":44 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 53 52 54 2 (set (reg/f:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [28 this+0 S8 A64])) "/usr/include/SFML/Graphics/Shape.hpp":44 81 {*movdi_internal}
     (nil))
(insn 54 53 55 2 (set (reg/f:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [29 D.76976+0 S8 A64])) "/usr/include/SFML/Graphics/Shape.hpp":44 81 {*movdi_internal}
     (nil))
(insn 55 54 56 2 (set (reg:TI 120)
        (mem:TI (plus:DI (reg/f:DI 119)
                (const_int 304 [0x130])) [35 _12(D)->m_insideBounds+0 S16 A64])) "/usr/include/SFML/Graphics/Shape.hpp":44 80 {*movti_internal}
     (expr_list:REG_DEAD (reg/f:DI 119)
        (nil)))
(insn 56 55 57 2 (set (mem:TI (plus:DI (reg/f:DI 118)
                (const_int 304 [0x130])) [35 this_11(D)->m_insideBounds+0 S16 A64])
        (reg:TI 120)) "/usr/include/SFML/Graphics/Shape.hpp":44 80 {*movti_internal}
     (expr_list:REG_DEAD (reg:TI 120)
        (expr_list:REG_DEAD (reg/f:DI 118)
            (nil))))
(insn 57 56 58 2 (set (reg/f:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [28 this+0 S8 A64])) "/usr/include/SFML/Graphics/Shape.hpp":44 81 {*movdi_internal}
     (nil))
(insn 58 57 59 2 (set (reg/f:DI 122)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [29 D.76976+0 S8 A64])) "/usr/include/SFML/Graphics/Shape.hpp":44 81 {*movdi_internal}
     (nil))
(insn 59 58 60 2 (set (reg:TI 123)
        (mem:TI (plus:DI (reg/f:DI 122)
                (const_int 320 [0x140])) [35 _12(D)->m_bounds+0 S16 A64])) "/usr/include/SFML/Graphics/Shape.hpp":44 80 {*movti_internal}
     (expr_list:REG_DEAD (reg/f:DI 122)
        (nil)))
(insn 60 59 61 2 (set (mem:TI (plus:DI (reg/f:DI 121)
                (const_int 320 [0x140])) [35 this_11(D)->m_bounds+0 S16 A64])
        (reg:TI 123)) "/usr/include/SFML/Graphics/Shape.hpp":44 80 {*movti_internal}
     (expr_list:REG_DEAD (reg:TI 123)
        (expr_list:REG_DEAD (reg/f:DI 121)
            (nil))))
(insn 61 60 64 2 (set (reg/f:DI 97 [ _25 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [28 this+0 S8 A64])) "/usr/include/SFML/Graphics/Shape.hpp":44 81 {*movdi_internal}
     (nil))
(insn 64 61 68 2 (set (reg/f:DI 98 [ <retval> ])
        (reg/f:DI 97 [ _25 ])) "/usr/include/SFML/Graphics/Shape.hpp":44 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 97 [ _25 ])
        (nil)))
(insn 68 64 69 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 98 [ <retval> ])) "/usr/include/SFML/Graphics/Shape.hpp":44 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 98 [ <retval> ])
        (nil)))
(insn 69 68 0 2 (use (reg/i:DI 0 ax)) "/usr/include/SFML/Graphics/Shape.hpp":44 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function sf::RectangleShape& sf::RectangleShape::operator=(sf::RectangleShape&&) (_ZN2sf14RectangleShapeaSEOS0_, funcdef_no=3239, decl_uid=76981, cgraph_uid=751, symbol_order=755)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 11.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r88,l0) best SIREG, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a3(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a4(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a5(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a6(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 24(l0): point = 0
   Insn 23(l0): point = 2
   Insn 19(l0): point = 4
   Insn 16(l0): point = 6
   Insn 15(l0): point = 8
   Insn 14(l0): point = 10
   Insn 13(l0): point = 12
   Insn 12(l0): point = 14
   Insn 11(l0): point = 16
   Insn 10(l0): point = 18
   Insn 9(l0): point = 20
   Insn 8(l0): point = 22
   Insn 7(l0): point = 24
   Insn 3(l0): point = 26
   Insn 2(l0): point = 28
 a0(r90): [3..4]
 a1(r89): [5..6]
 a2(r91): [9..14]
 a3(r93): [9..10]
 a4(r92): [11..12]
 a5(r87): [19..24]
 a6(r88): [21..22]
Compressing live ranges: from 31 to 10 - 32%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r89): [2..3]
 a2(r91): [4..7]
 a3(r93): [4..5]
 a4(r92): [6..7]
 a5(r87): [8..9]
 a6(r88): [8..9]
  regions=1, blocks=3, points=10
    allocnos=7 (big 0), copies=0, conflicts=0, ranges=7
Disposition:
    5:r87  l0     0    6:r88  l0     1    1:r89  l0     0    0:r90  l0     0
    2:r91  l0     0    4:r92  l0     1    3:r93  l0     1
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


sf::RectangleShape& sf::RectangleShape::operator=(sf::RectangleShape&&)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={3d,2u} r1={2d} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,9u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} 
;;    total ref usage 129{101d,28u,0e} in 15{14 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [36 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "/usr/include/SFML/Graphics/RectangleShape.hpp":41 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [37 D.76982+0 S8 A64])
        (reg:DI 4 si [ D.76982 ])) "/usr/include/SFML/Graphics/RectangleShape.hpp":41 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ D.76982 ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 87 [ _1 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [36 this+0 S8 A64])) "/usr/include/SFML/Graphics/RectangleShape.hpp":41 81 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 88 [ _2 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [37 D.76982+0 S8 A64])) "/usr/include/SFML/Graphics/RectangleShape.hpp":41 81 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (reg/f:DI 88 [ _2 ])) "/usr/include/SFML/Graphics/RectangleShape.hpp":41 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ _2 ])
        (nil)))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ _1 ])) "/usr/include/SFML/Graphics/RectangleShape.hpp":41 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _1 ])
        (nil)))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN2sf5ShapeaSERKS0_") [flags 0x3]  <function_decl 0x7f7f8cfed700 operator=>) [0 operator= S1 A8])
            (const_int 0 [0]))) "/usr/include/SFML/Graphics/RectangleShape.hpp":41 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 12 11 13 2 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [36 this+0 S8 A64])) "/usr/include/SFML/Graphics/RectangleShape.hpp":41 81 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [37 D.76982+0 S8 A64])) "/usr/include/SFML/Graphics/RectangleShape.hpp":41 81 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 93)
        (mem:DI (plus:DI (reg/f:DI 92)
                (const_int 336 [0x150])) [16 _4(D)->m_size+0 S8 A64])) "/usr/include/SFML/Graphics/RectangleShape.hpp":41 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92)
        (nil)))
(insn 15 14 16 2 (set (mem:DI (plus:DI (reg/f:DI 91)
                (const_int 336 [0x150])) [16 this_3(D)->m_size+0 S8 A64])
        (reg:DI 93)) "/usr/include/SFML/Graphics/RectangleShape.hpp":41 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (expr_list:REG_DEAD (reg/f:DI 91)
            (nil))))
(insn 16 15 19 2 (set (reg/f:DI 89 [ _8 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [36 this+0 S8 A64])) "/usr/include/SFML/Graphics/RectangleShape.hpp":41 81 {*movdi_internal}
     (nil))
(insn 19 16 23 2 (set (reg/f:DI 90 [ <retval> ])
        (reg/f:DI 89 [ _8 ])) "/usr/include/SFML/Graphics/RectangleShape.hpp":41 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ _8 ])
        (nil)))
(insn 23 19 24 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 90 [ <retval> ])) "/usr/include/SFML/Graphics/RectangleShape.hpp":41 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ <retval> ])
        (nil)))
(insn 24 23 0 2 (use (reg/i:DI 0 ax)) "/usr/include/SFML/Graphics/RectangleShape.hpp":41 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function Obstacle::Obstacle(sf::Vector2f, sf::Vector2f) (_ZN8ObstacleC2EN2sf7Vector2IfEES2_, funcdef_no=3244, decl_uid=76715, cgraph_uid=753, symbol_order=757)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 13 n_edges 15 count 13 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12
;; 2 succs { 8 3 }
;; 3 succs { 7 4 }
;; 4 succs { 8 5 }
;; 5 succs { 8 6 }
;; 6 succs { 10 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { }
;; 10 succs { 12 11 }
;; 11 succs { }
;; 12 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 23.
verify found no changes in insn with uid = 29.
verify found no changes in insn with uid = 33.
verify found no changes in insn with uid = 40.
verify found no changes in insn with uid = 44.
verify found no changes in insn with uid = 51.
verify found no changes in insn with uid = 59.
verify found no changes in insn with uid = 66.
verify found no changes in insn with uid = 69.
verify found no changes in insn with uid = 74.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r106: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r106,l0) best AREG, allocno GENERAL_REGS
    r105: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r105,l0) best AREG, allocno GENERAL_REGS
    r104: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r104,l0) best DIREG, allocno GENERAL_REGS
    r103: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r103,l0) best SIREG, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r101,l0) best SIREG, allocno GENERAL_REGS
    r100: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r100,l0) best DIREG, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r98,l0) best DIREG, allocno GENERAL_REGS
    r97: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r97,l0) best SIREG, allocno GENERAL_REGS
    r96: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r96,l0) best DIREG, allocno GENERAL_REGS
    r95: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r95,l0) best SIREG, allocno GENERAL_REGS
    r94: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a18 (r94,l0) best SIREG, allocno GENERAL_REGS
    r93: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r93,l0) best DIREG, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r92,l0) best DIREG, allocno GENERAL_REGS
    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r89,l0) best DIREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a17 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:29 INT_SSE_REGS:25 ALL_REGS:408 MEM:5
  a2(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a4(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a5(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a6(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a7(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a8(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a9(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a10(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a11(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a12(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a13(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a14(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a15(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a16(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a17(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a18(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a19(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7

   Insn 74(l0): point = 1
   Insn 73(l0): point = 4
   Insn 72(l0): point = 6
   Insn 69(l0): point = 9
   Insn 68(l0): point = 11
   Insn 67(l0): point = 13
   Insn 66(l0): point = 15
   Insn 65(l0): point = 17
   Insn 64(l0): point = 19
   Insn 81(l0): point = 22
   Insn 94(l0): point = 25
   Insn 60(l0): point = 27
   Insn 59(l0): point = 29
   Insn 58(l0): point = 31
   Insn 57(l0): point = 33
   Insn 87(l0): point = 35
   Insn 92(l0): point = 38
   Insn 51(l0): point = 41
   Insn 50(l0): point = 43
   Insn 49(l0): point = 45
   Insn 48(l0): point = 47
   Insn 47(l0): point = 49
   Insn 46(l0): point = 51
   Insn 44(l0): point = 54
   Insn 43(l0): point = 56
   Insn 42(l0): point = 58
   Insn 41(l0): point = 60
   Insn 40(l0): point = 62
   Insn 39(l0): point = 64
   Insn 38(l0): point = 66
   Insn 37(l0): point = 68
   Insn 36(l0): point = 70
   Insn 35(l0): point = 72
   Insn 34(l0): point = 74
   Insn 33(l0): point = 76
   Insn 32(l0): point = 78
   Insn 31(l0): point = 80
   Insn 29(l0): point = 83
   Insn 28(l0): point = 85
   Insn 27(l0): point = 87
   Insn 26(l0): point = 89
   Insn 25(l0): point = 91
   Insn 23(l0): point = 94
   Insn 22(l0): point = 96
   Insn 21(l0): point = 98
   Insn 20(l0): point = 100
   Insn 19(l0): point = 102
   Insn 18(l0): point = 104
   Insn 17(l0): point = 106
   Insn 16(l0): point = 108
   Insn 15(l0): point = 110
   Insn 14(l0): point = 112
   Insn 13(l0): point = 114
   Insn 12(l0): point = 116
   Insn 11(l0): point = 118
   Insn 10(l0): point = 120
   Insn 9(l0): point = 122
   Insn 6(l0): point = 124
   Insn 4(l0): point = 126
   Insn 3(l0): point = 128
   Insn 2(l0): point = 130
 a0(r92): [12..13]
 a1(r105): [25..27] [14..22]
 a2(r91): [18..19]
 a3(r106): [28..35]
 a4(r104): [32..33]
 a5(r90): [44..49]
 a6(r103): [46..47]
 a7(r102): [50..51]
 a8(r89): [57..72]
 a9(r101): [59..60]
 a10(r100): [65..70]
 a11(r99): [73..74]
 a12(r98): [79..80]
 a13(r88): [86..91]
 a14(r97): [88..89]
 a15(r96): [97..100]
 a16(r95): [99..102]
 a17(r87): [107..122]
 a18(r94): [109..110]
 a19(r93): [115..120]
Compressing live ranges: from 133 to 28 - 21%
Ranges after the compression:
 a0(r92): [0..1]
 a1(r105): [2..5]
 a2(r91): [2..3]
 a3(r106): [6..7]
 a4(r104): [6..7]
 a5(r90): [8..9]
 a6(r103): [8..9]
 a7(r102): [10..11]
 a8(r89): [12..15]
 a9(r101): [12..13]
 a10(r100): [14..15]
 a11(r99): [16..17]
 a12(r98): [18..19]
 a13(r88): [20..21]
 a14(r97): [20..21]
 a15(r96): [22..23]
 a16(r95): [22..23]
 a17(r87): [24..27]
 a18(r94): [24..25]
 a19(r93): [26..27]
  regions=1, blocks=13, points=28
    allocnos=20 (big 0), copies=0, conflicts=0, ranges=20
Disposition:
   17:r87  l0     3   13:r88  l0     0    8:r89  l0     3    5:r90  l0     1
    2:r91  l0     0    0:r92  l0     0   19:r93  l0     0   18:r94  l0     0
   16:r95  l0     1   15:r96  l0     0   14:r97  l0     1   12:r98  l0     0
   11:r99  l0     0   10:r100 l0     0    9:r101 l0     0    7:r102 l0     0
    6:r103 l0     0    4:r104 l0     0    1:r105 l0     3    3:r106 l0     3
+++Costs: overall -18, reg -18, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


Obstacle::Obstacle(sf::Vector2f, sf::Vector2f)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 22 [xmm1]
;;  ref usage 	r0={15d,2u} r1={15d} r2={13d} r4={18d,5u} r5={24d,12u} r6={1d,12u} r7={1d,24u} r8={12d} r9={12d} r10={12d} r11={12d} r12={12d} r13={12d} r14={12d} r15={12d} r16={1d,11u} r17={26d,1u} r18={12d} r19={12d} r20={1d,32u,2e} r21={15d,3u} r22={15d,3u} r23={13d} r24={13d} r25={13d} r26={13d} r27={13d} r28={13d} r29={12d} r30={12d} r31={12d} r32={12d} r33={12d} r34={12d} r35={12d} r36={12d} r37={13d} r38={13d} r39={12d} r40={12d} r45={12d} r46={12d} r47={12d} r48={12d} r49={12d} r50={12d} r51={12d} r52={12d} r53={12d} r54={12d} r55={12d} r56={12d} r57={12d} r58={12d} r59={12d} r60={12d} r61={12d} r62={12d} r63={12d} r64={12d} r65={12d} r66={12d} r67={12d} r68={12d} r69={12d} r70={12d} r71={12d} r72={12d} r73={12d} r74={12d} r75={12d} r76={12d} r77={12d} r78={12d} r79={12d} r80={12d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={2d,1u} r106={1d,1u} 
;;    total ref usage 1069{942d,125u,2e} in 61{49 regular + 12 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 93 94 95 96
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -376 [0xfffffffffffffe88])) [39 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "classes/Obstacle.cpp":5 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -384 [0xfffffffffffffe80])) [16 pos+0 S8 A32])
        (reg:DI 21 xmm0 [ pos ])) "classes/Obstacle.cpp":5 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 21 xmm0 [ pos ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -392 [0xfffffffffffffe78])) [16 size+0 S8 A32])
        (reg:DI 22 xmm1 [ size ])) "classes/Obstacle.cpp":5 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 22 xmm1 [ size ])
        (nil)))
(note 5 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 5 9 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [5 D.82372+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "classes/Obstacle.cpp":5 1002 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 9 6 10 2 (set (reg/f:DI 87 [ _1 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -376 [0xfffffffffffffe88])) [39 this+0 S8 A64])) "classes/Obstacle.cpp":5 81 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg:DI 93)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -360 [0xfffffffffffffe98])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Obstacle.cpp":5 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 11 10 12 2 (set (reg:SF 22 xmm1)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [17  S4 A32])) "classes/Obstacle.cpp":5 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 12 11 13 2 (set (reg:SF 21 xmm0)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [17  S4 A32])) "classes/Obstacle.cpp":5 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg:DI 93)) "classes/Obstacle.cpp":5 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (nil)))
(call_insn 14 13 15 2 (call (mem:QI (symbol_ref/i:DI ("_ZN2sf7Vector2IfEC1Eff") [flags 0x3]  <function_decl 0x7f7f8d934f00 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) "classes/Obstacle.cpp":5 655 {*call}
     (expr_list:REG_DEAD (reg:SF 22 xmm1)
        (expr_list:REG_DEAD (reg:SF 21 xmm0)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SF (use (reg:SF 21 xmm0))
            (expr_list:SF (use (reg:SF 22 xmm1))
                (nil)))))
(insn 15 14 16 2 (parallel [
            (set (reg:DI 94)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -360 [0xfffffffffffffe98])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Obstacle.cpp":5 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 16 15 17 2 (set (reg:DI 4 si)
        (reg:DI 94)) "classes/Obstacle.cpp":5 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94)
        (nil)))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ _1 ])) "classes/Obstacle.cpp":5 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _1 ])
        (nil)))
(call_insn 18 17 19 2 (call (mem:QI (symbol_ref:DI ("_ZN2sf14RectangleShapeC1ERKNS_7Vector2IfEE") [flags 0x41]  <function_decl 0x7f7f8d0f9e00 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) "classes/Obstacle.cpp":5 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 19 18 20 2 (parallel [
            (set (reg:DI 95)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -392 [0xfffffffffffffe78])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Obstacle.cpp":6 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 20 19 21 2 (parallel [
            (set (reg:DI 96)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -352 [0xfffffffffffffea0])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Obstacle.cpp":6 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 21 20 22 2 (set (reg:DI 4 si)
        (reg:DI 95)) "classes/Obstacle.cpp":6 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 95)
        (nil)))
(insn 22 21 23 2 (set (reg:DI 5 di)
        (reg:DI 96)) "classes/Obstacle.cpp":6 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96)
        (nil)))
(call_insn 23 22 24 2 (call (mem:QI (symbol_ref:DI ("_ZN2sf14RectangleShapeC1ERKNS_7Vector2IfEE") [flags 0x41]  <function_decl 0x7f7f8d0f9e00 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) "classes/Obstacle.cpp":6 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 2 [0x2])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       8 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 97
(note 24 23 25 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 3 (set (reg/f:DI 88 [ _2 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -376 [0xfffffffffffffe88])) [39 this+0 S8 A64])) "classes/Obstacle.cpp":6 81 {*movdi_internal}
     (nil))
(insn 26 25 27 3 (parallel [
            (set (reg:DI 97)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -352 [0xfffffffffffffea0])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Obstacle.cpp":6 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 27 26 28 3 (set (reg:DI 4 si)
        (reg:DI 97)) "classes/Obstacle.cpp":6 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 97)
        (nil)))
(insn 28 27 29 3 (set (reg:DI 5 di)
        (reg/f:DI 88 [ _2 ])) "classes/Obstacle.cpp":6 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ _2 ])
        (nil)))
(call_insn 29 28 30 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN2sf14RectangleShapeaSEOS0_") [flags 0x3]  <function_decl 0x7f7f8cfed900 operator=>) [0 operator= S1 A8])
            (const_int 0 [0]))) "classes/Obstacle.cpp":6 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 3 [0x3])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       7 (ABNORMAL,ABNORMAL_CALL,EH)
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89 98 99 100 101
(note 30 29 31 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 4 (parallel [
            (set (reg:DI 98)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -352 [0xfffffffffffffea0])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Obstacle.cpp":6 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 32 31 33 4 (set (reg:DI 5 di)
        (reg:DI 98)) "classes/Obstacle.cpp":6 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 98)
        (nil)))
(call_insn 33 32 34 4 (call (mem:QI (symbol_ref/i:DI ("_ZN2sf14RectangleShapeD1Ev") [flags 0x3]  <function_decl 0x7f7f8d0f9c00 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) "classes/Obstacle.cpp":6 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 34 33 35 4 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -376 [0xfffffffffffffe88])) [39 this+0 S8 A64])) "classes/Obstacle.cpp":7 81 {*movdi_internal}
     (nil))
(insn 35 34 36 4 (parallel [
            (set (reg/f:DI 89 [ _3 ])
                (plus:DI (reg/f:DI 99)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Obstacle.cpp":7 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 99)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -376 [0xfffffffffffffe88])) [39 this+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 36 35 37 4 (parallel [
            (set (reg:DI 100)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -360 [0xfffffffffffffe98])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Obstacle.cpp":7 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 37 36 38 4 (set (reg:SF 22 xmm1)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [17  S4 A32])) "classes/Obstacle.cpp":7 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.6e+1 [0x0.8p+5])
        (nil)))
(insn 38 37 39 4 (set (reg:SF 21 xmm0)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [17  S4 A32])) "classes/Obstacle.cpp":7 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.6e+1 [0x0.8p+5])
        (nil)))
(insn 39 38 40 4 (set (reg:DI 5 di)
        (reg:DI 100)) "classes/Obstacle.cpp":7 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100)
        (nil)))
(call_insn 40 39 41 4 (call (mem:QI (symbol_ref/i:DI ("_ZN2sf7Vector2IfEC1Eff") [flags 0x3]  <function_decl 0x7f7f8d934f00 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) "classes/Obstacle.cpp":7 655 {*call}
     (expr_list:REG_DEAD (reg:SF 22 xmm1)
        (expr_list:REG_DEAD (reg:SF 21 xmm0)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SF (use (reg:SF 21 xmm0))
            (expr_list:SF (use (reg:SF 22 xmm1))
                (nil)))))
(insn 41 40 42 4 (parallel [
            (set (reg:DI 101)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -360 [0xfffffffffffffe98])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Obstacle.cpp":7 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 42 41 43 4 (set (reg:DI 4 si)
        (reg:DI 101)) "classes/Obstacle.cpp":7 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 101)
        (nil)))
(insn 43 42 44 4 (set (reg:DI 5 di)
        (reg/f:DI 89 [ _3 ])) "classes/Obstacle.cpp":7 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ _3 ])
        (nil)))
(call_insn 44 43 45 4 (call (mem:QI (symbol_ref:DI ("_ZN2sf13Transformable9setOriginERKNS_7Vector2IfEE") [flags 0x41]  <function_decl 0x7f7f8d92ec00 setOrigin>) [0 setOrigin S1 A8])
        (const_int 0 [0])) "classes/Obstacle.cpp":7 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 2 [0x2])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       8 (ABNORMAL,ABNORMAL_CALL,EH)
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 90 102 103
(note 45 44 46 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 5 (set (reg/f:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -376 [0xfffffffffffffe88])) [39 this+0 S8 A64])) "classes/Obstacle.cpp":8 81 {*movdi_internal}
     (nil))
(insn 47 46 48 5 (parallel [
            (set (reg/f:DI 90 [ _4 ])
                (plus:DI (reg/f:DI 102)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Obstacle.cpp":8 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 102)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -376 [0xfffffffffffffe88])) [39 this+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 48 47 49 5 (parallel [
            (set (reg:DI 103)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -384 [0xfffffffffffffe80])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Obstacle.cpp":8 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 49 48 50 5 (set (reg:DI 4 si)
        (reg:DI 103)) "classes/Obstacle.cpp":8 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 103)
        (nil)))
(insn 50 49 51 5 (set (reg:DI 5 di)
        (reg/f:DI 90 [ _4 ])) "classes/Obstacle.cpp":8 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ _4 ])
        (nil)))
(call_insn 51 50 90 5 (call (mem:QI (symbol_ref:DI ("_ZN2sf13Transformable11setPositionERKNS_7Vector2IfEE") [flags 0x41]  <function_decl 0x7f7f8d92e700 setPosition>) [0 setPosition S1 A8])
        (const_int 0 [0])) "classes/Obstacle.cpp":8 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 2 [0x2])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       8 (ABNORMAL,ABNORMAL_CALL,EH)
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 90 51 92 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 92 90 93 6 (set (pc)
        (label_ref 91)) "classes/Obstacle.cpp":9 649 {jump}
     (nil)
 -> 91)
;;  succ:       10 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 93 92 86)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       3 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 7 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 104 105 106
(code_label/s 86 93 89 7 20 (nil) [1 uses])
(note 89 86 87 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 87 89 57 7 (set (reg:DI 106)
        (reg:DI 0 ax)) 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 57 87 58 7 (parallel [
            (set (reg:DI 104)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -352 [0xfffffffffffffea0])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Obstacle.cpp":6 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 58 57 59 7 (set (reg:DI 5 di)
        (reg:DI 104)) "classes/Obstacle.cpp":6 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 104)
        (nil)))
(call_insn 59 58 60 7 (call (mem:QI (symbol_ref/i:DI ("_ZN2sf14RectangleShapeD1Ev") [flags 0x3]  <function_decl 0x7f7f8d0f9c00 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) "classes/Obstacle.cpp":6 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 60 59 94 7 (set (reg:DI 105)
        (reg:DI 106)) 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 106)
        (nil)))
(jump_insn 94 60 95 7 (set (pc)
        (label_ref 62)) 649 {jump}
     (nil)
 -> 62)
;;  succ:       9 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105

(barrier 95 94 80)
;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;;              4 (ABNORMAL,ABNORMAL_CALL,EH)
;;              5 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 8 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 105
(code_label/s 80 95 85 8 19 (nil) [1 uses])
(note 85 80 81 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 81 85 62 8 (set (reg:DI 105)
        (reg:DI 0 ax)) 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       9 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 [100.0%]  (FALLTHRU)
;;              7 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 91 92
(code_label 62 81 63 9 17 (nil) [1 uses])
(note 63 62 64 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 9 (set (reg/f:DI 91 [ _5 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -376 [0xfffffffffffffe88])) [39 this+0 S8 A64])) "classes/Obstacle.cpp":5 81 {*movdi_internal}
     (nil))
(insn 65 64 66 9 (set (reg:DI 5 di)
        (reg/f:DI 91 [ _5 ])) "classes/Obstacle.cpp":5 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ _5 ])
        (nil)))
(call_insn 66 65 67 9 (call (mem:QI (symbol_ref/i:DI ("_ZN2sf14RectangleShapeD1Ev") [flags 0x3]  <function_decl 0x7f7f8d0f9c00 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) "classes/Obstacle.cpp":5 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 67 66 68 9 (set (reg/f:DI 92 [ D.82370 ])
        (reg:DI 105)) 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 105)
        (nil)))
(insn 68 67 69 9 (set (reg:DI 5 di)
        (reg/f:DI 92 [ D.82370 ])) 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ D.82370 ])
        (nil)))
(call_insn 69 68 70 9 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f7f904ed100 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 70 69 91)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       6 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 91 70 77 10 21 (nil) [1 uses])
(note 77 91 72 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 72 77 73 10 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [5 D.82372+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) "classes/Obstacle.cpp":9 1006 {stack_tls_protect_test_di}
     (nil))
(jump_insn 73 72 78 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) "classes/Obstacle.cpp":9 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 76)
;;  succ:       12
;;              11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 78 73 74 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(call_insn 74 78 75 11 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f7f8c72b800 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "classes/Obstacle.cpp":9 655 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 75 74 76)
;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 1, flags: (RTL)
;;  pred:       10
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 76 75 79 12 18 (nil) [1 uses])
(note 79 76 0 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function Obstacle::~Obstacle() (_ZN8ObstacleD2Ev, funcdef_no=3247, decl_uid=76722, cgraph_uid=756, symbol_order=760)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 8.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 11(l0): point = 0
   Insn 8(l0): point = 2
   Insn 7(l0): point = 4
   Insn 6(l0): point = 6
   Insn 2(l0): point = 8
 a0(r87): [5..6]
Compressing live ranges: from 11 to 2 - 18%
Ranges after the compression:
 a0(r87): [0..1]
  regions=1, blocks=3, points=2
    allocnos=1 (big 0), copies=0, conflicts=0, ranges=1
Disposition:
    0:r87  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


Obstacle::~Obstacle()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,4u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} 
;;    total ref usage 106{93d,13u,0e} in 5{4 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [39 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "classes/Obstacle.cpp":11 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 87 [ _1 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [39 this+0 S8 A64])) "classes/Obstacle.cpp":11 81 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ _1 ])) "classes/Obstacle.cpp":11 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _1 ])
        (nil)))
(call_insn 8 7 11 2 (call (mem:QI (symbol_ref/i:DI ("_ZN2sf14RectangleShapeD1Ev") [flags 0x3]  <function_decl 0x7f7f8d0f9c00 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) "classes/Obstacle.cpp":11 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 8 0 2 (const_int 0 [0]) "classes/Obstacle.cpp":13 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function Collider Obstacle::getCollider() (_ZN8Obstacle11getColliderEv, funcdef_no=3249, decl_uid=76706, cgraph_uid=764, symbol_order=768)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 4 count 5 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { }
;; 4 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 19.
verify found no changes in insn with uid = 28.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best SIREG, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r89,l0) costs: AREG:8 DREG:8 CREG:8 BREG:8 SIREG:8 DIREG:8 AD_REGS:8 CLOBBERED_REGS:8 Q_REGS:8 NON_Q_REGS:8 TLS_GOTBASE_REGS:8 GENERAL_REGS:8 SSE_FIRST_REG:11 NO_REX_SSE_REGS:28 SSE_REGS:28 MMX_REGS:33 INT_SSE_REGS:29 ALL_REGS:320 MEM:15
  a3(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7

   Insn 31(l0): point = 0
   Insn 28(l0): point = 3
   Insn 27(l0): point = 6
   Insn 26(l0): point = 8
   Insn 25(l0): point = 10
   Insn 19(l0): point = 12
   Insn 18(l0): point = 14
   Insn 17(l0): point = 16
   Insn 16(l0): point = 18
   Insn 15(l0): point = 20
   Insn 14(l0): point = 22
   Insn 13(l0): point = 24
   Insn 12(l0): point = 26
   Insn 11(l0): point = 28
   Insn 10(l0): point = 30
   Insn 9(l0): point = 32
   Insn 8(l0): point = 34
   Insn 5(l0): point = 36
   Insn 3(l0): point = 38
   Insn 2(l0): point = 40
 a0(r90): [15..20]
 a1(r87): [17..24]
 a2(r89): [19..22]
 a3(r88): [29..34]
Compressing live ranges: from 43 to 4 - 9%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r87): [0..1]
 a2(r89): [0..1]
 a3(r88): [2..3]
  regions=1, blocks=5, points=4
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4
Disposition:
    1:r87  l0     1    3:r88  l0     0    2:r89  l0     2    0:r90  l0     0
+++Costs: overall 5, reg 5, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


Collider Obstacle::getCollider()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 22 [xmm1]
;;  ref usage 	r0={5d,2u} r1={4d} r2={4d} r4={5d,2u} r5={6d,3u} r6={1d,4u} r7={1d,7u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,3u} r17={6d,1u} r18={3d} r19={3d} r20={1d,13u} r21={6d,2u} r22={5d,1u} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 291{249d,42u,0e} in 20{17 regular + 3 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [40 .result_ptr+0 S8 A64])
        (reg:DI 5 di [ .result_ptr ])) "classes/Obstacle.cpp":15 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ .result_ptr ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [39 this+0 S8 A64])
        (reg:DI 4 si [ this ])) "classes/Obstacle.cpp":15 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ this ])
        (nil)))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [5 D.82374+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "classes/Obstacle.cpp":15 1002 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 8 5 9 2 (parallel [
            (set (reg:DI 88)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Obstacle.cpp":16 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 9 8 10 2 (set (reg:SF 22 xmm1)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [17  S4 A32])) "classes/Obstacle.cpp":16 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 10 9 11 2 (set (reg:SF 21 xmm0)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [17  S4 A32])) "classes/Obstacle.cpp":16 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg:DI 88)) "classes/Obstacle.cpp":16 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(call_insn 12 11 13 2 (call (mem:QI (symbol_ref/i:DI ("_ZN2sf7Vector2IfEC1Eff") [flags 0x3]  <function_decl 0x7f7f8d934f00 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) "classes/Obstacle.cpp":16 655 {*call}
     (expr_list:REG_DEAD (reg:SF 22 xmm1)
        (expr_list:REG_DEAD (reg:SF 21 xmm0)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SF (use (reg:SF 21 xmm0))
            (expr_list:SF (use (reg:SF 22 xmm1))
                (nil)))))
(insn 13 12 14 2 (set (reg/f:DI 87 [ _1 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [39 this+0 S8 A64])) "classes/Obstacle.cpp":16 81 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 89)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [16 D.77061+0 S8 A64])) "classes/Obstacle.cpp":16 81 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [41 <retval>+0 S8 A64])) "classes/Obstacle.cpp":16 81 {*movdi_internal}
     (nil))
(insn 16 15 17 2 (set (reg:DI 21 xmm0)
        (reg:DI 89)) "classes/Obstacle.cpp":16 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(insn 17 16 18 2 (set (reg:DI 4 si)
        (reg/f:DI 87 [ _1 ])) "classes/Obstacle.cpp":16 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _1 ])
        (nil)))
(insn 18 17 19 2 (set (reg:DI 5 di)
        (reg:DI 90)) "classes/Obstacle.cpp":16 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(call_insn 19 18 25 2 (call (mem:QI (symbol_ref:DI ("_ZN8ColliderC1ERN2sf14RectangleShapeENS0_7Vector2IfEE") [flags 0x41]  <function_decl 0x7f7f8cfbfd00 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) "classes/Obstacle.cpp":16 655 {*call}
     (expr_list:REG_DEAD (reg:DI 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 21 xmm0))
                (nil)))))
(insn 25 19 26 2 (set (reg/i:DI 0 ax)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [41 <retval>+0 S8 A64])) "classes/Obstacle.cpp":17 81 {*movdi_internal}
     (nil))
(insn 26 25 27 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [5 D.82374+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) "classes/Obstacle.cpp":17 1006 {stack_tls_protect_test_di}
     (nil))
(jump_insn 27 26 33 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) "classes/Obstacle.cpp":17 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 30)
;;  succ:       4
;;              3 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 33 27 28 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 28 33 29 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f7f8c72b800 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "classes/Obstacle.cpp":17 655 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 29 28 30)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (RTL)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 30 29 34 4 25 (nil) [1 uses])
(note 34 30 31 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 31 34 0 4 (use (reg/i:DI 0 ax)) "classes/Obstacle.cpp":17 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function sf::Vector2f Obstacle::getPos() (_ZN8Obstacle6getPosEv, funcdef_no=3256, decl_uid=76708, cgraph_uid=765, symbol_order=769)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 9.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a0 (r90,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:8 DREG:8 CREG:8 BREG:8 SIREG:8 DIREG:8 AD_REGS:8 CLOBBERED_REGS:8 Q_REGS:8 NON_Q_REGS:8 TLS_GOTBASE_REGS:8 GENERAL_REGS:8 SSE_FIRST_REG:25 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:29 INT_SSE_REGS:25 ALL_REGS:316 MEM:12
  a1(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a3(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a4(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 19(l0): point = 0
   Insn 18(l0): point = 2
   Insn 14(l0): point = 4
   Insn 11(l0): point = 6
   Insn 10(l0): point = 8
   Insn 9(l0): point = 10
   Insn 8(l0): point = 12
   Insn 7(l0): point = 14
   Insn 6(l0): point = 16
   Insn 2(l0): point = 18
 a0(r90): [3..4]
 a1(r89): [5..6]
 a2(r88): [7..8]
 a3(r87): [13..14]
 a4(r91): [15..16]
Compressing live ranges: from 21 to 10 - 47%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r89): [2..3]
 a2(r88): [4..5]
 a3(r87): [6..7]
 a4(r91): [8..9]
  pref0:a0(r90)<-hr21@1
  regions=1, blocks=3, points=10
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    3:r87  l0     0    2:r88  l0     0    1:r89  l0     0    0:r90  l0     0
    4:r91  l0     0
+++Costs: overall 5, reg 5, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


sf::Vector2f Obstacle::getPos()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame] 21 [xmm0]
;;  regs ever live 	 0 [ax] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0]
;;  ref usage 	r0={2d,1u} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={2d} r18={1d} r19={1d} r20={1d,4u,1e} r21={3d,2u} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 120{99d,20u,1e} in 10{9 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [39 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "classes/Obstacle.cpp":19 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [39 this+0 S8 A64])) "classes/Obstacle.cpp":20 81 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (parallel [
            (set (reg/f:DI 87 [ _1 ])
                (plus:DI (reg/f:DI 91)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Obstacle.cpp":20 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [39 this+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ _1 ])) "classes/Obstacle.cpp":20 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _1 ])
        (nil)))
(call_insn 9 8 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNK2sf13Transformable11getPositionEv") [flags 0x41]  <function_decl 0x7f7f8d92ed00 getPosition>) [0 getPosition S1 A8])
            (const_int 0 [0]))) "classes/Obstacle.cpp":20 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 88 [ _2 ])
        (reg:DI 0 ax)) "classes/Obstacle.cpp":20 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 11 10 14 2 (set (reg:DI 89 [ D.82186 ])
        (mem:DI (reg/f:DI 88 [ _2 ]) [16 MEM[(const struct Vector2 &)_2]+0 S8 A32])) "classes/Obstacle.cpp":20 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ _2 ])
        (nil)))
(insn 14 11 18 2 (set (reg:DI 90 [ <retval> ])
        (reg:DI 89 [ D.82186 ])) "classes/Obstacle.cpp":20 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89 [ D.82186 ])
        (nil)))
(insn 18 14 19 2 (set (reg/i:DI 21 xmm0)
        (reg:DI 90 [ <retval> ])) "classes/Obstacle.cpp":21 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90 [ <retval> ])
        (nil)))
(insn 19 18 0 2 (use (reg/i:DI 21 xmm0)) "classes/Obstacle.cpp":21 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]


;; Function CellDoor::CellDoor(sf::Vector2f, sf::Vector2f, std::__cxx11::string, sf::Vector2f) (_ZN8CellDoorC2EN2sf7Vector2IfEES2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES2_, funcdef_no=3258, decl_uid=76752, cgraph_uid=767, symbol_order=771)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 15 n_edges 19 count 15 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;; 2 succs { 10 3 }
;; 3 succs { 9 4 }
;; 4 succs { 10 5 }
;; 5 succs { 10 6 }
;; 6 succs { 10 7 }
;; 7 succs { 10 8 }
;; 8 succs { 12 }
;; 9 succs { 11 }
;; 10 succs { 11 }
;; 11 succs { }
;; 12 succs { 14 13 }
;; 13 succs { }
;; 14 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 16.
verify found no changes in insn with uid = 20.
verify found no changes in insn with uid = 24.
verify found no changes in insn with uid = 28.
verify found no changes in insn with uid = 33.
verify found no changes in insn with uid = 39.
verify found no changes in insn with uid = 43.
verify found no changes in insn with uid = 48.
verify found no changes in insn with uid = 53.
verify found no changes in insn with uid = 60.
verify found no changes in insn with uid = 67.
verify found no changes in insn with uid = 77.
verify found no changes in insn with uid = 85.
verify found no changes in insn with uid = 93.
verify found no changes in insn with uid = 98.
verify found no changes in insn with uid = 101.
verify found no changes in insn with uid = 106.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r119,l0) best AREG, allocno GENERAL_REGS
    r118: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r118,l0) best AREG, allocno GENERAL_REGS
    r117: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r117,l0) best DIREG, allocno GENERAL_REGS
    r116: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r116,l0) best SIREG, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r112,l0) best SIREG, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a17 (r110,l0) best SIREG, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a19 (r108,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a23 (r106,l0) best DIREG, allocno GENERAL_REGS
    r105: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a25 (r105,l0) best SIREG, allocno GENERAL_REGS
    r104: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a26 (r104,l0) best DIREG, allocno GENERAL_REGS
    r103: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a27 (r103,l0) best SIREG, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a33 (r100,l0) best SIREG, allocno GENERAL_REGS
    r99: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a34 (r99,l0) best DIREG, allocno GENERAL_REGS
    r98: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r98,l0) best DIREG, allocno GENERAL_REGS
    r97: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r97,l0) best DIREG, allocno GENERAL_REGS
    r96: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r96,l0) best DIREG, allocno GENERAL_REGS
    r95: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r95,l0) best DIREG, allocno GENERAL_REGS
    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r94,l0) best DIREG, allocno GENERAL_REGS
    r93: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r93,l0) best AREG, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r92,l0) best DIREG, allocno GENERAL_REGS
    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a24 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a28 (r89,l0) best DIREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a30 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a32 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:29 INT_SSE_REGS:25 ALL_REGS:408 MEM:5
  a4(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a5(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a6(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a7(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a8(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a9(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a10(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a11(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a12(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a13(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a14(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a15(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a16(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a17(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a18(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a19(r108,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 SSE_FIRST_REG:17 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a20(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a21(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a22(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a23(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a24(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a25(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a26(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a27(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a28(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a29(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a30(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a31(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a32(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a33(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a34(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7

   Insn 106(l0): point = 1
   Insn 105(l0): point = 4
   Insn 104(l0): point = 6
   Insn 101(l0): point = 9
   Insn 100(l0): point = 11
   Insn 99(l0): point = 13
   Insn 98(l0): point = 15
   Insn 97(l0): point = 17
   Insn 96(l0): point = 19
   Insn 94(l0): point = 21
   Insn 93(l0): point = 23
   Insn 92(l0): point = 25
   Insn 91(l0): point = 27
   Insn 90(l0): point = 29
   Insn 114(l0): point = 32
   Insn 127(l0): point = 35
   Insn 86(l0): point = 37
   Insn 85(l0): point = 39
   Insn 84(l0): point = 41
   Insn 83(l0): point = 43
   Insn 120(l0): point = 45
   Insn 125(l0): point = 48
   Insn 77(l0): point = 51
   Insn 76(l0): point = 53
   Insn 75(l0): point = 55
   Insn 74(l0): point = 57
   Insn 73(l0): point = 59
   Insn 72(l0): point = 61
   Insn 71(l0): point = 63
   Insn 70(l0): point = 65
   Insn 69(l0): point = 67
   Insn 67(l0): point = 70
   Insn 66(l0): point = 72
   Insn 65(l0): point = 74
   Insn 64(l0): point = 76
   Insn 63(l0): point = 78
   Insn 62(l0): point = 80
   Insn 60(l0): point = 83
   Insn 59(l0): point = 85
   Insn 58(l0): point = 87
   Insn 57(l0): point = 89
   Insn 56(l0): point = 91
   Insn 55(l0): point = 93
   Insn 54(l0): point = 95
   Insn 53(l0): point = 97
   Insn 52(l0): point = 99
   Insn 51(l0): point = 101
   Insn 49(l0): point = 103
   Insn 48(l0): point = 106
   Insn 47(l0): point = 108
   Insn 46(l0): point = 110
   Insn 45(l0): point = 112
   Insn 44(l0): point = 114
   Insn 43(l0): point = 116
   Insn 42(l0): point = 118
   Insn 41(l0): point = 120
   Insn 39(l0): point = 123
   Insn 38(l0): point = 125
   Insn 37(l0): point = 127
   Insn 36(l0): point = 129
   Insn 35(l0): point = 131
   Insn 33(l0): point = 134
   Insn 32(l0): point = 136
   Insn 31(l0): point = 138
   Insn 30(l0): point = 140
   Insn 29(l0): point = 142
   Insn 28(l0): point = 144
   Insn 27(l0): point = 146
   Insn 26(l0): point = 148
   Insn 25(l0): point = 150
   Insn 24(l0): point = 152
   Insn 23(l0): point = 154
   Insn 22(l0): point = 156
   Insn 21(l0): point = 158
   Insn 20(l0): point = 160
   Insn 19(l0): point = 162
   Insn 18(l0): point = 164
   Insn 17(l0): point = 166
   Insn 16(l0): point = 168
   Insn 15(l0): point = 170
   Insn 14(l0): point = 172
   Insn 13(l0): point = 174
   Insn 12(l0): point = 176
   Insn 11(l0): point = 178
   Insn 8(l0): point = 180
   Insn 6(l0): point = 182
   Insn 5(l0): point = 184
   Insn 4(l0): point = 186
   Insn 3(l0): point = 188
   Insn 2(l0): point = 190
 a0(r98): [12..13]
 a1(r123): [14..21]
 a2(r97): [18..19]
 a3(r118): [35..37] [22..32]
 a4(r96): [26..27]
 a5(r122): [28..29]
 a6(r119): [38..45]
 a7(r117): [42..43]
 a8(r95): [54..59]
 a9(r116): [56..57]
 a10(r115): [60..61]
 a11(r113): [64..67]
 a12(r114): [64..65]
 a13(r94): [73..78]
 a14(r112): [75..76]
 a15(r111): [79..80]
 a16(r91): [86..112]
 a17(r110): [88..89]
 a18(r109): [92..93]
 a19(r108): [94..95]
 a20(r93): [100..103]
 a21(r92): [109..110]
 a22(r107): [113..114]
 a23(r106): [119..120]
 a24(r90): [126..131]
 a25(r105): [128..129]
 a26(r104): [137..140]
 a27(r103): [139..142]
 a28(r89): [147..148]
 a29(r102): [149..150]
 a30(r88): [155..156]
 a31(r101): [157..158]
 a32(r87): [163..178]
 a33(r100): [165..166]
 a34(r99): [171..176]
Compressing live ranges: from 193 to 52 - 26%
Ranges after the compression:
 a0(r98): [0..1]
 a1(r123): [2..3]
 a2(r97): [2..3]
 a3(r118): [4..9]
 a4(r96): [4..5]
 a5(r122): [6..7]
 a6(r119): [10..11]
 a7(r117): [10..11]
 a8(r95): [12..13]
 a9(r116): [12..13]
 a10(r115): [14..15]
 a11(r113): [16..17]
 a12(r114): [16..17]
 a13(r94): [18..19]
 a14(r112): [18..19]
 a15(r111): [20..21]
 a16(r91): [22..31]
 a17(r110): [22..23]
 a18(r109): [24..25]
 a19(r108): [26..27]
 a20(r93): [28..29]
 a21(r92): [30..31]
 a22(r107): [32..33]
 a23(r106): [34..35]
 a24(r90): [36..37]
 a25(r105): [36..37]
 a26(r104): [38..39]
 a27(r103): [38..39]
 a28(r89): [40..41]
 a29(r102): [42..43]
 a30(r88): [44..45]
 a31(r101): [46..47]
 a32(r87): [48..51]
 a33(r100): [48..49]
 a34(r99): [50..51]
  pref0:a19(r108)<-hr21@1
  regions=1, blocks=15, points=52
    allocnos=35 (big 0), copies=0, conflicts=0, ranges=35
Disposition:
   32:r87  l0     3   30:r88  l0     0   28:r89  l0     0   24:r90  l0     0
   16:r91  l0     3   21:r92  l0     0   20:r93  l0     0   13:r94  l0     1
    8:r95  l0     1    4:r96  l0     0    2:r97  l0     0    0:r98  l0     0
   34:r99  l0     0   33:r100 l0     0   31:r101 l0     0   29:r102 l0     0
   27:r103 l0     1   26:r104 l0     0   25:r105 l0     1   23:r106 l0     0
   22:r107 l0     0   19:r108 l0     0   18:r109 l0     0   17:r110 l0     0
   15:r111 l0     0   14:r112 l0     0   11:r113 l0     0   12:r114 l0     1
   10:r115 l0     0    9:r116 l0     0    7:r117 l0     0    3:r118 l0     3
    6:r119 l0     3    5:r122 l0     0    1:r123 l0     3
+++Costs: overall -25, reg -25, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


CellDoor::CellDoor(sf::Vector2f, sf::Vector2f, std::__cxx11::string, sf::Vector2f)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2]
;;  ref usage 	r0={20d,3u} r1={20d} r2={18d} r4={24d,7u} r5={34d,17u} r6={1d,14u} r7={1d,31u} r8={17d} r9={17d} r10={17d} r11={17d} r12={17d} r13={17d} r14={17d} r15={17d} r16={1d,13u} r17={34d,1u} r18={17d} r19={17d} r20={1d,44u,6e} r21={20d,4u} r22={19d,2u} r23={18d,1u} r24={18d} r25={18d} r26={18d} r27={18d} r28={18d} r29={17d} r30={17d} r31={17d} r32={17d} r33={17d} r34={17d} r35={17d} r36={17d} r37={18d} r38={18d} r39={17d} r40={17d} r45={17d} r46={17d} r47={17d} r48={17d} r49={17d} r50={17d} r51={17d} r52={17d} r53={17d} r54={17d} r55={17d} r56={17d} r57={17d} r58={17d} r59={17d} r60={17d} r61={17d} r62={17d} r63={17d} r64={17d} r65={17d} r66={17d} r67={17d} r68={17d} r69={17d} r70={17d} r71={17d} r72={17d} r73={17d} r74={17d} r75={17d} r76={17d} r77={17d} r78={17d} r79={17d} r80={17d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={2d,1u} r119={1d,1u} r122={1d,1u} r123={1d,1u} 
;;    total ref usage 1503{1325d,172u,6e} in 90{73 regular + 17 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 99 100 101 102 103 104
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -376 [0xfffffffffffffe88])) [43 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "classes/Obstacle.cpp":23 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -384 [0xfffffffffffffe80])) [16 pos+0 S8 A32])
        (reg:DI 21 xmm0 [ pos ])) "classes/Obstacle.cpp":23 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 21 xmm0 [ pos ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -392 [0xfffffffffffffe78])) [16 size+0 S8 A32])
        (reg:DI 22 xmm1 [ size ])) "classes/Obstacle.cpp":23 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 22 xmm1 [ size ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -400 [0xfffffffffffffe70])) [44 link+0 S8 A64])
        (reg:DI 4 si [ link ])) "classes/Obstacle.cpp":23 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ link ])
        (nil)))
(insn 6 5 7 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -408 [0xfffffffffffffe68])) [16 linkPos+0 S8 A32])
        (reg:DI 23 xmm2 [ linkPos ])) "classes/Obstacle.cpp":23 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 23 xmm2 [ linkPos ])
        (nil)))
(note 7 6 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 7 11 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [5 D.82379+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "classes/Obstacle.cpp":23 1002 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 11 8 12 2 (set (reg/f:DI 87 [ _1 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -376 [0xfffffffffffffe88])) [43 this+0 S8 A64])) "classes/Obstacle.cpp":23 81 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg:DI 99)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -360 [0xfffffffffffffe98])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Obstacle.cpp":23 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 13 12 14 2 (set (reg:SF 22 xmm1)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [17  S4 A32])) "classes/Obstacle.cpp":23 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 14 13 15 2 (set (reg:SF 21 xmm0)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [17  S4 A32])) "classes/Obstacle.cpp":23 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg:DI 99)) "classes/Obstacle.cpp":23 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 99)
        (nil)))
(call_insn 16 15 17 2 (call (mem:QI (symbol_ref/i:DI ("_ZN2sf7Vector2IfEC1Eff") [flags 0x3]  <function_decl 0x7f7f8d934f00 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) "classes/Obstacle.cpp":23 655 {*call}
     (expr_list:REG_DEAD (reg:SF 22 xmm1)
        (expr_list:REG_DEAD (reg:SF 21 xmm0)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SF (use (reg:SF 21 xmm0))
            (expr_list:SF (use (reg:SF 22 xmm1))
                (nil)))))
(insn 17 16 18 2 (parallel [
            (set (reg:DI 100)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -360 [0xfffffffffffffe98])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Obstacle.cpp":23 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 18 17 19 2 (set (reg:DI 4 si)
        (reg:DI 100)) "classes/Obstacle.cpp":23 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100)
        (nil)))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ _1 ])) "classes/Obstacle.cpp":23 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _1 ])
        (nil)))
(call_insn 20 19 21 2 (call (mem:QI (symbol_ref:DI ("_ZN2sf14RectangleShapeC1ERKNS_7Vector2IfEE") [flags 0x41]  <function_decl 0x7f7f8d0f9e00 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) "classes/Obstacle.cpp":23 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 21 20 22 2 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -376 [0xfffffffffffffe88])) [43 this+0 S8 A64])) "classes/Obstacle.cpp":23 81 {*movdi_internal}
     (nil))
(insn 22 21 23 2 (parallel [
            (set (reg/f:DI 88 [ _2 ])
                (plus:DI (reg/f:DI 101)
                    (const_int 344 [0x158])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Obstacle.cpp":23 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 101)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -376 [0xfffffffffffffe88])) [43 this+0 S8 A64])
                    (const_int 344 [0x158]))
                (nil)))))
(insn 23 22 24 2 (set (reg:DI 5 di)
        (reg/f:DI 88 [ _2 ])) "classes/Obstacle.cpp":23 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ _2 ])
        (nil)))
(call_insn 24 23 25 2 (call (mem:QI (symbol_ref/i:DI ("_ZN2sf7Vector2IfEC1Ev") [flags 0x3]  <function_decl 0x7f7f8d937100 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) "classes/Obstacle.cpp":23 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 25 24 26 2 (set (reg/f:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -376 [0xfffffffffffffe88])) [43 this+0 S8 A64])) "classes/Obstacle.cpp":23 81 {*movdi_internal}
     (nil))
(insn 26 25 27 2 (parallel [
            (set (reg/f:DI 89 [ _3 ])
                (plus:DI (reg/f:DI 102)
                    (const_int 352 [0x160])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Obstacle.cpp":23 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 102)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -376 [0xfffffffffffffe88])) [43 this+0 S8 A64])
                    (const_int 352 [0x160]))
                (nil)))))
(insn 27 26 28 2 (set (reg:DI 5 di)
        (reg/f:DI 89 [ _3 ])) "classes/Obstacle.cpp":23 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ _3 ])
        (nil)))
(call_insn 28 27 29 2 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev") [flags 0x41]  <function_decl 0x7f7f8f17f500 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) "classes/Obstacle.cpp":23 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 29 28 30 2 (parallel [
            (set (reg:DI 103)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -392 [0xfffffffffffffe78])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Obstacle.cpp":24 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 30 29 31 2 (parallel [
            (set (reg:DI 104)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -352 [0xfffffffffffffea0])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Obstacle.cpp":24 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 31 30 32 2 (set (reg:DI 4 si)
        (reg:DI 103)) "classes/Obstacle.cpp":24 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 103)
        (nil)))
(insn 32 31 33 2 (set (reg:DI 5 di)
        (reg:DI 104)) "classes/Obstacle.cpp":24 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 104)
        (nil)))
(call_insn 33 32 34 2 (call (mem:QI (symbol_ref:DI ("_ZN2sf14RectangleShapeC1ERKNS_7Vector2IfEE") [flags 0x41]  <function_decl 0x7f7f8d0f9e00 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) "classes/Obstacle.cpp":24 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 2 [0x2])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       10 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 90 105
(note 34 33 35 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 3 (set (reg/f:DI 90 [ _4 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -376 [0xfffffffffffffe88])) [43 this+0 S8 A64])) "classes/Obstacle.cpp":24 81 {*movdi_internal}
     (nil))
(insn 36 35 37 3 (parallel [
            (set (reg:DI 105)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -352 [0xfffffffffffffea0])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Obstacle.cpp":24 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 37 36 38 3 (set (reg:DI 4 si)
        (reg:DI 105)) "classes/Obstacle.cpp":24 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 105)
        (nil)))
(insn 38 37 39 3 (set (reg:DI 5 di)
        (reg/f:DI 90 [ _4 ])) "classes/Obstacle.cpp":24 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ _4 ])
        (nil)))
(call_insn 39 38 40 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN2sf14RectangleShapeaSEOS0_") [flags 0x3]  <function_decl 0x7f7f8cfed900 operator=>) [0 operator= S1 A8])
            (const_int 0 [0]))) "classes/Obstacle.cpp":24 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 3 [0x3])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       9 (ABNORMAL,ABNORMAL_CALL,EH)
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 91 92 106 107
(note 40 39 41 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 4 (parallel [
            (set (reg:DI 106)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -352 [0xfffffffffffffea0])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Obstacle.cpp":24 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 42 41 43 4 (set (reg:DI 5 di)
        (reg:DI 106)) "classes/Obstacle.cpp":24 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 106)
        (nil)))
(call_insn 43 42 44 4 (call (mem:QI (symbol_ref/i:DI ("_ZN2sf14RectangleShapeD1Ev") [flags 0x3]  <function_decl 0x7f7f8d0f9c00 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) "classes/Obstacle.cpp":24 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 44 43 45 4 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -376 [0xfffffffffffffe88])) [43 this+0 S8 A64])) "classes/Obstacle.cpp":25 81 {*movdi_internal}
     (nil))
(insn 45 44 46 4 (parallel [
            (set (reg/f:DI 91 [ _5 ])
                (plus:DI (reg/f:DI 107)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Obstacle.cpp":25 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 107)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -376 [0xfffffffffffffe88])) [43 this+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 46 45 47 4 (set (reg/f:DI 92 [ _6 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -376 [0xfffffffffffffe88])) [43 this+0 S8 A64])) "classes/Obstacle.cpp":25 81 {*movdi_internal}
     (nil))
(insn 47 46 48 4 (set (reg:DI 5 di)
        (reg/f:DI 92 [ _6 ])) "classes/Obstacle.cpp":25 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ _6 ])
        (nil)))
(call_insn 48 47 110 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNK2sf14RectangleShape7getSizeEv") [flags 0x41]  <function_decl 0x7f7f8d0f9700 getSize>) [0 getSize S1 A8])
            (const_int 0 [0]))) "classes/Obstacle.cpp":25 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 2 [0x2])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       10 (ABNORMAL,ABNORMAL_CALL,EH)
;;              5 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 93 108 109 110
(note 110 48 49 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 49 110 51 5 (set (reg/f:DI 93 [ _7 ])
        (reg:DI 0 ax)) "classes/Obstacle.cpp":25 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 51 49 52 5 (set (reg:SF 21 xmm0)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [17  S4 A32])) "classes/Obstacle.cpp":25 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.0e+0 [0x0.8p+2])
        (nil)))
(insn 52 51 53 5 (set (reg:DI 5 di)
        (reg/f:DI 93 [ _7 ])) "classes/Obstacle.cpp":25 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ _7 ])
        (nil)))
(call_insn 53 52 54 5 (set (reg:DI 21 xmm0)
        (call (mem:QI (symbol_ref/i:DI ("_ZN2sfdvIfEENS_7Vector2IT_EERKS3_S2_") [flags 0x3]  <function_decl 0x7f7f8d00ff00 operator/>) [0 operator/ S1 A8])
            (const_int 0 [0]))) "classes/Obstacle.cpp":25 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SF (use (reg:SF 21 xmm0))
            (nil))))
(insn 54 53 55 5 (set (reg:DI 108)
        (reg:DI 21 xmm0)) "classes/Obstacle.cpp":25 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 21 xmm0)
        (nil)))
(insn 55 54 56 5 (set (reg:DI 109)
        (reg:DI 108)) "classes/Obstacle.cpp":25 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 108)
        (nil)))
(insn 56 55 57 5 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -360 [0xfffffffffffffe98])) [16 D.77186+0 S8 A64])
        (reg:DI 109)) "classes/Obstacle.cpp":25 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 109)
        (nil)))
(insn 57 56 58 5 (parallel [
            (set (reg:DI 110)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -360 [0xfffffffffffffe98])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Obstacle.cpp":25 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 58 57 59 5 (set (reg:DI 4 si)
        (reg:DI 110)) "classes/Obstacle.cpp":25 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 110)
        (nil)))
(insn 59 58 60 5 (set (reg:DI 5 di)
        (reg/f:DI 91 [ _5 ])) "classes/Obstacle.cpp":25 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ _5 ])
        (nil)))
(call_insn 60 59 61 5 (call (mem:QI (symbol_ref:DI ("_ZN2sf13Transformable9setOriginERKNS_7Vector2IfEE") [flags 0x41]  <function_decl 0x7f7f8d92ec00 setOrigin>) [0 setOrigin S1 A8])
        (const_int 0 [0])) "classes/Obstacle.cpp":25 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 2 [0x2])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       10 (ABNORMAL,ABNORMAL_CALL,EH)
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 94 111 112
(note 61 60 62 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 6 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -376 [0xfffffffffffffe88])) [43 this+0 S8 A64])) "classes/Obstacle.cpp":26 81 {*movdi_internal}
     (nil))
(insn 63 62 64 6 (parallel [
            (set (reg/f:DI 94 [ _8 ])
                (plus:DI (reg/f:DI 111)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Obstacle.cpp":26 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 111)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -376 [0xfffffffffffffe88])) [43 this+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 64 63 65 6 (parallel [
            (set (reg:DI 112)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -384 [0xfffffffffffffe80])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Obstacle.cpp":26 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 65 64 66 6 (set (reg:DI 4 si)
        (reg:DI 112)) "classes/Obstacle.cpp":26 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 112)
        (nil)))
(insn 66 65 67 6 (set (reg:DI 5 di)
        (reg/f:DI 94 [ _8 ])) "classes/Obstacle.cpp":26 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ _8 ])
        (nil)))
(call_insn 67 66 68 6 (call (mem:QI (symbol_ref:DI ("_ZN2sf13Transformable11setPositionERKNS_7Vector2IfEE") [flags 0x41]  <function_decl 0x7f7f8d92e700 setPosition>) [0 setPosition S1 A8])
        (const_int 0 [0])) "classes/Obstacle.cpp":26 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 2 [0x2])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       10 (ABNORMAL,ABNORMAL_CALL,EH)
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 95 113 114 115 116
(note 68 67 69 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 7 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -376 [0xfffffffffffffe88])) [43 this+0 S8 A64])) "classes/Obstacle.cpp":27 81 {*movdi_internal}
     (nil))
(insn 70 69 71 7 (set (reg:DI 114)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -408 [0xfffffffffffffe68])) [16 linkPos+0 S8 A32])) "classes/Obstacle.cpp":27 81 {*movdi_internal}
     (nil))
(insn 71 70 72 7 (set (mem:DI (plus:DI (reg/f:DI 113)
                (const_int 344 [0x158])) [16 this_14(D)->linkPos+0 S8 A64])
        (reg:DI 114)) "classes/Obstacle.cpp":27 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 114)
        (expr_list:REG_DEAD (reg/f:DI 113)
            (nil))))
(insn 72 71 73 7 (set (reg/f:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -376 [0xfffffffffffffe88])) [43 this+0 S8 A64])) "classes/Obstacle.cpp":28 81 {*movdi_internal}
     (nil))
(insn 73 72 74 7 (parallel [
            (set (reg/f:DI 95 [ _9 ])
                (plus:DI (reg/f:DI 115)
                    (const_int 352 [0x160])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Obstacle.cpp":28 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 115)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -376 [0xfffffffffffffe88])) [43 this+0 S8 A64])
                    (const_int 352 [0x160]))
                (nil)))))
(insn 74 73 75 7 (set (reg:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -400 [0xfffffffffffffe70])) [44 link+0 S8 A64])) "classes/Obstacle.cpp":28 81 {*movdi_internal}
     (nil))
(insn 75 74 76 7 (set (reg:DI 4 si)
        (reg:DI 116)) "classes/Obstacle.cpp":28 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 116)
        (nil)))
(insn 76 75 77 7 (set (reg:DI 5 di)
        (reg/f:DI 95 [ _9 ])) "classes/Obstacle.cpp":28 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ _9 ])
        (nil)))
(call_insn 77 76 123 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_") [flags 0x41]  <function_decl 0x7f7f8f13f000 operator=>) [0 operator= S1 A8])
            (const_int 0 [0]))) "classes/Obstacle.cpp":28 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (expr_list:REG_EH_REGION (const_int 2 [0x2])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       10 (ABNORMAL,ABNORMAL_CALL,EH)
;;              8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 123 77 125 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(jump_insn 125 123 126 8 (set (pc)
        (label_ref 124)) "classes/Obstacle.cpp":29 649 {jump}
     (nil)
 -> 124)
;;  succ:       12 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 126 125 119)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       3 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 9 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 117 118 119
(code_label/s 119 126 122 9 33 (nil) [1 uses])
(note 122 119 120 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 120 122 83 9 (set (reg:DI 119)
        (reg:DI 0 ax)) 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 83 120 84 9 (parallel [
            (set (reg:DI 117)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -352 [0xfffffffffffffea0])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Obstacle.cpp":24 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 84 83 85 9 (set (reg:DI 5 di)
        (reg:DI 117)) "classes/Obstacle.cpp":24 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 117)
        (nil)))
(call_insn 85 84 86 9 (call (mem:QI (symbol_ref/i:DI ("_ZN2sf14RectangleShapeD1Ev") [flags 0x3]  <function_decl 0x7f7f8d0f9c00 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) "classes/Obstacle.cpp":24 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 86 85 127 9 (set (reg:DI 118)
        (reg:DI 119)) 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 119)
        (nil)))
(jump_insn 127 86 128 9 (set (pc)
        (label_ref 88)) 649 {jump}
     (nil)
 -> 88)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 118

(barrier 128 127 113)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;;              4 (ABNORMAL,ABNORMAL_CALL,EH)
;;              5 (ABNORMAL,ABNORMAL_CALL,EH)
;;              6 (ABNORMAL,ABNORMAL_CALL,EH)
;;              7 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 10 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 118
(code_label/s 113 128 118 10 32 (nil) [1 uses])
(note 118 113 114 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 114 118 88 10 (set (reg:DI 118)
        (reg:DI 0 ax)) 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 118

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       10 [100.0%]  (FALLTHRU)
;;              9 [100.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 118
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 118
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 96 97 98 122 123
(code_label 88 114 89 11 30 (nil) [1 uses])
(note 89 88 90 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 11 (set (reg/f:DI 122)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -376 [0xfffffffffffffe88])) [43 this+0 S8 A64])) "classes/Obstacle.cpp":23 81 {*movdi_internal}
     (nil))
(insn 91 90 92 11 (parallel [
            (set (reg/f:DI 96 [ _10 ])
                (plus:DI (reg/f:DI 122)
                    (const_int 352 [0x160])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Obstacle.cpp":23 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 122)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -376 [0xfffffffffffffe88])) [43 this+0 S8 A64])
                    (const_int 352 [0x160]))
                (nil)))))
(insn 92 91 93 11 (set (reg:DI 5 di)
        (reg/f:DI 96 [ _10 ])) "classes/Obstacle.cpp":23 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 96 [ _10 ])
        (nil)))
(call_insn 93 92 94 11 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7f7f8f17f700 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) "classes/Obstacle.cpp":23 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 94 93 96 11 (set (reg:DI 123)
        (reg:DI 118)) 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 118)
        (nil)))
(insn 96 94 97 11 (set (reg/f:DI 97 [ _11 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -376 [0xfffffffffffffe88])) [43 this+0 S8 A64])) "classes/Obstacle.cpp":23 81 {*movdi_internal}
     (nil))
(insn 97 96 98 11 (set (reg:DI 5 di)
        (reg/f:DI 97 [ _11 ])) "classes/Obstacle.cpp":23 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 97 [ _11 ])
        (nil)))
(call_insn 98 97 99 11 (call (mem:QI (symbol_ref/i:DI ("_ZN2sf14RectangleShapeD1Ev") [flags 0x3]  <function_decl 0x7f7f8d0f9c00 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) "classes/Obstacle.cpp":23 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 99 98 100 11 (set (reg/f:DI 98 [ D.82377 ])
        (reg:DI 123)) 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 123)
        (nil)))
(insn 100 99 101 11 (set (reg:DI 5 di)
        (reg/f:DI 98 [ D.82377 ])) 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 98 [ D.82377 ])
        (nil)))
(call_insn 101 100 102 11 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f7f904ed100 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 102 101 124)
;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       8 [100.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 124 102 109 12 34 (nil) [1 uses])
(note 109 124 104 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 104 109 105 12 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [5 D.82379+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) "classes/Obstacle.cpp":29 1006 {stack_tls_protect_test_di}
     (nil))
(jump_insn 105 104 111 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 108)
            (pc))) "classes/Obstacle.cpp":29 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 108)
;;  succ:       14
;;              13 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 111 105 106 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(call_insn 106 111 107 13 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f7f8c72b800 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "classes/Obstacle.cpp":29 655 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 107 106 108)
;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 1, flags: (RTL)
;;  pred:       12
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 108 107 112 14 31 (nil) [1 uses])
(note 112 108 0 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function CellDoor::~CellDoor() (_ZN8CellDoorD2Ev, funcdef_no=3261, decl_uid=76761, cgraph_uid=770, symbol_order=774)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 9.
verify found no changes in insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a2(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 15(l0): point = 0
   Insn 12(l0): point = 2
   Insn 11(l0): point = 4
   Insn 10(l0): point = 6
   Insn 9(l0): point = 8
   Insn 8(l0): point = 10
   Insn 7(l0): point = 12
   Insn 6(l0): point = 14
   Insn 2(l0): point = 16
 a0(r88): [5..6]
 a1(r87): [11..12]
 a2(r89): [13..14]
Compressing live ranges: from 19 to 6 - 31%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
 a2(r89): [4..5]
  regions=1, blocks=3, points=6
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    1:r87  l0     0    0:r88  l0     0    2:r89  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


CellDoor::~CellDoor()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={3d} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={3d} r18={2d} r19={2d} r20={1d,5u,1e} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 188{169d,18u,1e} in 9{7 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [43 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "classes/Obstacle.cpp":31 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [43 this+0 S8 A64])) "classes/Obstacle.cpp":31 81 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (parallel [
            (set (reg/f:DI 87 [ _1 ])
                (plus:DI (reg/f:DI 89)
                    (const_int 352 [0x160])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Obstacle.cpp":31 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 89)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [43 this+0 S8 A64])
                    (const_int 352 [0x160]))
                (nil)))))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ _1 ])) "classes/Obstacle.cpp":31 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _1 ])
        (nil)))
(call_insn 9 8 10 2 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev") [flags 0x41]  <function_decl 0x7f7f8f17f700 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) "classes/Obstacle.cpp":31 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 88 [ _2 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [43 this+0 S8 A64])) "classes/Obstacle.cpp":31 81 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg/f:DI 88 [ _2 ])) "classes/Obstacle.cpp":31 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ _2 ])
        (nil)))
(call_insn 12 11 15 2 (call (mem:QI (symbol_ref/i:DI ("_ZN2sf14RectangleShapeD1Ev") [flags 0x3]  <function_decl 0x7f7f8d0f9c00 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) "classes/Obstacle.cpp":31 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 12 0 2 (const_int 0 [0]) "classes/Obstacle.cpp":33 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function Collider CellDoor::getCollider() (_ZN8CellDoor11getColliderEv, funcdef_no=3263, decl_uid=76737, cgraph_uid=772, symbol_order=776)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 4 count 5 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { }
;; 4 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 19.
verify found no changes in insn with uid = 28.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best SIREG, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r89,l0) costs: AREG:8 DREG:8 CREG:8 BREG:8 SIREG:8 DIREG:8 AD_REGS:8 CLOBBERED_REGS:8 Q_REGS:8 NON_Q_REGS:8 TLS_GOTBASE_REGS:8 GENERAL_REGS:8 SSE_FIRST_REG:11 NO_REX_SSE_REGS:28 SSE_REGS:28 MMX_REGS:33 INT_SSE_REGS:29 ALL_REGS:320 MEM:15
  a3(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7

   Insn 31(l0): point = 0
   Insn 28(l0): point = 3
   Insn 27(l0): point = 6
   Insn 26(l0): point = 8
   Insn 25(l0): point = 10
   Insn 19(l0): point = 12
   Insn 18(l0): point = 14
   Insn 17(l0): point = 16
   Insn 16(l0): point = 18
   Insn 15(l0): point = 20
   Insn 14(l0): point = 22
   Insn 13(l0): point = 24
   Insn 12(l0): point = 26
   Insn 11(l0): point = 28
   Insn 10(l0): point = 30
   Insn 9(l0): point = 32
   Insn 8(l0): point = 34
   Insn 5(l0): point = 36
   Insn 3(l0): point = 38
   Insn 2(l0): point = 40
 a0(r90): [15..20]
 a1(r87): [17..24]
 a2(r89): [19..22]
 a3(r88): [29..34]
Compressing live ranges: from 43 to 4 - 9%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r87): [0..1]
 a2(r89): [0..1]
 a3(r88): [2..3]
  regions=1, blocks=5, points=4
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4
Disposition:
    1:r87  l0     1    3:r88  l0     0    2:r89  l0     2    0:r90  l0     0
+++Costs: overall 5, reg 5, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


Collider CellDoor::getCollider()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 22 [xmm1]
;;  ref usage 	r0={5d,2u} r1={4d} r2={4d} r4={5d,2u} r5={6d,3u} r6={1d,4u} r7={1d,7u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,3u} r17={6d,1u} r18={3d} r19={3d} r20={1d,13u} r21={6d,2u} r22={5d,1u} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 291{249d,42u,0e} in 20{17 regular + 3 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [40 .result_ptr+0 S8 A64])
        (reg:DI 5 di [ .result_ptr ])) "classes/Obstacle.cpp":35 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ .result_ptr ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [43 this+0 S8 A64])
        (reg:DI 4 si [ this ])) "classes/Obstacle.cpp":35 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ this ])
        (nil)))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [5 D.82380+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "classes/Obstacle.cpp":35 1002 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 8 5 9 2 (parallel [
            (set (reg:DI 88)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Obstacle.cpp":36 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 9 8 10 2 (set (reg:SF 22 xmm1)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [17  S4 A32])) "classes/Obstacle.cpp":36 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 10 9 11 2 (set (reg:SF 21 xmm0)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [17  S4 A32])) "classes/Obstacle.cpp":36 127 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg:DI 88)) "classes/Obstacle.cpp":36 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(call_insn 12 11 13 2 (call (mem:QI (symbol_ref/i:DI ("_ZN2sf7Vector2IfEC1Eff") [flags 0x3]  <function_decl 0x7f7f8d934f00 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) "classes/Obstacle.cpp":36 655 {*call}
     (expr_list:REG_DEAD (reg:SF 22 xmm1)
        (expr_list:REG_DEAD (reg:SF 21 xmm0)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SF (use (reg:SF 21 xmm0))
            (expr_list:SF (use (reg:SF 22 xmm1))
                (nil)))))
(insn 13 12 14 2 (set (reg/f:DI 87 [ _1 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [43 this+0 S8 A64])) "classes/Obstacle.cpp":36 81 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 89)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [16 D.77201+0 S8 A64])) "classes/Obstacle.cpp":36 81 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [41 <retval>+0 S8 A64])) "classes/Obstacle.cpp":36 81 {*movdi_internal}
     (nil))
(insn 16 15 17 2 (set (reg:DI 21 xmm0)
        (reg:DI 89)) "classes/Obstacle.cpp":36 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(insn 17 16 18 2 (set (reg:DI 4 si)
        (reg/f:DI 87 [ _1 ])) "classes/Obstacle.cpp":36 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _1 ])
        (nil)))
(insn 18 17 19 2 (set (reg:DI 5 di)
        (reg:DI 90)) "classes/Obstacle.cpp":36 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(call_insn 19 18 25 2 (call (mem:QI (symbol_ref:DI ("_ZN8ColliderC1ERN2sf14RectangleShapeENS0_7Vector2IfEE") [flags 0x41]  <function_decl 0x7f7f8cfbfd00 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) "classes/Obstacle.cpp":36 655 {*call}
     (expr_list:REG_DEAD (reg:DI 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 21 xmm0))
                (nil)))))
(insn 25 19 26 2 (set (reg/i:DI 0 ax)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [41 <retval>+0 S8 A64])) "classes/Obstacle.cpp":37 81 {*movdi_internal}
     (nil))
(insn 26 25 27 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [5 D.82380+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) "classes/Obstacle.cpp":37 1006 {stack_tls_protect_test_di}
     (nil))
(jump_insn 27 26 33 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) "classes/Obstacle.cpp":37 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 30)
;;  succ:       4
;;              3 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 33 27 28 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 28 33 29 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f7f8c72b800 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "classes/Obstacle.cpp":37 655 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 29 28 30)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (RTL)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 30 29 34 4 38 (nil) [1 uses])
(note 34 30 31 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 31 34 0 4 (use (reg/i:DI 0 ax)) "classes/Obstacle.cpp":37 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::__cxx11::string CellDoor::getLinkedMap() (_ZN8CellDoor12getLinkedMapB5cxx11Ev, funcdef_no=3264, decl_uid=76739, cgraph_uid=773, symbol_order=777)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best DIREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best SIREG, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a2(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 19(l0): point = 0
   Insn 18(l0): point = 2
   Insn 12(l0): point = 4
   Insn 11(l0): point = 6
   Insn 10(l0): point = 8
   Insn 9(l0): point = 10
   Insn 8(l0): point = 12
   Insn 7(l0): point = 14
   Insn 3(l0): point = 16
   Insn 2(l0): point = 18
 a0(r89): [7..10]
 a1(r87): [9..12]
 a2(r88): [13..14]
Compressing live ranges: from 21 to 4 - 19%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r87): [0..1]
 a2(r88): [2..3]
  regions=1, blocks=3, points=4
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    1:r87  l0     1    2:r88  l0     0    0:r89  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::__cxx11::string CellDoor::getLinkedMap()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d,2u} r1={2d} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={2d} r18={1d} r19={1d} r20={1d,7u,1e} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 121{98d,22u,1e} in 10{9 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [46 .result_ptr+0 S8 A64])
        (reg:DI 5 di [ .result_ptr ])) "classes/Obstacle.cpp":39 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ .result_ptr ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [43 this+0 S8 A64])
        (reg:DI 4 si [ this ])) "classes/Obstacle.cpp":39 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ this ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [43 this+0 S8 A64])) "classes/Obstacle.cpp":40 81 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg/f:DI 87 [ _1 ])
                (plus:DI (reg/f:DI 88)
                    (const_int 352 [0x160])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Obstacle.cpp":40 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 88)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [43 this+0 S8 A64])
                    (const_int 352 [0x160]))
                (nil)))))
(insn 9 8 10 2 (set (reg:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [44 <retval>+0 S8 A64])) "classes/Obstacle.cpp":40 81 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg/f:DI 87 [ _1 ])) "classes/Obstacle.cpp":40 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _1 ])
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg:DI 89)) "classes/Obstacle.cpp":40 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(call_insn 12 11 18 2 (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_") [flags 0x41]  <function_decl 0x7f7f8f17f100 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) "classes/Obstacle.cpp":40 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 18 12 19 2 (set (reg/i:DI 0 ax)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [44 <retval>+0 S8 A64])) "classes/Obstacle.cpp":41 81 {*movdi_internal}
     (nil))
(insn 19 18 0 2 (use (reg/i:DI 0 ax)) "classes/Obstacle.cpp":41 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function sf::Vector2f CellDoor::getLinkedPos() (_ZN8CellDoor12getLinkedPosEv, funcdef_no=3265, decl_uid=76741, cgraph_uid=774, symbol_order=778)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a0 (r88,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:8 DREG:8 CREG:8 BREG:8 SIREG:8 DIREG:8 AD_REGS:8 CLOBBERED_REGS:8 Q_REGS:8 NON_Q_REGS:8 TLS_GOTBASE_REGS:8 GENERAL_REGS:8 SSE_FIRST_REG:25 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:29 INT_SSE_REGS:25 ALL_REGS:316 MEM:12
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 15(l0): point = 0
   Insn 14(l0): point = 2
   Insn 10(l0): point = 4
   Insn 7(l0): point = 6
   Insn 6(l0): point = 8
   Insn 2(l0): point = 10
 a0(r88): [3..4]
 a1(r87): [5..6]
 a2(r89): [7..8]
Compressing live ranges: from 13 to 6 - 46%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
 a2(r89): [4..5]
  pref0:a0(r88)<-hr21@1
  regions=1, blocks=3, points=6
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    1:r87  l0     0    0:r88  l0     0    2:r89  l0     0
+++Costs: overall 7, reg 7, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


sf::Vector2f CellDoor::getLinkedPos()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame] 21 [xmm0]
;;  regs ever live 	 5 [di] 6 [bp] 21 [xmm0]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={2d,2u} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 38{23d,15u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 21 [xmm0] 87 88 89
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [43 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "classes/Obstacle.cpp":43 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [43 this+0 S8 A64])) "classes/Obstacle.cpp":44 81 {*movdi_internal}
     (nil))
(insn 7 6 10 2 (set (reg:DI 87 [ D.82251 ])
        (mem:DI (plus:DI (reg/f:DI 89)
                (const_int 344 [0x158])) [16 this_2(D)->linkPos+0 S8 A64])) "classes/Obstacle.cpp":44 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89)
        (nil)))
(insn 10 7 14 2 (set (reg:DI 88 [ <retval> ])
        (reg:DI 87 [ D.82251 ])) "classes/Obstacle.cpp":44 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87 [ D.82251 ])
        (nil)))
(insn 14 10 15 2 (set (reg/i:DI 21 xmm0)
        (reg:DI 88 [ <retval> ])) "classes/Obstacle.cpp":45 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ <retval> ])
        (nil)))
(insn 15 14 0 2 (use (reg/i:DI 21 xmm0)) "classes/Obstacle.cpp":45 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]


;; Function sf::Sprite::~Sprite() (_ZN2sf6SpriteD2Ev, funcdef_no=3268, decl_uid=76309, cgraph_uid=776, symbol_order=780)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 18.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r89,l0) best DIREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a2(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a4(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a5(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a6(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 21(l0): point = 0
   Insn 18(l0): point = 2
   Insn 17(l0): point = 4
   Insn 16(l0): point = 6
   Insn 15(l0): point = 8
   Insn 14(l0): point = 10
   Insn 13(l0): point = 12
   Insn 12(l0): point = 14
   Insn 11(l0): point = 16
   Insn 10(l0): point = 18
   Insn 9(l0): point = 20
   Insn 8(l0): point = 22
   Insn 7(l0): point = 24
   Insn 6(l0): point = 26
   Insn 2(l0): point = 28
 a0(r90): [5..6]
 a1(r89): [11..12]
 a2(r93): [13..14]
 a3(r92): [17..18]
 a4(r88): [17..20]
 a5(r91): [23..24]
 a6(r87): [23..26]
Compressing live ranges: from 31 to 10 - 32%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r89): [2..3]
 a2(r93): [4..5]
 a3(r92): [6..7]
 a4(r88): [6..7]
 a5(r91): [8..9]
 a6(r87): [8..9]
  regions=1, blocks=3, points=10
    allocnos=7 (big 0), copies=0, conflicts=0, ranges=7
Disposition:
    6:r87  l0     1    4:r88  l0     1    1:r89  l0     0    0:r90  l0     0
    5:r91  l0     0    3:r92  l0     0    2:r93  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


sf::Sprite::~Sprite()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={3d} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={3d} r18={2d} r19={2d} r20={1d,7u,1e} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} 
;;    total ref usage 198{173d,24u,1e} in 15{13 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [47 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "/usr/include/SFML/Graphics/Sprite.hpp":47 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 87 [ _1 ])
        (const:DI (plus:DI (symbol_ref:DI ("_ZTVN2sf6SpriteE") [flags 0x40]  <var_decl 0x7f7f8ce88bd0 _ZTVN2sf6SpriteE>)
                (const_int 16 [0x10])))) "/usr/include/SFML/Graphics/Sprite.hpp":47 81 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [47 this+0 S8 A64])) "/usr/include/SFML/Graphics/Sprite.hpp":47 81 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (mem/f:DI (reg/f:DI 91) [2 this_6(D)->D.76330._vptr.Drawable+0 S8 A64])
        (reg/f:DI 87 [ _1 ])) "/usr/include/SFML/Graphics/Sprite.hpp":47 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (expr_list:REG_DEAD (reg/f:DI 87 [ _1 ])
            (nil))))
(insn 9 8 10 2 (set (reg/f:DI 88 [ _2 ])
        (const:DI (plus:DI (symbol_ref:DI ("_ZTVN2sf6SpriteE") [flags 0x40]  <var_decl 0x7f7f8ce88bd0 _ZTVN2sf6SpriteE>)
                (const_int 56 [0x38])))) "/usr/include/SFML/Graphics/Sprite.hpp":47 81 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [47 this+0 S8 A64])) "/usr/include/SFML/Graphics/Sprite.hpp":47 81 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (mem/f:DI (plus:DI (reg/f:DI 92)
                (const_int 8 [0x8])) [2 this_6(D)->D.76331._vptr.Transformable+0 S8 A64])
        (reg/f:DI 88 [ _2 ])) "/usr/include/SFML/Graphics/Sprite.hpp":47 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92)
        (expr_list:REG_DEAD (reg/f:DI 88 [ _2 ])
            (nil))))
(insn 12 11 13 2 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [47 this+0 S8 A64])) "/usr/include/SFML/Graphics/Sprite.hpp":47 81 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg/f:DI 89 [ _3 ])
                (plus:DI (reg/f:DI 93)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/SFML/Graphics/Sprite.hpp":47 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 93)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [47 this+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg/f:DI 89 [ _3 ])) "/usr/include/SFML/Graphics/Sprite.hpp":47 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ _3 ])
        (nil)))
(call_insn 15 14 16 2 (call (mem:QI (symbol_ref:DI ("_ZN2sf13TransformableD2Ev") [flags 0x41]  <function_decl 0x7f7f8d937800 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) "/usr/include/SFML/Graphics/Sprite.hpp":47 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 16 15 17 2 (set (reg/f:DI 90 [ _4 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [47 this+0 S8 A64])) "/usr/include/SFML/Graphics/Sprite.hpp":47 81 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (reg/f:DI 90 [ _4 ])) "/usr/include/SFML/Graphics/Sprite.hpp":47 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ _4 ])
        (nil)))
(call_insn 18 17 21 2 (call (mem:QI (symbol_ref/i:DI ("_ZN2sf8DrawableD2Ev") [flags 0x3]  <function_decl 0x7f7f8d925f00 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) "/usr/include/SFML/Graphics/Sprite.hpp":47 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 21 18 0 2 (const_int 0 [0]) "/usr/include/SFML/Graphics/Sprite.hpp":47 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function virtual sf::Sprite::~Sprite() (_ZN2sf6SpriteD0Ev, funcdef_no=3270, decl_uid=76303, cgraph_uid=778, symbol_order=782)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 12(l0): point = 0
   Insn 11(l0): point = 2
   Insn 10(l0): point = 4
   Insn 9(l0): point = 6
   Insn 8(l0): point = 8
   Insn 7(l0): point = 10
   Insn 6(l0): point = 12
   Insn 2(l0): point = 14
 a0(r88): [3..6]
 a1(r87): [11..12]
Compressing live ranges: from 17 to 4 - 23%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     0    0:r88  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


virtual sf::Sprite::~Sprite()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={4d,1u} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,5u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 186{168d,18u,0e} in 8{6 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [47 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "/usr/include/SFML/Graphics/Sprite.hpp":47 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [47 this+0 S8 A64])) "/usr/include/SFML/Graphics/Sprite.hpp":47 81 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 87)) "/usr/include/SFML/Graphics/Sprite.hpp":47 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(call_insn 8 7 9 2 (call (mem:QI (symbol_ref/i:DI ("_ZN2sf6SpriteD1Ev") [flags 0x3]  <function_decl 0x7f7f8cfaba00 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) "/usr/include/SFML/Graphics/Sprite.hpp":47 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [47 this+0 S8 A64])) "/usr/include/SFML/Graphics/Sprite.hpp":47 81 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (const_int 288 [0x120])) "/usr/include/SFML/Graphics/Sprite.hpp":47 81 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg:DI 88)) "/usr/include/SFML/Graphics/Sprite.hpp":47 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(call_insn 12 11 0 2 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f7f904f2100 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/SFML/Graphics/Sprite.hpp":47 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function AnimatedTerrain::AnimatedTerrain(Animation&) (_ZN15AnimatedTerrainC2ER9Animation, funcdef_no=3271, decl_uid=76784, cgraph_uid=784, symbol_order=788)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 13 n_edges 17 count 13 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12
;; 2 succs { 9 3 }
;; 3 succs { 9 4 }
;; 4 succs { 9 5 }
;; 5 succs { 9 6 }
;; 6 succs { 9 7 }
;; 7 succs { 9 8 }
;; 8 succs { 10 }
;; 9 succs { }
;; 10 succs { 12 11 }
;; 11 succs { }
;; 12 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 29.
verify found no changes in insn with uid = 38.
verify found no changes in insn with uid = 43.
verify found no changes in insn with uid = 51.
verify found no changes in insn with uid = 57.
verify found no changes in insn with uid = 65.
verify found no changes in insn with uid = 73.
verify found no changes in insn with uid = 76.
verify found no changes in insn with uid = 81.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r116: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r116,l0) best AREG, allocno GENERAL_REGS
    r115: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r115,l0) best SIREG, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a6 (r113,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r112: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r112,l0) best DIREG, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r110,l0) best SIREG, allocno GENERAL_REGS
    r109: preferred INT_SSE_REGS, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a11 (r109,l0) best INT_SSE_REGS, allocno INT_SSE_REGS
    r108: preferred AD_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r108,l0) best AD_REGS, allocno GENERAL_REGS
    r107: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r107,l0) best DIREG, allocno GENERAL_REGS
    r106: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r106,l0) best SIREG, allocno GENERAL_REGS
    r105: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a17 (r105,l0) best DIREG, allocno GENERAL_REGS
    r104: preferred INT_SSE_REGS, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a19 (r104,l0) best INT_SSE_REGS, allocno INT_SSE_REGS
    r103: preferred INT_SSE_REGS, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a21 (r103,l0) best INT_SSE_REGS, allocno INT_SSE_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r96,l0) best DIREG, allocno GENERAL_REGS
    r95: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r95,l0) best AREG, allocno GENERAL_REGS
    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r94,l0) best DIREG, allocno GENERAL_REGS
    r93: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r93,l0) best DIREG, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r92,l0) best DIREG, allocno GENERAL_REGS
    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a29 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a4(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a5(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a6(r113,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 SSE_FIRST_REG:17 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a7(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a8(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a9(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a10(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a11(r109,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 INT_SSE_REGS:25 MEM:9
  a12(r108,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 INT_SSE_REGS:25 MEM:8
  a13(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a14(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a15(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a16(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a17(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a18(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:28 NO_REX_SSE_REGS:28 SSE_REGS:28 MMX_REGS:38 INT_SSE_REGS:30 ALL_REGS:520 MEM:12
  a19(r104,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 INT_SSE_REGS:33 MEM:16
  a20(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:28 NO_REX_SSE_REGS:28 SSE_REGS:28 MMX_REGS:38 INT_SSE_REGS:30 ALL_REGS:520 MEM:12
  a21(r103,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 INT_SSE_REGS:33 MEM:16
  a22(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a23(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a24(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a25(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a26(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a27(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a28(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a29(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 81(l0): point = 1
   Insn 80(l0): point = 4
   Insn 79(l0): point = 6
   Insn 76(l0): point = 9
   Insn 75(l0): point = 11
   Insn 74(l0): point = 13
   Insn 73(l0): point = 15
   Insn 72(l0): point = 17
   Insn 71(l0): point = 19
   Insn 91(l0): point = 21
   Insn 95(l0): point = 24
   Insn 65(l0): point = 27
   Insn 64(l0): point = 29
   Insn 63(l0): point = 31
   Insn 62(l0): point = 33
   Insn 60(l0): point = 35
   Insn 59(l0): point = 37
   Insn 58(l0): point = 39
   Insn 57(l0): point = 42
   Insn 56(l0): point = 44
   Insn 55(l0): point = 46
   Insn 54(l0): point = 48
   Insn 53(l0): point = 50
   Insn 51(l0): point = 53
   Insn 50(l0): point = 55
   Insn 49(l0): point = 57
   Insn 48(l0): point = 59
   Insn 46(l0): point = 61
   Insn 45(l0): point = 63
   Insn 44(l0): point = 65
   Insn 43(l0): point = 68
   Insn 42(l0): point = 70
   Insn 41(l0): point = 72
   Insn 40(l0): point = 74
   Insn 38(l0): point = 77
   Insn 37(l0): point = 79
   Insn 36(l0): point = 81
   Insn 35(l0): point = 83
   Insn 34(l0): point = 85
   Insn 33(l0): point = 87
   Insn 32(l0): point = 89
   Insn 30(l0): point = 91
   Insn 29(l0): point = 94
   Insn 28(l0): point = 96
   Insn 27(l0): point = 98
   Insn 26(l0): point = 100
   Insn 25(l0): point = 102
   Insn 24(l0): point = 104
   Insn 23(l0): point = 106
   Insn 22(l0): point = 108
   Insn 21(l0): point = 110
   Insn 20(l0): point = 112
   Insn 19(l0): point = 114
   Insn 18(l0): point = 116
   Insn 17(l0): point = 118
   Insn 16(l0): point = 120
   Insn 15(l0): point = 122
   Insn 14(l0): point = 124
   Insn 13(l0): point = 126
   Insn 12(l0): point = 128
   Insn 11(l0): point = 130
   Insn 10(l0): point = 132
   Insn 9(l0): point = 134
   Insn 8(l0): point = 136
   Insn 5(l0): point = 138
   Insn 3(l0): point = 140
   Insn 2(l0): point = 142
 a0(r96): [12..13]
 a1(r116): [14..21]
 a2(r94): [18..19]
 a3(r93): [30..48]
 a4(r115): [32..33]
 a5(r114): [36..37]
 a6(r113): [38..39]
 a7(r112): [45..46]
 a8(r111): [49..50]
 a9(r92): [56..74]
 a10(r110): [58..59]
 a11(r109 [0]): [62..63]
 a11(r109 [1]): [62..63]
 a12(r108 [0]): [64..65]
 a12(r108 [1]): [64..65]
 a13(r107): [71..72]
 a14(r91): [80..87]
 a15(r106): [82..85]
 a16(r95): [90..91]
 a17(r105): [97..98]
 a18(r90): [101..110]
 a19(r104 [0]): [101..102]
 a19(r104 [1]): [101..102]
 a20(r102): [103..108]
 a21(r103 [0]): [105..106]
 a21(r103 [1]): [105..106]
 a22(r101): [111..112]
 a23(r99): [115..118]
 a24(r100): [115..116]
 a25(r98): [121..122]
 a26(r89): [121..124]
 a27(r97): [127..128]
 a28(r88): [127..130]
 a29(r87): [135..136]
Compressing live ranges: from 145 to 42 - 28%
Ranges after the compression:
 a0(r96): [0..1]
 a1(r116): [2..3]
 a2(r94): [2..3]
 a3(r93): [4..11]
 a4(r115): [4..5]
 a5(r114): [6..7]
 a6(r113): [8..9]
 a7(r112): [10..11]
 a8(r111): [12..13]
 a9(r92): [14..21]
 a10(r110): [14..15]
 a11(r109 [0]): [16..17]
 a11(r109 [1]): [16..17]
 a12(r108 [0]): [18..19]
 a12(r108 [1]): [18..19]
 a13(r107): [20..21]
 a14(r91): [22..23]
 a15(r106): [22..23]
 a16(r95): [24..25]
 a17(r105): [26..27]
 a18(r90): [28..31]
 a19(r104 [0]): [28..29]
 a19(r104 [1]): [28..29]
 a20(r102): [30..31]
 a21(r103 [0]): [30..31]
 a21(r103 [1]): [30..31]
 a22(r101): [32..33]
 a23(r99): [34..35]
 a24(r100): [34..35]
 a25(r98): [36..37]
 a26(r89): [36..37]
 a27(r97): [38..39]
 a28(r88): [38..39]
 a29(r87): [40..41]
  pref0:a6(r113)<-hr21@1
  regions=1, blocks=13, points=42
    allocnos=30 (big 4), copies=0, conflicts=0, ranges=34
Disposition:
   29:r87  l0     0   28:r88  l0     1   26:r89  l0     1   18:r90  l0     2
   14:r91  l0     0    9:r92  l0     3    3:r93  l0     3    2:r94  l0     0
   16:r95  l0     0    0:r96  l0     0   27:r97  l0     0   25:r98  l0     0
   23:r99  l0     0   24:r100 l0     1   22:r101 l0     0   20:r102 l0     4
   21:r103 l0     0   19:r104 l0     0   17:r105 l0     0   15:r106 l0     2
   13:r107 l0     0   12:r108 l0     0   11:r109 l0     0   10:r110 l0     0
    8:r111 l0     0    7:r112 l0     0    6:r113 l0     0    5:r114 l0     0
    4:r115 l0     0    1:r116 l0     3
+++Costs: overall -16, reg -16, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


AnimatedTerrain::AnimatedTerrain(Animation&)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0]
;;  ref usage 	r0={12d,3u} r1={14d,2u} r2={11d} r4={14d,4u} r5={20d,10u} r6={1d,12u} r7={1d,22u} r8={10d} r9={10d} r10={10d} r11={10d} r12={10d} r13={10d} r14={10d} r15={10d} r16={1d,11u} r17={15d,1u} r18={10d} r19={10d} r20={1d,36u,1e} r21={11d,1u} r22={11d} r23={11d} r24={11d} r25={11d} r26={11d} r27={11d} r28={11d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={11d} r38={11d} r39={10d} r40={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} r76={10d} r77={10d} r78={10d} r79={10d} r80={10d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,2u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,2u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} 
;;    total ref usage 925{790d,134u,1e} in 67{57 regular + 10 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 97 98 99 100 101 102 103 104 105
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [51 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "classes/Obstacle.cpp":47 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [52 anim+0 S8 A64])
        (reg:DI 4 si [ anim ])) "classes/Obstacle.cpp":47 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ anim ])
        (nil)))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [5 D.82387+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "classes/Obstacle.cpp":47 1002 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 8 5 9 2 (set (reg/f:DI 87 [ _1 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [51 this+0 S8 A64])) "classes/Obstacle.cpp":47 81 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ _1 ])) "classes/Obstacle.cpp":47 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _1 ])
        (nil)))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:DI ("_ZN2sf6SpriteC2Ev") [flags 0x41]  <function_decl 0x7f7f8cfb0200 __base_ctor >) [0 __base_ctor  S1 A8])
        (const_int 0 [0])) "classes/Obstacle.cpp":47 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 88 [ _2 ])
        (const:DI (plus:DI (symbol_ref/i:DI ("_ZTV15AnimatedTerrain") [flags 0x2]  <var_decl 0x7f7f8cfdd120 _ZTV15AnimatedTerrain>)
                (const_int 16 [0x10])))) "classes/Obstacle.cpp":47 81 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [51 this+0 S8 A64])) "classes/Obstacle.cpp":47 81 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (mem/f:DI (reg/f:DI 97) [2 this_11(D)->D.76796.D.76330._vptr.Drawable+0 S8 A64])
        (reg/f:DI 88 [ _2 ])) "classes/Obstacle.cpp":47 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 97)
        (expr_list:REG_DEAD (reg/f:DI 88 [ _2 ])
            (nil))))
(insn 14 13 15 2 (set (reg/f:DI 89 [ _3 ])
        (const:DI (plus:DI (symbol_ref/i:DI ("_ZTV15AnimatedTerrain") [flags 0x2]  <var_decl 0x7f7f8cfdd120 _ZTV15AnimatedTerrain>)
                (const_int 56 [0x38])))) "classes/Obstacle.cpp":47 81 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [51 this+0 S8 A64])) "classes/Obstacle.cpp":47 81 {*movdi_internal}
     (nil))
(insn 16 15 17 2 (set (mem/f:DI (plus:DI (reg/f:DI 98)
                (const_int 8 [0x8])) [2 this_11(D)->D.76796.D.76331._vptr.Transformable+0 S8 A64])
        (reg/f:DI 89 [ _3 ])) "classes/Obstacle.cpp":47 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 98)
        (expr_list:REG_DEAD (reg/f:DI 89 [ _3 ])
            (nil))))
(insn 17 16 18 2 (set (reg/f:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [51 this+0 S8 A64])) "classes/Obstacle.cpp":47 81 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [52 anim+0 S8 A64])) "classes/Obstacle.cpp":47 81 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (set (mem/f:DI (plus:DI (reg/f:DI 99)
                (const_int 288 [0x120])) [52 this_11(D)->anim+0 S8 A64])
        (reg/f:DI 100)) "classes/Obstacle.cpp":47 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 100)
        (expr_list:REG_DEAD (reg/f:DI 99)
            (nil))))
(insn 20 19 21 2 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [51 this+0 S8 A64])) "classes/Obstacle.cpp":48 81 {*movdi_internal}
     (nil))
(insn 21 20 22 2 (set (reg/f:DI 90 [ _4 ])
        (mem/f:DI (plus:DI (reg/f:DI 101)
                (const_int 288 [0x120])) [52 this_11(D)->anim+0 S8 A64])) "classes/Obstacle.cpp":48 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 101)
        (nil)))
(insn 22 21 23 2 (set (reg/f:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [52 anim+0 S8 A64])) "classes/Obstacle.cpp":48 81 {*movdi_internal}
     (nil))
(insn 23 22 24 2 (set (reg:TI 103)
        (mem:TI (reg/f:DI 102) [54 MEM[(const struct Animation &)anim_16(D)]+0 S16 A64])) "classes/Obstacle.cpp":48 80 {*movti_internal}
     (nil))
(insn 24 23 25 2 (set (mem:TI (reg/f:DI 90 [ _4 ]) [54 *_4+0 S16 A64])
        (reg:TI 103)) "classes/Obstacle.cpp":48 80 {*movti_internal}
     (expr_list:REG_DEAD (reg:TI 103)
        (nil)))
(insn 25 24 26 2 (set (reg:TI 104)
        (mem:TI (plus:DI (reg/f:DI 102)
                (const_int 16 [0x10])) [54 MEM[(const struct Animation &)anim_16(D)]+16 S16 A64])) "classes/Obstacle.cpp":48 80 {*movti_internal}
     (expr_list:REG_DEAD (reg/f:DI 102)
        (nil)))
(insn 26 25 27 2 (set (mem:TI (plus:DI (reg/f:DI 90 [ _4 ])
                (const_int 16 [0x10])) [54 *_4+16 S16 A64])
        (reg:TI 104)) "classes/Obstacle.cpp":48 80 {*movti_internal}
     (expr_list:REG_DEAD (reg:TI 104)
        (expr_list:REG_DEAD (reg/f:DI 90 [ _4 ])
            (nil))))
(insn 27 26 28 2 (set (reg:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [52 anim+0 S8 A64])) "classes/Obstacle.cpp":49 81 {*movdi_internal}
     (nil))
(insn 28 27 29 2 (set (reg:DI 5 di)
        (reg:DI 105)) "classes/Obstacle.cpp":49 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 105)
        (nil)))
(call_insn 29 28 85 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN9Animation8getSheetEv") [flags 0x41]  <function_decl 0x7f7f8cfc4e00 getSheet>) [0 getSheet S1 A8])
            (const_int 0 [0]))) "classes/Obstacle.cpp":49 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 1 [0x1])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       9 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 91 95 106
(note 85 29 30 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 30 85 32 3 (set (reg/f:DI 95 [ _20 ])
        (reg:DI 0 ax)) "classes/Obstacle.cpp":49 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 32 30 33 3 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [50 text+0 S8 A64])
        (reg/f:DI 95 [ _20 ])) "classes/Obstacle.cpp":49 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ _20 ])
        (nil)))
(insn 33 32 34 3 (set (reg/f:DI 91 [ _5 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [51 this+0 S8 A64])) "classes/Obstacle.cpp":50 81 {*movdi_internal}
     (nil))
(insn 34 33 35 3 (set (reg:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [50 text+0 S8 A64])) "classes/Obstacle.cpp":50 81 {*movdi_internal}
     (nil))
(insn 35 34 36 3 (set (reg:SI 1 dx)
        (const_int 0 [0])) "classes/Obstacle.cpp":50 82 {*movsi_internal}
     (nil))
(insn 36 35 37 3 (set (reg:DI 4 si)
        (reg:DI 106)) "classes/Obstacle.cpp":50 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 106)
        (nil)))
(insn 37 36 38 3 (set (reg:DI 5 di)
        (reg/f:DI 91 [ _5 ])) "classes/Obstacle.cpp":50 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ _5 ])
        (nil)))
(call_insn 38 37 39 3 (call (mem:QI (symbol_ref:DI ("_ZN2sf6Sprite10setTextureERKNS_7TextureEb") [flags 0x41]  <function_decl 0x7f7f8cf82d00 setTexture>) [0 setTexture S1 A8])
        (const_int 0 [0])) "classes/Obstacle.cpp":50 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_EH_REGION (const_int 1 [0x1])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
;;  succ:       9 (ABNORMAL,ABNORMAL_CALL,EH)
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 92 107
(note 39 38 40 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 4 (set (reg/f:DI 92 [ _6 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [51 this+0 S8 A64])) "classes/Obstacle.cpp":51 81 {*movdi_internal}
     (nil))
(insn 41 40 42 4 (set (reg:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [52 anim+0 S8 A64])) "classes/Obstacle.cpp":51 81 {*movdi_internal}
     (nil))
(insn 42 41 43 4 (set (reg:DI 5 di)
        (reg:DI 107)) "classes/Obstacle.cpp":51 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 107)
        (nil)))
(call_insn 43 42 86 4 (set (reg:TI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN9Animation14getTextureRectEv") [flags 0x41]  <function_decl 0x7f7f8cfc4f00 getTextureRect>) [0 getTextureRect S1 A8])
            (const_int 0 [0]))) "classes/Obstacle.cpp":51 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 1 [0x1])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       9 (ABNORMAL,ABNORMAL_CALL,EH)
;;              5 (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; lr  use 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 108 109 110
(note 86 43 44 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 44 86 45 5 (set (reg:TI 108)
        (reg:TI 0 ax)) "classes/Obstacle.cpp":51 80 {*movti_internal}
     (expr_list:REG_DEAD (reg:TI 0 ax)
        (nil)))
(insn 45 44 46 5 (set (reg:TI 109)
        (reg:TI 108)) "classes/Obstacle.cpp":51 80 {*movti_internal}
     (expr_list:REG_DEAD (reg:TI 108)
        (nil)))
(insn 46 45 48 5 (set (mem/c:TI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [32 D.77283+0 S16 A64])
        (reg:TI 109)) "classes/Obstacle.cpp":51 80 {*movti_internal}
     (expr_list:REG_DEAD (reg:TI 109)
        (nil)))
(insn 48 46 49 5 (parallel [
            (set (reg:DI 110)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Obstacle.cpp":51 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 49 48 50 5 (set (reg:DI 4 si)
        (reg:DI 110)) "classes/Obstacle.cpp":51 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 110)
        (nil)))
(insn 50 49 51 5 (set (reg:DI 5 di)
        (reg/f:DI 92 [ _6 ])) "classes/Obstacle.cpp":51 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ _6 ])
        (nil)))
(call_insn 51 50 52 5 (call (mem:QI (symbol_ref:DI ("_ZN2sf6Sprite14setTextureRectERKNS_4RectIiEE") [flags 0x41]  <function_decl 0x7f7f8cf82e00 setTextureRect>) [0 setTextureRect S1 A8])
        (const_int 0 [0])) "classes/Obstacle.cpp":51 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 1 [0x1])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       9 (ABNORMAL,ABNORMAL_CALL,EH)
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 93 111 112
(note 52 51 53 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 6 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [51 this+0 S8 A64])) "classes/Obstacle.cpp":52 81 {*movdi_internal}
     (nil))
(insn 54 53 55 6 (parallel [
            (set (reg/f:DI 93 [ _7 ])
                (plus:DI (reg/f:DI 111)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Obstacle.cpp":52 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 111)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -56 [0xffffffffffffffc8])) [51 this+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 55 54 56 6 (set (reg:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [52 anim+0 S8 A64])) "classes/Obstacle.cpp":52 81 {*movdi_internal}
     (nil))
(insn 56 55 57 6 (set (reg:DI 5 di)
        (reg:DI 112)) "classes/Obstacle.cpp":52 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 112)
        (nil)))
(call_insn 57 56 87 6 (set (reg:DI 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("_ZN9Animation9getOriginEv") [flags 0x41]  <function_decl 0x7f7f8cfc9000 getOrigin>) [0 getOrigin S1 A8])
            (const_int 0 [0]))) "classes/Obstacle.cpp":52 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 1 [0x1])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       9 (ABNORMAL,ABNORMAL_CALL,EH)
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 93

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 93
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 93
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 113 114 115
(note 87 57 58 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 58 87 59 7 (set (reg:DI 113)
        (reg:DI 21 xmm0)) "classes/Obstacle.cpp":52 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 21 xmm0)
        (nil)))
(insn 59 58 60 7 (set (reg:DI 114)
        (reg:DI 113)) "classes/Obstacle.cpp":52 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 113)
        (nil)))
(insn 60 59 62 7 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [16 D.77284+0 S8 A64])
        (reg:DI 114)) "classes/Obstacle.cpp":52 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 114)
        (nil)))
(insn 62 60 63 7 (parallel [
            (set (reg:DI 115)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Obstacle.cpp":52 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 63 62 64 7 (set (reg:DI 4 si)
        (reg:DI 115)) "classes/Obstacle.cpp":52 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 115)
        (nil)))
(insn 64 63 65 7 (set (reg:DI 5 di)
        (reg/f:DI 93 [ _7 ])) "classes/Obstacle.cpp":52 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ _7 ])
        (nil)))
(call_insn 65 64 93 7 (call (mem:QI (symbol_ref:DI ("_ZN2sf13Transformable9setOriginERKNS_7Vector2IfEE") [flags 0x41]  <function_decl 0x7f7f8d92ec00 setOrigin>) [0 setOrigin S1 A8])
        (const_int 0 [0])) "classes/Obstacle.cpp":52 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 1 [0x1])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       9 (ABNORMAL,ABNORMAL_CALL,EH)
;;              8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 93 65 95 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(jump_insn 95 93 96 8 (set (pc)
        (label_ref 94)) "classes/Obstacle.cpp":53 649 {jump}
     (nil)
 -> 94)
;;  succ:       10 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 96 95 90)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 (ABNORMAL,ABNORMAL_CALL,EH)
;;              4 (ABNORMAL,ABNORMAL_CALL,EH)
;;              5 (ABNORMAL,ABNORMAL_CALL,EH)
;;              6 (ABNORMAL,ABNORMAL_CALL,EH)
;;              7 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 9 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 94 96 116
(code_label/s 90 96 92 9 48 (nil) [1 uses])
(note 92 90 91 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 91 92 71 9 (set (reg:DI 116)
        (reg:DI 0 ax)) 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 71 91 72 9 (set (reg/f:DI 94 [ _8 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [51 this+0 S8 A64])) "classes/Obstacle.cpp":47 81 {*movdi_internal}
     (nil))
(insn 72 71 73 9 (set (reg:DI 5 di)
        (reg/f:DI 94 [ _8 ])) "classes/Obstacle.cpp":47 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ _8 ])
        (nil)))
(call_insn 73 72 74 9 (call (mem:QI (symbol_ref/i:DI ("_ZN2sf6SpriteD2Ev") [flags 0x3]  <function_decl 0x7f7f8cfabb00 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) "classes/Obstacle.cpp":47 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 74 73 75 9 (set (reg/f:DI 96 [ D.82385 ])
        (reg:DI 116)) 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 116)
        (nil)))
(insn 75 74 76 9 (set (reg:DI 5 di)
        (reg/f:DI 96 [ D.82385 ])) 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 96 [ D.82385 ])
        (nil)))
(call_insn 76 75 77 9 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f7f904ed100 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 77 76 94)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       8 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 94 77 84 10 49 (nil) [1 uses])
(note 84 94 79 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 79 84 80 10 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [5 D.82387+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) "classes/Obstacle.cpp":53 1006 {stack_tls_protect_test_di}
     (nil))
(jump_insn 80 79 88 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) "classes/Obstacle.cpp":53 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 83)
;;  succ:       12
;;              11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 88 80 81 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(call_insn 81 88 82 11 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f7f8c72b800 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "classes/Obstacle.cpp":53 655 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 82 81 83)
;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 1, flags: (RTL)
;;  pred:       10
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 83 82 89 12 47 (nil) [1 uses])
(note 89 83 0 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function AnimatedTerrain::~AnimatedTerrain() (_ZN15AnimatedTerrainD2Ev, funcdef_no=3274, decl_uid=76793, cgraph_uid=787, symbol_order=791)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 14.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best DIREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a2(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a3(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a4(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 17(l0): point = 0
   Insn 14(l0): point = 2
   Insn 13(l0): point = 4
   Insn 12(l0): point = 6
   Insn 11(l0): point = 8
   Insn 10(l0): point = 10
   Insn 9(l0): point = 12
   Insn 8(l0): point = 14
   Insn 7(l0): point = 16
   Insn 6(l0): point = 18
   Insn 2(l0): point = 20
 a0(r89): [5..6]
 a1(r91): [9..10]
 a2(r88): [9..12]
 a3(r90): [15..16]
 a4(r87): [15..18]
Compressing live ranges: from 23 to 6 - 26%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r91): [2..3]
 a2(r88): [2..3]
 a3(r90): [4..5]
 a4(r87): [4..5]
  regions=1, blocks=3, points=6
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    4:r87  l0     1    2:r88  l0     1    0:r89  l0     0    3:r90  l0     0
    1:r91  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


AnimatedTerrain::~AnimatedTerrain()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,6u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 116{97d,19u,0e} in 11{10 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [51 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "classes/Obstacle.cpp":55 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 87 [ _1 ])
        (const:DI (plus:DI (symbol_ref/i:DI ("_ZTV15AnimatedTerrain") [flags 0x2]  <var_decl 0x7f7f8cfdd120 _ZTV15AnimatedTerrain>)
                (const_int 16 [0x10])))) "classes/Obstacle.cpp":55 81 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [51 this+0 S8 A64])) "classes/Obstacle.cpp":55 81 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (mem/f:DI (reg/f:DI 90) [2 this_5(D)->D.76796.D.76330._vptr.Drawable+0 S8 A64])
        (reg/f:DI 87 [ _1 ])) "classes/Obstacle.cpp":55 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90)
        (expr_list:REG_DEAD (reg/f:DI 87 [ _1 ])
            (nil))))
(insn 9 8 10 2 (set (reg/f:DI 88 [ _2 ])
        (const:DI (plus:DI (symbol_ref/i:DI ("_ZTV15AnimatedTerrain") [flags 0x2]  <var_decl 0x7f7f8cfdd120 _ZTV15AnimatedTerrain>)
                (const_int 56 [0x38])))) "classes/Obstacle.cpp":55 81 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [51 this+0 S8 A64])) "classes/Obstacle.cpp":55 81 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (mem/f:DI (plus:DI (reg/f:DI 91)
                (const_int 8 [0x8])) [2 this_5(D)->D.76796.D.76331._vptr.Transformable+0 S8 A64])
        (reg/f:DI 88 [ _2 ])) "classes/Obstacle.cpp":55 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (expr_list:REG_DEAD (reg/f:DI 88 [ _2 ])
            (nil))))
(insn 12 11 13 2 (set (reg/f:DI 89 [ _3 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [51 this+0 S8 A64])) "classes/Obstacle.cpp":55 81 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg/f:DI 89 [ _3 ])) "classes/Obstacle.cpp":55 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ _3 ])
        (nil)))
(call_insn 14 13 17 2 (call (mem:QI (symbol_ref/i:DI ("_ZN2sf6SpriteD2Ev") [flags 0x3]  <function_decl 0x7f7f8cfabb00 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) "classes/Obstacle.cpp":55 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 17 14 0 2 (const_int 0 [0]) "classes/Obstacle.cpp":57 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function virtual AnimatedTerrain::~AnimatedTerrain() (_ZN15AnimatedTerrainD0Ev, funcdef_no=3276, decl_uid=76787, cgraph_uid=791, symbol_order=795)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 12(l0): point = 0
   Insn 11(l0): point = 2
   Insn 10(l0): point = 4
   Insn 9(l0): point = 6
   Insn 8(l0): point = 8
   Insn 7(l0): point = 10
   Insn 6(l0): point = 12
   Insn 2(l0): point = 14
 a0(r88): [3..6]
 a1(r87): [11..12]
Compressing live ranges: from 17 to 4 - 23%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     0    0:r88  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


virtual AnimatedTerrain::~AnimatedTerrain()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={4d,1u} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,5u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 186{168d,18u,0e} in 8{6 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [51 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "classes/Obstacle.cpp":55 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [51 this+0 S8 A64])) "classes/Obstacle.cpp":57 81 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 87)) "classes/Obstacle.cpp":57 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(call_insn 8 7 9 2 (call (mem:QI (symbol_ref:DI ("_ZN15AnimatedTerrainD1Ev") [flags 0x3]  <function_decl 0x7f7f8cfd9a00 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) "classes/Obstacle.cpp":57 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [51 this+0 S8 A64])) "classes/Obstacle.cpp":57 81 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (const_int 296 [0x128])) "classes/Obstacle.cpp":57 81 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg:DI 88)) "classes/Obstacle.cpp":57 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(call_insn 12 11 0 2 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f7f904f2100 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "classes/Obstacle.cpp":57 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void AnimatedTerrain::update() (_ZN15AnimatedTerrain6updateEv, funcdef_no=3277, decl_uid=76775, cgraph_uid=794, symbol_order=798)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 4 count 5 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { }
;; 4 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 24.
verify found no changes in insn with uid = 31.
verify found no changes in insn with uid = 35.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r99: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r99,l0) best SIREG, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a3 (r97,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r94,l0) best SIREG, allocno GENERAL_REGS
    r93: preferred INT_SSE_REGS, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a9 (r93,l0) best INT_SSE_REGS, allocno INT_SSE_REGS
    r92: preferred AD_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r92,l0) best AD_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best DIREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a1(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a2(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a3(r97,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 SSE_FIRST_REG:17 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a4(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a5(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a6(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a7(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a8(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a9(r93,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 INT_SSE_REGS:25 MEM:9
  a10(r92,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 INT_SSE_REGS:25 MEM:8
  a11(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a12(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 35(l0): point = 1
   Insn 34(l0): point = 4
   Insn 33(l0): point = 6
   Insn 41(l0): point = 8
   Insn 31(l0): point = 10
   Insn 30(l0): point = 12
   Insn 29(l0): point = 14
   Insn 28(l0): point = 16
   Insn 27(l0): point = 18
   Insn 26(l0): point = 20
   Insn 25(l0): point = 22
   Insn 24(l0): point = 24
   Insn 23(l0): point = 26
   Insn 22(l0): point = 28
   Insn 21(l0): point = 30
   Insn 20(l0): point = 32
   Insn 19(l0): point = 34
   Insn 18(l0): point = 36
   Insn 17(l0): point = 38
   Insn 16(l0): point = 40
   Insn 15(l0): point = 42
   Insn 14(l0): point = 44
   Insn 13(l0): point = 46
   Insn 12(l0): point = 48
   Insn 11(l0): point = 50
   Insn 10(l0): point = 52
   Insn 9(l0): point = 54
   Insn 8(l0): point = 56
   Insn 7(l0): point = 58
   Insn 4(l0): point = 60
   Insn 2(l0): point = 62
 a0(r89): [13..32]
 a1(r99): [15..16]
 a2(r98): [19..20]
 a3(r97): [21..22]
 a4(r90): [27..28]
 a5(r96): [29..30]
 a6(r95): [33..34]
 a7(r87): [39..58]
 a8(r94): [41..42]
 a9(r93 [0]): [45..46]
 a9(r93 [1]): [45..46]
 a10(r92 [0]): [47..48]
 a10(r92 [1]): [47..48]
 a11(r88): [53..54]
 a12(r91): [55..56]
Compressing live ranges: from 65 to 22 - 33%
Ranges after the compression:
 a0(r89): [0..9]
 a1(r99): [0..1]
 a2(r98): [2..3]
 a3(r97): [4..5]
 a4(r90): [6..7]
 a5(r96): [8..9]
 a6(r95): [10..11]
 a7(r87): [12..21]
 a8(r94): [12..13]
 a9(r93 [0]): [14..15]
 a9(r93 [1]): [14..15]
 a10(r92 [0]): [16..17]
 a10(r92 [1]): [16..17]
 a11(r88): [18..19]
 a12(r91): [20..21]
  pref0:a3(r97)<-hr21@1
  regions=1, blocks=5, points=22
    allocnos=13 (big 2), copies=0, conflicts=0, ranges=15
Disposition:
    7:r87  l0     3   11:r88  l0     0    0:r89  l0     3    4:r90  l0     0
   12:r91  l0     0   10:r92  l0     0    9:r93  l0     0    8:r94  l0     0
    6:r95  l0     0    5:r96  l0     0    3:r97  l0     0    2:r98  l0     0
    1:r99  l0     0
+++Costs: overall -8, reg -8, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void AnimatedTerrain::update()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0]
;;  ref usage 	r0={6d,1u} r1={7d,1u} r2={6d} r4={8d,2u} r5={10d,5u} r6={1d,4u} r7={1d,9u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r16={1d,3u} r17={10d,1u} r18={5d} r19={5d} r20={1d,15u,1e} r21={6d,1u} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={6d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={6d} r38={6d} r39={5d} r40={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} 
;;    total ref usage 460{404d,55u,1e} in 31{26 regular + 5 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93 94 95 96 97 98 99
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [51 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "classes/Obstacle.cpp":59 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [5 D.82391+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "classes/Obstacle.cpp":59 1002 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 7 4 8 2 (set (reg/f:DI 87 [ _1 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [51 this+0 S8 A64])) "classes/Obstacle.cpp":60 81 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [51 this+0 S8 A64])) "classes/Obstacle.cpp":60 81 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 88 [ _2 ])
        (mem/f:DI (plus:DI (reg/f:DI 91)
                (const_int 288 [0x120])) [52 this_5(D)->anim+0 S8 A64])) "classes/Obstacle.cpp":60 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (nil)))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg/f:DI 88 [ _2 ])) "classes/Obstacle.cpp":60 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ _2 ])
        (nil)))
(call_insn 11 10 12 2 (set (reg:TI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN9Animation14getTextureRectEv") [flags 0x41]  <function_decl 0x7f7f8cfc4f00 getTextureRect>) [0 getTextureRect S1 A8])
            (const_int 0 [0]))) "classes/Obstacle.cpp":60 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 12 11 13 2 (set (reg:TI 92)
        (reg:TI 0 ax)) "classes/Obstacle.cpp":60 80 {*movti_internal}
     (expr_list:REG_DEAD (reg:TI 0 ax)
        (nil)))
(insn 13 12 14 2 (set (reg:TI 93)
        (reg:TI 92)) "classes/Obstacle.cpp":60 80 {*movti_internal}
     (expr_list:REG_DEAD (reg:TI 92)
        (nil)))
(insn 14 13 15 2 (set (mem/c:TI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [32 D.77307+0 S16 A64])
        (reg:TI 93)) "classes/Obstacle.cpp":60 80 {*movti_internal}
     (expr_list:REG_DEAD (reg:TI 93)
        (nil)))
(insn 15 14 16 2 (parallel [
            (set (reg:DI 94)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Obstacle.cpp":60 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 16 15 17 2 (set (reg:DI 4 si)
        (reg:DI 94)) "classes/Obstacle.cpp":60 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94)
        (nil)))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ _1 ])) "classes/Obstacle.cpp":60 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _1 ])
        (nil)))
(call_insn 18 17 19 2 (call (mem:QI (symbol_ref:DI ("_ZN2sf6Sprite14setTextureRectERKNS_4RectIiEE") [flags 0x41]  <function_decl 0x7f7f8cf82e00 setTextureRect>) [0 setTextureRect S1 A8])
        (const_int 0 [0])) "classes/Obstacle.cpp":60 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 19 18 20 2 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [51 this+0 S8 A64])) "classes/Obstacle.cpp":61 81 {*movdi_internal}
     (nil))
(insn 20 19 21 2 (parallel [
            (set (reg/f:DI 89 [ _3 ])
                (plus:DI (reg/f:DI 95)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Obstacle.cpp":61 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 95)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [51 this+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 21 20 22 2 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [51 this+0 S8 A64])) "classes/Obstacle.cpp":61 81 {*movdi_internal}
     (nil))
(insn 22 21 23 2 (set (reg/f:DI 90 [ _4 ])
        (mem/f:DI (plus:DI (reg/f:DI 96)
                (const_int 288 [0x120])) [52 this_5(D)->anim+0 S8 A64])) "classes/Obstacle.cpp":61 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 96)
        (nil)))
(insn 23 22 24 2 (set (reg:DI 5 di)
        (reg/f:DI 90 [ _4 ])) "classes/Obstacle.cpp":61 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ _4 ])
        (nil)))
(call_insn 24 23 25 2 (set (reg:DI 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("_ZN9Animation9getOriginEv") [flags 0x41]  <function_decl 0x7f7f8cfc9000 getOrigin>) [0 getOrigin S1 A8])
            (const_int 0 [0]))) "classes/Obstacle.cpp":61 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 25 24 26 2 (set (reg:DI 97)
        (reg:DI 21 xmm0)) "classes/Obstacle.cpp":61 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 21 xmm0)
        (nil)))
(insn 26 25 27 2 (set (reg:DI 98)
        (reg:DI 97)) "classes/Obstacle.cpp":61 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 97)
        (nil)))
(insn 27 26 28 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [16 D.77308+0 S8 A64])
        (reg:DI 98)) "classes/Obstacle.cpp":61 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 98)
        (nil)))
(insn 28 27 29 2 (parallel [
            (set (reg:DI 99)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Obstacle.cpp":61 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 29 28 30 2 (set (reg:DI 4 si)
        (reg:DI 99)) "classes/Obstacle.cpp":61 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 99)
        (nil)))
(insn 30 29 31 2 (set (reg:DI 5 di)
        (reg/f:DI 89 [ _3 ])) "classes/Obstacle.cpp":61 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ _3 ])
        (nil)))
(call_insn 31 30 41 2 (call (mem:QI (symbol_ref:DI ("_ZN2sf13Transformable9setOriginERKNS_7Vector2IfEE") [flags 0x41]  <function_decl 0x7f7f8d92ec00 setOrigin>) [0 setOrigin S1 A8])
        (const_int 0 [0])) "classes/Obstacle.cpp":61 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 41 31 33 2 (const_int 0 [0]) "classes/Obstacle.cpp":62 684 {nop}
     (nil))
(insn 33 41 34 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [5 D.82391+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) "classes/Obstacle.cpp":62 1006 {stack_tls_protect_test_di}
     (nil))
(jump_insn 34 33 39 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) "classes/Obstacle.cpp":62 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 37)
;;  succ:       4
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 39 34 35 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 35 39 36 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f7f8c72b800 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "classes/Obstacle.cpp":62 655 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 36 35 37)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (RTL)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 37 36 40 4 53 (nil) [1 uses])
(note 40 37 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void AnimatedTerrain::draw(sf::RenderWindow&) (_ZN15AnimatedTerrain4drawERN2sf12RenderWindowE, funcdef_no=3278, decl_uid=76778, cgraph_uid=795, symbol_order=799)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 13.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r88,l0) best SIREG, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a1(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 16(l0): point = 0
   Insn 13(l0): point = 2
   Insn 12(l0): point = 4
   Insn 11(l0): point = 6
   Insn 10(l0): point = 8
   Insn 9(l0): point = 10
   Insn 8(l0): point = 12
   Insn 7(l0): point = 14
   Insn 3(l0): point = 16
   Insn 2(l0): point = 18
 a0(r87): [5..12]
 a1(r88): [7..10]
 a2(r89): [13..14]
Compressing live ranges: from 21 to 4 - 19%
Ranges after the compression:
 a0(r87): [0..1]
 a1(r88): [0..1]
 a2(r89): [2..3]
  regions=1, blocks=3, points=4
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    0:r87  l0     2    1:r88  l0     0    2:r89  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void AnimatedTerrain::draw(sf::RenderWindow&)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={2d} r1={3d,1u} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={2d} r18={1d} r19={1d} r20={1d,6u,1e} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 119{98d,20u,1e} in 10{9 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [51 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "classes/Obstacle.cpp":64 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [55 window+0 S8 A64])
        (reg:DI 4 si [ window ])) "classes/Obstacle.cpp":64 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ window ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [55 window+0 S8 A64])) "classes/Obstacle.cpp":65 81 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg/f:DI 87 [ _1 ])
                (plus:DI (reg/f:DI 89)
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) "classes/Obstacle.cpp":65 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 89)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -16 [0xfffffffffffffff0])) [55 window+0 S8 A64])
                    (const_int 48 [0x30]))
                (nil)))))
(insn 9 8 10 2 (set (reg/f:DI 88 [ _2 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [51 this+0 S8 A64])) "classes/Obstacle.cpp":65 81 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 1 dx)
        (symbol_ref:DI ("_ZN2sf12RenderStates7DefaultE") [flags 0x40]  <var_decl 0x7f7f8d917e10 Default>)) "classes/Obstacle.cpp":65 81 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 4 si)
        (reg/f:DI 88 [ _2 ])) "classes/Obstacle.cpp":65 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ _2 ])
        (nil)))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ _1 ])) "classes/Obstacle.cpp":65 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _1 ])
        (nil)))
(call_insn 13 12 16 2 (call (mem:QI (symbol_ref:DI ("_ZN2sf12RenderTarget4drawERKNS_8DrawableERKNS_12RenderStatesE") [flags 0x41]  <function_decl 0x7f7f8d110d00 draw>) [0 draw S1 A8])
        (const_int 0 [0])) "classes/Obstacle.cpp":65 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 16 13 0 2 (const_int 0 [0]) "classes/Obstacle.cpp":66 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function sf::Vector2<T>::Vector2(T, T) [with T = float] (_ZN2sf7Vector2IfEC2Eff, funcdef_no=3540, decl_uid=58339, cgraph_uid=1057, symbol_order=1061)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r90: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a1 (r90,l0) best SSE_REGS, allocno SSE_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a3 (r88,l0) best SSE_REGS, allocno SSE_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a1(r90,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a2(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a3(r88,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12

   Insn 16(l0): point = 0
   Insn 13(l0): point = 2
   Insn 12(l0): point = 4
   Insn 11(l0): point = 6
   Insn 10(l0): point = 8
   Insn 9(l0): point = 10
   Insn 8(l0): point = 12
   Insn 4(l0): point = 14
   Insn 3(l0): point = 16
   Insn 2(l0): point = 18
 a0(r89): [3..6]
 a1(r90): [3..4]
 a2(r87): [9..12]
 a3(r88): [9..10]
Compressing live ranges: from 21 to 4 - 19%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r90): [0..1]
 a2(r87): [2..3]
 a3(r88): [2..3]
  regions=1, blocks=3, points=4
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4
Disposition:
    2:r87  l0     0    3:r88  l0    21    0:r89  l0     0    1:r90  l0    21
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


sf::Vector2<T>::Vector2(T, T) [with T = float]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5 [di] 6 [bp] 21 [xmm0] 22 [xmm1]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,9u} r21={1d,1u} r22={1d,1u} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 44{23d,21u,0e} in 10{10 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1]
;; lr  def 	 87 88 89 90
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [61 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "/usr/include/SFML/System/Vector2.inl":38 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [17 X+0 S4 A32])
        (reg:SF 21 xmm0 [ X ])) "/usr/include/SFML/System/Vector2.inl":38 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [ X ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [17 Y+0 S4 A32])
        (reg:SF 22 xmm1 [ Y ])) "/usr/include/SFML/System/Vector2.inl":38 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 22 xmm1 [ Y ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [61 this+0 S8 A64])) "/usr/include/SFML/System/Vector2.inl":40 81 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:SF 88)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [17 X+0 S4 A32])) "/usr/include/SFML/System/Vector2.inl":40 127 {*movsf_internal}
     (nil))
(insn 10 9 11 2 (set (mem:SF (reg/f:DI 87) [17 this_2(D)->x+0 S4 A32])
        (reg:SF 88)) "/usr/include/SFML/System/Vector2.inl":40 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 88)
        (expr_list:REG_DEAD (reg/f:DI 87)
            (nil))))
(insn 11 10 12 2 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [61 this+0 S8 A64])) "/usr/include/SFML/System/Vector2.inl":40 81 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:SF 90)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [17 Y+0 S4 A32])) "/usr/include/SFML/System/Vector2.inl":40 127 {*movsf_internal}
     (nil))
(insn 13 12 16 2 (set (mem:SF (plus:DI (reg/f:DI 89)
                (const_int 4 [0x4])) [17 this_2(D)->y+0 S4 A32])
        (reg:SF 90)) "/usr/include/SFML/System/Vector2.inl":40 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 90)
        (expr_list:REG_DEAD (reg/f:DI 89)
            (nil))))
(insn 16 13 0 2 (const_int 0 [0]) "/usr/include/SFML/System/Vector2.inl":43 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function static constexpr bool __gnu_cxx::__alloc_traits<_Alloc>::_S_propagate_on_copy_assign() [with _Alloc = std::allocator<sf::Vertex>] (_ZN9__gnu_cxx14__alloc_traitsISaIN2sf6VertexEEE27_S_propagate_on_copy_assignEv, funcdef_no=3543, decl_uid=58699, cgraph_uid=1059, symbol_order=1063)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:4

   Insn 13(l0): point = 0
   Insn 12(l0): point = 2
   Insn 8(l0): point = 4
   Insn 5(l0): point = 6
 a0(r88): [3..4]
 a1(r87): [5..6]
Compressing live ranges: from 9 to 4 - 44%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     0    0:r88  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


static constexpr bool __gnu_cxx::__alloc_traits<_Alloc>::_S_propagate_on_copy_assign() [with _Alloc = std::allocator<sf::Vertex>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 6 [bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 33{22d,11u,0e} in 4{4 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 87 88
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 8 2 (set (reg:QI 87 [ _1 ])
        (const_int 0 [0])) "/usr/include/c++/7/ext/alloc_traits.h":101 84 {*movqi_internal}
     (nil))
(insn 8 5 12 2 (set (reg:QI 88 [ <retval> ])
        (reg:QI 87 [ _1 ])) "/usr/include/c++/7/ext/alloc_traits.h":101 84 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 87 [ _1 ])
        (nil)))
(insn 12 8 13 2 (set (reg/i:QI 0 ax)
        (reg:QI 88 [ <retval> ])) "/usr/include/c++/7/ext/alloc_traits.h":101 84 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 88 [ <retval> ])
        (nil)))
(insn 13 12 0 2 (use (reg/i:QI 0 ax)) "/usr/include/c++/7/ext/alloc_traits.h":101 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function static constexpr bool __gnu_cxx::__alloc_traits<_Alloc>::_S_always_equal() [with _Alloc = std::allocator<sf::Vertex>] (_ZN9__gnu_cxx14__alloc_traitsISaIN2sf6VertexEEE15_S_always_equalEv, funcdef_no=3544, decl_uid=58702, cgraph_uid=1060, symbol_order=1064)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:4

   Insn 13(l0): point = 0
   Insn 12(l0): point = 2
   Insn 8(l0): point = 4
   Insn 5(l0): point = 6
 a0(r88): [3..4]
 a1(r87): [5..6]
Compressing live ranges: from 9 to 4 - 44%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     0    0:r88  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


static constexpr bool __gnu_cxx::__alloc_traits<_Alloc>::_S_always_equal() [with _Alloc = std::allocator<sf::Vertex>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 6 [bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 33{22d,11u,0e} in 4{4 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 87 88
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 8 2 (set (reg:QI 87 [ _1 ])
        (const_int 1 [0x1])) "/usr/include/c++/7/ext/alloc_traits.h":110 84 {*movqi_internal}
     (nil))
(insn 8 5 12 2 (set (reg:QI 88 [ <retval> ])
        (reg:QI 87 [ _1 ])) "/usr/include/c++/7/ext/alloc_traits.h":110 84 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 87 [ _1 ])
        (nil)))
(insn 12 8 13 2 (set (reg/i:QI 0 ax)
        (reg:QI 88 [ <retval> ])) "/usr/include/c++/7/ext/alloc_traits.h":110 84 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 88 [ <retval> ])
        (nil)))
(insn 13 12 0 2 (use (reg/i:QI 0 ax)) "/usr/include/c++/7/ext/alloc_traits.h":110 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const std::vector<_Tp, _Alloc>&) [with _Tp = sf::Vertex; _Alloc = std::allocator<sf::Vertex>] (_ZNSt6vectorIN2sf6VertexESaIS1_EEaSERKS3_, funcdef_no=3542, decl_uid=59107, cgraph_uid=1061, symbol_order=1065)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 18 n_edges 24 count 18 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17
;; 2 succs { 3 17 }
;; 3 succs { 4 11 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 16.
verify found no changes in insn with uid = 24.
verify found no changes in insn with uid = 28.
verify found no changes in insn with uid = 32.
verify found no changes in insn with uid = 50.
verify found no changes in insn with uid = 69.
verify found no changes in insn with uid = 80.
verify found no changes in insn with uid = 84.
verify found no changes in insn with uid = 88.
verify found no changes in insn with uid = 93.
verify found no changes in insn with uid = 98.
verify found no changes in insn with uid = 107.
verify found no changes in insn with uid = 111.
verify found no changes in insn with uid = 119.
verify found no changes in insn with uid = 124.
verify found no changes in insn with uid = 133.
verify found no changes in insn with uid = 152.
verify found no changes in insn with uid = 174.
verify found no changes in insn with uid = 183.
verify found no changes in insn with uid = 187.
verify found no changes in insn with uid = 191.
verify found no changes in insn with uid = 195.
verify found no changes in insn with uid = 199.
verify found no changes in insn with uid = 204.
verify found no changes in insn with uid = 209.
verify found no changes in insn with uid = 220.
verify found no changes in insn with uid = 234.
verify found no changes in insn with uid = 237.
verify found no changes in insn with uid = 247.
verify found no changes in insn with uid = 260.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r212: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r212,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r211: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r211,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r210: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r210,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r209,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r208: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r208,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r207: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r207,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r206,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r205: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r205,l0) best DIREG, allocno GENERAL_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r204,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r203,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r202: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r202,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r199,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r198: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a33 (r198,l0) best DIREG, allocno GENERAL_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r197,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r196,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r195: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a42 (r195,l0) best DIREG, allocno GENERAL_REGS
    r194: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a43 (r194,l0) best DIREG, allocno GENERAL_REGS
    r193: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a44 (r193,l0) best DIREG, allocno GENERAL_REGS
    r192: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a45 (r192,l0) best DIREG, allocno GENERAL_REGS
    r191: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a49 (r191,l0) best DIREG, allocno GENERAL_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r190,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r189,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r188,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r187,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r186,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r185,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r184,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r183,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r182,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r181,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r180,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r177,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r176,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a82 (r175,l0) best DIREG, allocno GENERAL_REGS
    r174: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a83 (r174,l0) best SIREG, allocno GENERAL_REGS
    r173: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a86 (r173,l0) best DIREG, allocno GENERAL_REGS
    r172: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a87 (r172,l0) best DIREG, allocno GENERAL_REGS
    r171: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a90 (r171,l0) best DIREG, allocno GENERAL_REGS
    r170: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a91 (r170,l0) best AREG, allocno GENERAL_REGS
    r169: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a92 (r169,l0) best DIREG, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a103 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a106 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a105 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a107 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a112 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a114 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a115 (r159,l0) best DIREG, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a125 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r157,l0) best AREG, allocno GENERAL_REGS
    r156: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a85 (r156,l0) best AREG, allocno GENERAL_REGS
    r155: preferred AD_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a84 (r155,l0) best AD_REGS, allocno GENERAL_REGS
    r154: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a37 (r154,l0) best AREG, allocno GENERAL_REGS
    r153: preferred AD_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a41 (r153,l0) best AD_REGS, allocno GENERAL_REGS
    r152: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a40 (r152,l0) best AREG, allocno GENERAL_REGS
    r151: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a39 (r151,l0) best AREG, allocno GENERAL_REGS
    r150: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a36 (r150,l0) best AREG, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a81 (r148,l0) best AREG, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a124 (r145,l0) best AREG, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a116 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r140,l0) best DIREG, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a18 (r138,l0) best AREG, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r136,l0) best SIREG, allocno GENERAL_REGS
    r135: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r135,l0) best DREG, allocno GENERAL_REGS
    r134: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r134,l0) best AREG, allocno GENERAL_REGS
    r133: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a23 (r133,l0) best DIREG, allocno GENERAL_REGS
    r132: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a24 (r132,l0) best DIREG, allocno GENERAL_REGS
    r131: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a25 (r131,l0) best SIREG, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a32 (r129,l0) best AREG, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a26 (r127,l0) best DREG, allocno GENERAL_REGS
    r126: preferred AD_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a38 (r126,l0) best AD_REGS, allocno GENERAL_REGS
    r125: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a46 (r125,l0) best DIREG, allocno GENERAL_REGS
    r124: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a48 (r124,l0) best AREG, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a61 (r120,l0) best SIREG, allocno GENERAL_REGS
    r119: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a62 (r119,l0) best DREG, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a60 (r112,l0) best DIREG, allocno GENERAL_REGS
    r111: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a75 (r111,l0) best DIREG, allocno GENERAL_REGS
    r110: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a76 (r110,l0) best SIREG, allocno GENERAL_REGS
    r109: preferred AD_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a77 (r109,l0) best AD_REGS, allocno GENERAL_REGS
    r108: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a80 (r108,l0) best DIREG, allocno GENERAL_REGS
    r107: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a89 (r107,l0) best AREG, allocno GENERAL_REGS
    r106: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a93 (r106,l0) best AREG, allocno GENERAL_REGS
    r105: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a95 (r105,l0) best DIREG, allocno GENERAL_REGS
    r104: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a94 (r104,l0) best AREG, allocno GENERAL_REGS
    r103: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a96 (r103,l0) best DIREG, allocno GENERAL_REGS
    r102: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a101 (r102,l0) best SIREG, allocno GENERAL_REGS
    r101: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a102 (r101,l0) best DREG, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a104 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a108 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a109 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a111 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a110 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a113 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a100 (r94,l0) best DIREG, allocno GENERAL_REGS
    r93: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a117 (r93,l0) best AREG, allocno GENERAL_REGS
    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a118 (r92,l0) best AREG, allocno GENERAL_REGS
    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a120 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a119 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a121 (r89,l0) best DIREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a122 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a123 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r212,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a3(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:13 NO_REX_SSE_REGS:13 SSE_REGS:13 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a4(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a5(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a6(r210,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:66 NO_REX_SSE_REGS:66 SSE_REGS:66 MMX_REGS:94 INT_SSE_REGS:78 ALL_REGS:1448 MEM:20
  a7(r211,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:13 NO_REX_SSE_REGS:13 SSE_REGS:13 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a8(r209,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:38 INT_SSE_REGS:30 ALL_REGS:520 MEM:10
  a9(r208,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a10(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a11(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a12(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a13(r134,l0) costs: AREG:0 DREG:0 CREG:-1 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a14(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a15(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a16(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:66 NO_REX_SSE_REGS:66 SSE_REGS:66 MMX_REGS:94 INT_SSE_REGS:78 ALL_REGS:1448 MEM:20
  a17(r207,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:13 NO_REX_SSE_REGS:13 SSE_REGS:13 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a18(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:34 INT_SSE_REGS:26 ALL_REGS:516 MEM:7
  a19(r205,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a20(r204,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a21(r203,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a22(r202,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a23(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a24(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a25(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a26(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a27(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a28(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a29(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a30(r199,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:66 NO_REX_SSE_REGS:66 SSE_REGS:66 MMX_REGS:94 INT_SSE_REGS:78 ALL_REGS:1448 MEM:20
  a31(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:13 NO_REX_SSE_REGS:13 SSE_REGS:13 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a32(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:34 INT_SSE_REGS:26 ALL_REGS:516 MEM:7
  a33(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a34(r197,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a35(r196,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a36(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a37(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a38(r126,l0) costs: AREG:-1 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a39(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a40(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a41(r153,l0) costs: AREG:-1 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a42(r195,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a43(r194,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a44(r193,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a45(r192,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a46(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a47(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a48(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a49(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a50(r190,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a51(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:13 NO_REX_SSE_REGS:13 SSE_REGS:13 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a52(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a53(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a54(r188,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:66 NO_REX_SSE_REGS:66 SSE_REGS:66 MMX_REGS:94 INT_SSE_REGS:78 ALL_REGS:1448 MEM:20
  a55(r189,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:13 NO_REX_SSE_REGS:13 SSE_REGS:13 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a56(r187,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:38 INT_SSE_REGS:30 ALL_REGS:520 MEM:10
  a57(r186,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a58(r184,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a59(r185,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a60(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a61(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a62(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a63(r183,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a64(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a65(r181,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:13 NO_REX_SSE_REGS:13 SSE_REGS:13 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a66(r182,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a67(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a68(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a69(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a70(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a71(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a72(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a73(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a74(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a75(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a76(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a77(r109,l0) costs: AREG:-1 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a78(r177,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a79(r176,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a80(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a81(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a82(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a83(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a84(r155,l0) costs: AREG:-1 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a85(r156,l0) costs: AREG:0 DREG:0 CREG:-1 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a86(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a87(r172,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a88(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a89(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a90(r171,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a91(r170,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a92(r169,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a93(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a94(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a95(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a96(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a97(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a98(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a99(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a100(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a101(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a102(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a103(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a104(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a105(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:13 NO_REX_SSE_REGS:13 SSE_REGS:13 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a106(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a107(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a108(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a109(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a110(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a111(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a112(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a113(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a114(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a115(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a116(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6
  a117(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:5
  a118(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a119(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a120(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a121(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a122(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:5
  a123(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2
  a124(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:5
  a125(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 285(l0): point = 0
   Insn 284(l0): point = 2
   Insn 280(l0): point = 4
   Insn 277(l0): point = 6
   Insn 274(l0): point = 9
   Insn 273(l0): point = 11
   Insn 272(l0): point = 13
   Insn 271(l0): point = 15
   Insn 270(l0): point = 17
   Insn 269(l0): point = 19
   Insn 268(l0): point = 21
   Insn 267(l0): point = 23
   Insn 266(l0): point = 25
   Insn 265(l0): point = 27
   Insn 264(l0): point = 29
   Insn 263(l0): point = 31
   Insn 260(l0): point = 34
   Insn 259(l0): point = 36
   Insn 258(l0): point = 38
   Insn 257(l0): point = 40
   Insn 256(l0): point = 42
   Insn 255(l0): point = 44
   Insn 254(l0): point = 46
   Insn 253(l0): point = 48
   Insn 252(l0): point = 50
   Insn 251(l0): point = 52
   Insn 250(l0): point = 54
   Insn 249(l0): point = 56
   Insn 248(l0): point = 58
   Insn 247(l0): point = 60
   Insn 246(l0): point = 62
   Insn 245(l0): point = 64
   Insn 244(l0): point = 66
   Insn 243(l0): point = 68
   Insn 242(l0): point = 70
   Insn 241(l0): point = 72
   Insn 240(l0): point = 74
   Insn 239(l0): point = 76
   Insn 238(l0): point = 78
   Insn 237(l0): point = 80
   Insn 236(l0): point = 82
   Insn 235(l0): point = 84
   Insn 234(l0): point = 86
   Insn 233(l0): point = 88
   Insn 232(l0): point = 90
   Insn 231(l0): point = 92
   Insn 230(l0): point = 94
   Insn 229(l0): point = 96
   Insn 228(l0): point = 98
   Insn 227(l0): point = 100
   Insn 226(l0): point = 102
   Insn 225(l0): point = 104
   Insn 224(l0): point = 106
   Insn 223(l0): point = 108
   Insn 222(l0): point = 110
   Insn 221(l0): point = 112
   Insn 220(l0): point = 114
   Insn 219(l0): point = 116
   Insn 218(l0): point = 118
   Insn 217(l0): point = 120
   Insn 216(l0): point = 122
   Insn 215(l0): point = 124
   Insn 214(l0): point = 126
   Insn 291(l0): point = 129
   Insn 209(l0): point = 131
   Insn 208(l0): point = 133
   Insn 207(l0): point = 135
   Insn 206(l0): point = 137
   Insn 205(l0): point = 139
   Insn 204(l0): point = 141
   Insn 203(l0): point = 143
   Insn 202(l0): point = 145
   Insn 201(l0): point = 147
   Insn 200(l0): point = 149
   Insn 199(l0): point = 151
   Insn 198(l0): point = 153
   Insn 197(l0): point = 155
   Insn 196(l0): point = 157
   Insn 195(l0): point = 159
   Insn 194(l0): point = 161
   Insn 193(l0): point = 163
   Insn 192(l0): point = 165
   Insn 191(l0): point = 167
   Insn 190(l0): point = 169
   Insn 189(l0): point = 171
   Insn 188(l0): point = 173
   Insn 187(l0): point = 175
   Insn 186(l0): point = 177
   Insn 185(l0): point = 179
   Insn 184(l0): point = 181
   Insn 183(l0): point = 183
   Insn 182(l0): point = 185
   Insn 181(l0): point = 187
   Insn 179(l0): point = 190
   Insn 178(l0): point = 192
   Insn 177(l0): point = 194
   Insn 176(l0): point = 196
   Insn 175(l0): point = 198
   Insn 174(l0): point = 200
   Insn 173(l0): point = 202
   Insn 172(l0): point = 204
   Insn 289(l0): point = 207
   Insn 167(l0): point = 209
   Insn 166(l0): point = 211
   Insn 165(l0): point = 213
   Insn 164(l0): point = 215
   Insn 163(l0): point = 217
   Insn 162(l0): point = 219
   Insn 161(l0): point = 221
   Insn 160(l0): point = 223
   Insn 159(l0): point = 225
   Insn 158(l0): point = 227
   Insn 157(l0): point = 229
   Insn 156(l0): point = 231
   Insn 155(l0): point = 233
   Insn 154(l0): point = 235
   Insn 153(l0): point = 237
   Insn 152(l0): point = 239
   Insn 151(l0): point = 241
   Insn 150(l0): point = 243
   Insn 149(l0): point = 245
   Insn 148(l0): point = 247
   Insn 147(l0): point = 249
   Insn 146(l0): point = 251
   Insn 145(l0): point = 253
   Insn 144(l0): point = 255
   Insn 143(l0): point = 257
   Insn 142(l0): point = 259
   Insn 141(l0): point = 261
   Insn 140(l0): point = 263
   Insn 139(l0): point = 265
   Insn 138(l0): point = 267
   Insn 137(l0): point = 269
   Insn 136(l0): point = 271
   Insn 135(l0): point = 273
   Insn 134(l0): point = 275
   Insn 133(l0): point = 277
   Insn 132(l0): point = 279
   Insn 131(l0): point = 281
   Insn 130(l0): point = 283
   Insn 129(l0): point = 285
   Insn 128(l0): point = 287
   Insn 127(l0): point = 289
   Insn 126(l0): point = 291
   Insn 125(l0): point = 293
   Insn 124(l0): point = 295
   Insn 123(l0): point = 297
   Insn 122(l0): point = 299
   Insn 121(l0): point = 301
   Insn 120(l0): point = 303
   Insn 119(l0): point = 305
   Insn 118(l0): point = 307
   Insn 117(l0): point = 309
   Insn 116(l0): point = 311
   Insn 115(l0): point = 313
   Insn 114(l0): point = 315
   Insn 113(l0): point = 317
   Insn 112(l0): point = 319
   Insn 111(l0): point = 321
   Insn 110(l0): point = 323
   Insn 109(l0): point = 325
   Insn 108(l0): point = 327
   Insn 107(l0): point = 329
   Insn 106(l0): point = 331
   Insn 105(l0): point = 333
   Insn 103(l0): point = 336
   Insn 102(l0): point = 338
   Insn 101(l0): point = 340
   Insn 100(l0): point = 342
   Insn 99(l0): point = 344
   Insn 98(l0): point = 346
   Insn 97(l0): point = 348
   Insn 96(l0): point = 350
   Insn 95(l0): point = 352
   Insn 94(l0): point = 354
   Insn 93(l0): point = 356
   Insn 92(l0): point = 358
   Insn 91(l0): point = 360
   Insn 88(l0): point = 363
   Insn 87(l0): point = 365
   Insn 86(l0): point = 367
   Insn 85(l0): point = 369
   Insn 84(l0): point = 371
   Insn 83(l0): point = 373
   Insn 82(l0): point = 375
   Insn 81(l0): point = 377
   Insn 80(l0): point = 379
   Insn 79(l0): point = 381
   Insn 78(l0): point = 383
   Insn 75(l0): point = 386
   Insn 74(l0): point = 388
   Insn 73(l0): point = 390
   Insn 72(l0): point = 392
   Insn 71(l0): point = 394
   Insn 70(l0): point = 396
   Insn 69(l0): point = 398
   Insn 68(l0): point = 400
   Insn 67(l0): point = 402
   Insn 66(l0): point = 404
   Insn 65(l0): point = 406
   Insn 64(l0): point = 408
   Insn 63(l0): point = 410
   Insn 62(l0): point = 412
   Insn 61(l0): point = 414
   Insn 60(l0): point = 416
   Insn 59(l0): point = 418
   Insn 58(l0): point = 420
   Insn 57(l0): point = 422
   Insn 56(l0): point = 424
   Insn 55(l0): point = 426
   Insn 54(l0): point = 428
   Insn 53(l0): point = 430
   Insn 52(l0): point = 432
   Insn 51(l0): point = 434
   Insn 50(l0): point = 436
   Insn 49(l0): point = 438
   Insn 48(l0): point = 440
   Insn 46(l0): point = 443
   Insn 45(l0): point = 445
   Insn 42(l0): point = 448
   Insn 287(l0): point = 451
   Insn 37(l0): point = 453
   Insn 35(l0): point = 456
   Insn 34(l0): point = 458
   Insn 33(l0): point = 460
   Insn 32(l0): point = 462
   Insn 31(l0): point = 464
   Insn 30(l0): point = 466
   Insn 29(l0): point = 468
   Insn 28(l0): point = 470
   Insn 27(l0): point = 472
   Insn 26(l0): point = 474
   Insn 25(l0): point = 476
   Insn 24(l0): point = 478
   Insn 23(l0): point = 480
   Insn 22(l0): point = 482
   Insn 20(l0): point = 485
   Insn 19(l0): point = 487
   Insn 18(l0): point = 489
   Insn 17(l0): point = 491
   Insn 16(l0): point = 493
   Insn 14(l0): point = 496
   Insn 13(l0): point = 498
   Insn 12(l0): point = 500
   Insn 11(l0): point = 502
   Insn 9(l0): point = 505
   Insn 8(l0): point = 507
   Insn 7(l0): point = 509
   Insn 3(l0): point = 511
   Insn 2(l0): point = 513
 a0(r157): [3..4]
 a1(r149): [5..6]
 a2(r212): [10..11]
 a3(r143): [10..13]
 a4(r142): [14..15]
 a5(r141): [14..29]
 a6(r210): [20..25] [16..17]
 a7(r211): [18..19]
 a8(r209): [22..27]
 a9(r208): [30..31]
 a10(r140): [37..44]
 a11(r136): [39..70]
 a12(r135): [41..74]
 a13(r134): [43..78]
 a14(r139): [45..46]
 a15(r137): [45..66]
 a16(r206): [51..56] [47..48]
 a17(r207): [49..50]
 a18(r138): [53..58]
 a19(r205): [63..64]
 a20(r204): [67..68]
 a21(r203): [71..72]
 a22(r202): [75..76]
 a23(r133): [83..84]
 a24(r132): [89..94]
 a25(r131): [91..98]
 a26(r127): [93..124]
 a27(r201): [95..96]
 a28(r130): [99..100]
 a29(r128): [99..120]
 a30(r199): [105..110] [101..102]
 a31(r200): [103..104]
 a32(r129): [107..112]
 a33(r198): [117..118]
 a34(r197): [121..122]
 a35(r196): [125..126]
 a36(r150): [134..139]
 a37(r154): [136..173]
 a38(r126): [138..181]
 a39(r151): [144..149]
 a40(r152): [146..157]
 a41(r153): [148..165]
 a42(r195): [154..155]
 a43(r194): [162..163]
 a44(r193): [170..171]
 a45(r192): [178..179]
 a46(r125): [186..187]
 a47(r147): [193..194]
 a48(r124): [197..198]
 a49(r191): [203..204]
 a50(r190): [210..211]
 a51(r123): [210..213]
 a52(r122): [214..215]
 a53(r121): [214..229]
 a54(r188): [220..225] [216..217]
 a55(r189): [218..219]
 a56(r187): [222..227]
 a57(r186): [230..231]
 a58(r184): [234..237]
 a59(r185): [234..235]
 a60(r112): [242..275]
 a61(r120): [244..247]
 a62(r119): [246..251]
 a63(r183): [248..249]
 a64(r118): [252..253]
 a65(r181): [254..255]
 a66(r182): [256..257]
 a67(r180): [256..259]
 a68(r117): [260..261]
 a69(r116): [262..263]
 a70(r114): [262..269]
 a71(r115): [264..265]
 a72(r179): [266..267]
 a73(r113): [270..271]
 a74(r178): [272..273]
 a75(r111): [280..285]
 a76(r110): [282..289]
 a77(r109): [284..293]
 a78(r177): [286..287]
 a79(r176): [290..291]
 a80(r108): [298..299]
 a81(r148): [302..303]
 a82(r175): [308..315]
 a83(r174): [310..317]
 a84(r155): [312..319]
 a85(r156): [314..327]
 a86(r173): [324..325]
 a87(r172): [332..333]
 a88(r146): [339..340]
 a89(r107): [343..344]
 a90(r171): [349..350]
 a91(r170): [353..354]
 a92(r169): [359..360]
 a93(r106): [366..369]
 a94(r104): [368..377]
 a95(r105): [374..375]
 a96(r103): [382..383]
 a97(r168): [387..388]
 a98(r167): [391..392]
 a99(r166): [395..396]
 a100(r94): [401..434]
 a101(r102): [403..406]
 a102(r101): [405..410]
 a103(r165): [407..408]
 a104(r100): [411..412]
 a105(r163): [413..414]
 a106(r164): [415..416]
 a107(r162): [415..418]
 a108(r99): [419..420]
 a109(r98): [421..422]
 a110(r96): [421..428]
 a111(r97): [423..424]
 a112(r161): [425..426]
 a113(r95): [429..430]
 a114(r160): [431..432]
 a115(r159): [439..440]
 a116(r144): [451..453] [446..448]
 a117(r93): [459..460]
 a118(r92): [465..468]
 a119(r90): [467..476]
 a120(r91): [473..474]
 a121(r89): [481..482]
 a122(r88): [488..489]
 a123(r87): [490..491]
 a124(r145): [499..500]
 a125(r158): [508..509]
Compressing live ranges: from 516 to 192 - 37%
Ranges after the compression:
 a0(r157): [0..1]
 a1(r149): [2..3]
 a2(r212): [4..5]
 a3(r143): [4..5]
 a4(r142): [6..7]
 a5(r141): [6..13]
 a6(r210): [12..13] [8..9]
 a7(r211): [10..11]
 a8(r209): [12..13]
 a9(r208): [14..15]
 a10(r140): [16..17]
 a11(r136): [16..29]
 a12(r135): [16..31]
 a13(r134): [16..33]
 a14(r139): [18..19]
 a15(r137): [18..27]
 a16(r206): [24..25] [20..21]
 a17(r207): [22..23]
 a18(r138): [24..25]
 a19(r205): [26..27]
 a20(r204): [28..29]
 a21(r203): [30..31]
 a22(r202): [32..33]
 a23(r133): [34..35]
 a24(r132): [36..37]
 a25(r131): [36..39]
 a26(r127): [36..51]
 a27(r201): [38..39]
 a28(r130): [40..41]
 a29(r128): [40..49]
 a30(r199): [46..47] [42..43]
 a31(r200): [44..45]
 a32(r129): [46..47]
 a33(r198): [48..49]
 a34(r197): [50..51]
 a35(r196): [52..53]
 a36(r150): [54..55]
 a37(r154): [54..63]
 a38(r126): [54..65]
 a39(r151): [56..57]
 a40(r152): [56..59]
 a41(r153): [56..61]
 a42(r195): [58..59]
 a43(r194): [60..61]
 a44(r193): [62..63]
 a45(r192): [64..65]
 a46(r125): [66..67]
 a47(r147): [68..69]
 a48(r124): [70..71]
 a49(r191): [72..73]
 a50(r190): [74..75]
 a51(r123): [74..75]
 a52(r122): [76..77]
 a53(r121): [76..83]
 a54(r188): [82..83] [78..79]
 a55(r189): [80..81]
 a56(r187): [82..83]
 a57(r186): [84..85]
 a58(r184): [86..87]
 a59(r185): [86..87]
 a60(r112): [88..109]
 a61(r120): [88..89]
 a62(r119): [88..91]
 a63(r183): [90..91]
 a64(r118): [92..93]
 a65(r181): [94..95]
 a66(r182): [96..97]
 a67(r180): [96..97]
 a68(r117): [98..99]
 a69(r116): [100..101]
 a70(r114): [100..105]
 a71(r115): [102..103]
 a72(r179): [104..105]
 a73(r113): [106..107]
 a74(r178): [108..109]
 a75(r111): [110..111]
 a76(r110): [110..113]
 a77(r109): [110..115]
 a78(r177): [112..113]
 a79(r176): [114..115]
 a80(r108): [116..117]
 a81(r148): [118..119]
 a82(r175): [120..121]
 a83(r174): [120..121]
 a84(r155): [120..121]
 a85(r156): [120..123]
 a86(r173): [122..123]
 a87(r172): [124..125]
 a88(r146): [126..127]
 a89(r107): [128..129]
 a90(r171): [130..131]
 a91(r170): [132..133]
 a92(r169): [134..135]
 a93(r106): [136..137]
 a94(r104): [136..139]
 a95(r105): [138..139]
 a96(r103): [140..141]
 a97(r168): [142..143]
 a98(r167): [144..145]
 a99(r166): [146..147]
 a100(r94): [148..169]
 a101(r102): [148..149]
 a102(r101): [148..151]
 a103(r165): [150..151]
 a104(r100): [152..153]
 a105(r163): [154..155]
 a106(r164): [156..157]
 a107(r162): [156..157]
 a108(r99): [158..159]
 a109(r98): [160..161]
 a110(r96): [160..165]
 a111(r97): [162..163]
 a112(r161): [164..165]
 a113(r95): [166..167]
 a114(r160): [168..169]
 a115(r159): [170..171]
 a116(r144): [172..175]
 a117(r93): [176..177]
 a118(r92): [178..179]
 a119(r90): [178..181]
 a120(r91): [180..181]
 a121(r89): [182..183]
 a122(r88): [184..185]
 a123(r87): [186..187]
 a124(r145): [188..189]
 a125(r158): [190..191]
  regions=1, blocks=18, points=192
    allocnos=126 (big 0), copies=0, conflicts=0, ranges=130
Disposition:
  123:r87  l0     0  122:r88  l0     0  121:r89  l0     0  119:r90  l0     3
  120:r91  l0     0  118:r92  l0     0  117:r93  l0     0  100:r94  l0     0
  113:r95  l0     1  110:r96  l0     2  111:r97  l0     1  109:r98  l0     1
  108:r99  l0     1  104:r100 l0     1  102:r101 l0     4  101:r102 l0     2
   96:r103 l0     0   94:r104 l0     3   95:r105 l0     0   93:r106 l0     0
   89:r107 l0     0   80:r108 l0     0   77:r109 l0     1   76:r110 l0     2
   75:r111 l0     0   60:r112 l0     0   73:r113 l0     1   70:r114 l0     2
   71:r115 l0     1   69:r116 l0     1   68:r117 l0     1   64:r118 l0     1
   62:r119 l0     4   61:r120 l0     2   53:r121 l0     2   52:r122 l0     0
   51:r123 l0     1   48:r124 l0     0   46:r125 l0     0   38:r126 l0    41
   26:r127 l0     3   29:r128 l0    41   32:r129 l0     1   28:r130 l0     0
   25:r131 l0     2   24:r132 l0     0   23:r133 l0     0   13:r134 l0    43
   12:r135 l0    41   11:r136 l0     3   15:r137 l0    42   18:r138 l0     1
   14:r139 l0     0   10:r140 l0     0    5:r141 l0     2    4:r142 l0     0
    3:r143 l0     1  116:r144 l0     0  124:r145 l0     0   88:r146 l0     0
   47:r147 l0     0   81:r148 l0     0    1:r149 l0     0   36:r150 l0     0
   39:r151 l0     0   40:r152 l0    42   41:r153 l0    43   37:r154 l0     3
   84:r155 l0     1   85:r156 l0     3    0:r157 l0     0  125:r158 l0     0
  115:r159 l0     0  114:r160 l0     1  112:r161 l0     1  107:r162 l0     2
  105:r163 l0     1  106:r164 l0     1  103:r165 l0     1   99:r166 l0     0
   98:r167 l0     0   97:r168 l0     0   92:r169 l0     0   91:r170 l0     0
   90:r171 l0     0   87:r172 l0     0   86:r173 l0     0   83:r174 l0     4
   82:r175 l0     0   79:r176 l0     0   78:r177 l0     0   74:r178 l0     1
   72:r179 l0     1   67:r180 l0     2   65:r181 l0     1   66:r182 l0     1
   63:r183 l0     1   58:r184 l0     0   59:r185 l0     1   57:r186 l0     0
   56:r187 l0     1   54:r188 l0     0   55:r189 l0     0   50:r190 l0     0
   49:r191 l0     0   45:r192 l0     0   44:r193 l0     0   43:r194 l0     0
   42:r195 l0     0   35:r196 l0     0   34:r197 l0     0   33:r198 l0     0
   30:r199 l0     0   31:r200 l0     0   27:r201 l0     0   22:r202 l0     0
   21:r203 l0     0   20:r204 l0     0   19:r205 l0     0   16:r206 l0     0
   17:r207 l0     0    9:r208 l0     0    8:r209 l0     1    6:r210 l0     0
    7:r211 l0     0    2:r212 l0     0
+++Costs: overall -59, reg -59, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const std::vector<_Tp, _Alloc>&) [with _Tp = sf::Vertex; _Alloc = std::allocator<sf::Vertex>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={33d,25u} r1={40d,8u} r2={34d,2u} r4={42d,11u} r5={61d,30u} r6={1d,17u} r7={1d,48u} r8={31d} r9={31d} r10={31d} r11={31d} r12={31d} r13={31d} r14={31d} r15={31d} r16={1d,16u} r17={63d,9u} r18={31d} r19={31d} r20={1d,74u} r21={32d} r22={32d} r23={32d} r24={32d} r25={32d} r26={32d} r27={32d} r28={32d} r29={31d} r30={31d} r31={31d} r32={31d} r33={31d} r34={31d} r35={31d} r36={31d} r37={32d} r38={32d} r39={31d} r40={31d} r45={31d} r46={31d} r47={31d} r48={31d} r49={31d} r50={31d} r51={31d} r52={31d} r53={31d} r54={31d} r55={31d} r56={31d} r57={31d} r58={31d} r59={31d} r60={31d} r61={31d} r62={31d} r63={31d} r64={31d} r65={31d} r66={31d} r67={31d} r68={31d} r69={31d} r70={31d} r71={31d} r72={31d} r73={31d} r74={31d} r75={31d} r76={31d} r77={31d} r78={31d} r79={31d} r80={31d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,2u,1e} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,2u,1e} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={2d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,2u,1e} r188={4d,4u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={4d,4u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={4d,4u} r207={1d,1u} r208={1d,1u} r209={1d,2u,1e} r210={4d,4u} r211={1d,1u} r212={1d,1u} 
;;    total ref usage 2858{2472d,382u,4e} in 250{219 regular + 31 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 158
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [62 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "/usr/include/c++/7/bits/vector.tcc":179 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [63 __x+0 S8 A64])
        (reg:DI 4 si [ __x ])) "/usr/include/c++/7/bits/vector.tcc":179 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __x ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 158)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [63 __x+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":182 81 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 158)
            (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [62 this+0 S8 A64]))) "/usr/include/c++/7/bits/vector.tcc":182 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 158)
        (nil)))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 275)
            (pc))) "/usr/include/c++/7/bits/vector.tcc":182 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 275)
;;  succ:       3 (FALLTHRU)
;;              17
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 145
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 11 10 12 3 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx14__alloc_traitsISaIN2sf6VertexEEE27_S_propagate_on_copy_assignEv") [flags 0x3]  <function_decl 0x7f7f8d964200 _S_propagate_on_copy_assign>) [0 _S_propagate_on_copy_assign S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/vector.tcc":185 666 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 12 11 13 3 (set (reg:QI 145 [ retval.0_69 ])
        (reg:QI 0 ax)) "/usr/include/c++/7/bits/vector.tcc":185 84 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 13 12 14 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 145 [ retval.0_69 ])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/vector.tcc":185 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 145 [ retval.0_69 ])
        (nil)))
(jump_insn 14 13 15 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 89)
            (pc))) "/usr/include/c++/7/bits/vector.tcc":185 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 89)
;;  succ:       4 (FALLTHRU)
;;              11
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(call_insn 16 15 17 4 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx14__alloc_traitsISaIN2sf6VertexEEE15_S_always_equalEv") [flags 0x3]  <function_decl 0x7f7f8d964500 _S_always_equal>) [0 _S_always_equal S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/vector.tcc":187 666 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 17 16 18 4 (set (reg:QI 87 [ _1 ])
        (reg:QI 0 ax)) "/usr/include/c++/7/bits/vector.tcc":187 84 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 18 17 19 4 (parallel [
            (set (reg:QI 88 [ _2 ])
                (xor:QI (reg:QI 87 [ _1 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/vector.tcc":187 424 {*xorqi_1}
     (expr_list:REG_DEAD (reg:QI 87 [ _1 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 19 18 20 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 88 [ _2 ])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/vector.tcc":188 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 88 [ _2 ])
        (nil)))
(jump_insn 20 19 21 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) "/usr/include/c++/7/bits/vector.tcc":188 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 40)
;;  succ:       5 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89 90 91 92 93
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 5 (set (reg/f:DI 89 [ _3 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [63 __x+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":188 81 {*movdi_internal}
     (nil))
(insn 23 22 24 5 (set (reg:DI 5 di)
        (reg/f:DI 89 [ _3 ])) "/usr/include/c++/7/bits/vector.tcc":188 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ _3 ])
        (nil)))
(call_insn 24 23 25 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt12_Vector_baseIN2sf6VertexESaIS1_EE19_M_get_Tp_allocatorEv") [flags 0x3]  <function_decl 0x7f7f8d964800 _M_get_Tp_allocator>) [0 _M_get_Tp_allocator S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/vector.tcc":188 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 25 24 26 5 (set (reg/f:DI 90 [ _4 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/vector.tcc":188 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 26 25 27 5 (set (reg/f:DI 91 [ _5 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":188 81 {*movdi_internal}
     (nil))
(insn 27 26 28 5 (set (reg:DI 5 di)
        (reg/f:DI 91 [ _5 ])) "/usr/include/c++/7/bits/vector.tcc":188 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ _5 ])
        (nil)))
(call_insn 28 27 29 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE19_M_get_Tp_allocatorEv") [flags 0x3]  <function_decl 0x7f7f8d964700 _M_get_Tp_allocator>) [0 _M_get_Tp_allocator S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/vector.tcc":188 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 29 28 30 5 (set (reg/f:DI 92 [ _6 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/vector.tcc":188 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 30 29 31 5 (set (reg:DI 4 si)
        (reg/f:DI 90 [ _4 ])) "/usr/include/c++/7/bits/vector.tcc":188 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ _4 ])
        (nil)))
(insn 31 30 32 5 (set (reg:DI 5 di)
        (reg/f:DI 92 [ _6 ])) "/usr/include/c++/7/bits/vector.tcc":188 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ _6 ])
        (nil)))
(call_insn 32 31 33 5 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZStneIN2sf6VertexEEbRKSaIT_ES5_") [flags 0x3]  <function_decl 0x7f7f8ce0f900 operator!=>) [0 operator!= S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/vector.tcc":188 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 33 32 34 5 (set (reg:QI 93 [ _7 ])
        (reg:QI 0 ax)) "/usr/include/c++/7/bits/vector.tcc":188 84 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 34 33 35 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 93 [ _7 ])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/vector.tcc":188 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 93 [ _7 ])
        (nil)))
(jump_insn 35 34 36 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) "/usr/include/c++/7/bits/vector.tcc":188 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 40)
;;  succ:       6 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 144
(note 36 35 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 287 6 (set (reg:QI 144 [ iftmp.2_58 ])
        (const_int 1 [0x1])) "/usr/include/c++/7/bits/vector.tcc":188 84 {*movqi_internal}
     (nil))
(jump_insn 287 37 288 6 (set (pc)
        (label_ref 43)) "/usr/include/c++/7/bits/vector.tcc":188 649 {jump}
     (nil)
 -> 43)
;;  succ:       8 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 144

(barrier 288 287 40)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       4
;;              5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 144
(code_label 40 288 41 7 63 (nil) [2 uses])
(note 41 40 42 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 7 (set (reg:QI 144 [ iftmp.2_58 ])
        (const_int 0 [0])) "/usr/include/c++/7/bits/vector.tcc":188 84 {*movqi_internal}
     (nil))
;;  succ:       8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 144

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 (FALLTHRU)
;;              6 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 144
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 144
;; lr  def 	 17 [flags]
(code_label 43 42 44 8 64 (nil) [1 uses])
(note 44 43 45 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 144 [ iftmp.2_58 ])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/vector.tcc":187 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 144 [ iftmp.2_58 ])
        (nil)))
(jump_insn 46 45 47 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) "/usr/include/c++/7/bits/vector.tcc":187 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 76)
;;  succ:       9 (FALLTHRU)
;;              10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 94 95 96 97 98 99 100 101 102 159 160 161 162 163 164 165 166 167 168
(note 47 46 48 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 9 (set (reg:DI 159)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":191 81 {*movdi_internal}
     (nil))
(insn 49 48 50 9 (set (reg:DI 5 di)
        (reg:DI 159)) "/usr/include/c++/7/bits/vector.tcc":191 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 159)
        (nil)))
(call_insn 50 49 51 9 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIN2sf6VertexESaIS1_EE5clearEv") [flags 0x3]  <function_decl 0x7f7f8d9a9e00 clear>) [0 clear S1 A8])
        (const_int 0 [0])) "/usr/include/c++/7/bits/vector.tcc":191 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 51 50 52 9 (set (reg/f:DI 94 [ _8 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":192 81 {*movdi_internal}
     (nil))
(insn 52 51 53 9 (set (reg/f:DI 160)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":193 81 {*movdi_internal}
     (nil))
(insn 53 52 54 9 (set (reg/f:DI 95 [ _9 ])
        (mem/f:DI (plus:DI (reg/f:DI 160)
                (const_int 16 [0x10])) [26 this_66(D)->D.59661._M_impl._M_end_of_storage+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":193 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 160)
        (nil)))
(insn 54 53 55 9 (set (reg:DI 96 [ _10 ])
        (reg/f:DI 95 [ _9 ])) "/usr/include/c++/7/bits/vector.tcc":194 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ _9 ])
        (nil)))
(insn 55 54 56 9 (set (reg/f:DI 161)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":194 81 {*movdi_internal}
     (nil))
(insn 56 55 57 9 (set (reg/f:DI 97 [ _11 ])
        (mem/f:DI (reg/f:DI 161) [26 this_66(D)->D.59661._M_impl._M_start+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":194 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 161)
        (nil)))
(insn 57 56 58 9 (set (reg:DI 98 [ _12 ])
        (reg/f:DI 97 [ _11 ])) "/usr/include/c++/7/bits/vector.tcc":194 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 97 [ _11 ])
        (nil)))
(insn 58 57 59 9 (parallel [
            (set (reg:DI 99 [ _13 ])
                (minus:DI (reg:DI 96 [ _10 ])
                    (reg:DI 98 [ _12 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/vector.tcc":194 274 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 98 [ _12 ])
        (expr_list:REG_DEAD (reg:DI 96 [ _10 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 59 58 60 9 (parallel [
            (set (reg:DI 162)
                (ashiftrt:DI (reg:DI 99 [ _13 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/vector.tcc":194 547 {*ashrdi3_1}
     (expr_list:REG_DEAD (reg:DI 99 [ _13 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 60 59 61 9 (set (reg:DI 164)
        (const_int -3689348814741910323 [0xcccccccccccccccd])) "/usr/include/c++/7/bits/vector.tcc":194 81 {*movdi_internal}
     (nil))
(insn 61 60 62 9 (parallel [
            (set (reg:DI 163)
                (mult:DI (reg:DI 162)
                    (reg:DI 164)))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/vector.tcc":194 329 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 164)
        (expr_list:REG_DEAD (reg:DI 162)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 62 61 63 9 (set (reg:DI 100 [ _14 ])
        (reg:DI 163)) "/usr/include/c++/7/bits/vector.tcc":194 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 163)
        (nil)))
(insn 63 62 64 9 (set (reg:DI 101 [ _15 ])
        (reg:DI 100 [ _14 ])) "/usr/include/c++/7/bits/vector.tcc":192 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100 [ _14 ])
        (nil)))
(insn 64 63 65 9 (set (reg/f:DI 165)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":192 81 {*movdi_internal}
     (nil))
(insn 65 64 66 9 (set (reg/f:DI 102 [ _16 ])
        (mem/f:DI (reg/f:DI 165) [26 this_66(D)->D.59661._M_impl._M_start+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":192 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 165)
        (nil)))
(insn 66 65 67 9 (set (reg:DI 1 dx)
        (reg:DI 101 [ _15 ])) "/usr/include/c++/7/bits/vector.tcc":192 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 101 [ _15 ])
        (nil)))
(insn 67 66 68 9 (set (reg:DI 4 si)
        (reg/f:DI 102 [ _16 ])) "/usr/include/c++/7/bits/vector.tcc":192 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 102 [ _16 ])
        (nil)))
(insn 68 67 69 9 (set (reg:DI 5 di)
        (reg/f:DI 94 [ _8 ])) "/usr/include/c++/7/bits/vector.tcc":192 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ _8 ])
        (nil)))
(call_insn 69 68 70 9 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE13_M_deallocateEPS1_m") [flags 0x3]  <function_decl 0x7f7f8d98d000 _M_deallocate>) [0 _M_deallocate S1 A8])
        (const_int 0 [0])) "/usr/include/c++/7/bits/vector.tcc":192 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 70 69 71 9 (set (reg/f:DI 166)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":195 81 {*movdi_internal}
     (nil))
(insn 71 70 72 9 (set (mem/f:DI (reg/f:DI 166) [26 this_66(D)->D.59661._M_impl._M_start+0 S8 A64])
        (const_int 0 [0])) "/usr/include/c++/7/bits/vector.tcc":195 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 166)
        (nil)))
(insn 72 71 73 9 (set (reg/f:DI 167)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":196 81 {*movdi_internal}
     (nil))
(insn 73 72 74 9 (set (mem/f:DI (plus:DI (reg/f:DI 167)
                (const_int 8 [0x8])) [26 this_66(D)->D.59661._M_impl._M_finish+0 S8 A64])
        (const_int 0 [0])) "/usr/include/c++/7/bits/vector.tcc":196 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 167)
        (nil)))
(insn 74 73 75 9 (set (reg/f:DI 168)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":197 81 {*movdi_internal}
     (nil))
(insn 75 74 76 9 (set (mem/f:DI (plus:DI (reg/f:DI 168)
                (const_int 16 [0x10])) [26 this_66(D)->D.59661._M_impl._M_end_of_storage+0 S8 A64])
        (const_int 0 [0])) "/usr/include/c++/7/bits/vector.tcc":197 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 168)
        (nil)))
;;  succ:       10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       8
;;              9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 103 104 105 106
(code_label 76 75 77 10 65 (nil) [1 uses])
(note 77 76 78 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 10 (set (reg/f:DI 103 [ _17 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [63 __x+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":199 81 {*movdi_internal}
     (nil))
(insn 79 78 80 10 (set (reg:DI 5 di)
        (reg/f:DI 103 [ _17 ])) "/usr/include/c++/7/bits/vector.tcc":199 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 103 [ _17 ])
        (nil)))
(call_insn 80 79 81 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt12_Vector_baseIN2sf6VertexESaIS1_EE19_M_get_Tp_allocatorEv") [flags 0x3]  <function_decl 0x7f7f8d964800 _M_get_Tp_allocator>) [0 _M_get_Tp_allocator S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/vector.tcc":199 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 81 80 82 10 (set (reg/f:DI 104 [ _18 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/vector.tcc":199 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 82 81 83 10 (set (reg/f:DI 105 [ _19 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":199 81 {*movdi_internal}
     (nil))
(insn 83 82 84 10 (set (reg:DI 5 di)
        (reg/f:DI 105 [ _19 ])) "/usr/include/c++/7/bits/vector.tcc":199 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 105 [ _19 ])
        (nil)))
(call_insn 84 83 85 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE19_M_get_Tp_allocatorEv") [flags 0x3]  <function_decl 0x7f7f8d964700 _M_get_Tp_allocator>) [0 _M_get_Tp_allocator S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/vector.tcc":199 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 85 84 86 10 (set (reg/f:DI 106 [ _20 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/vector.tcc":199 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 86 85 87 10 (set (reg:DI 4 si)
        (reg/f:DI 104 [ _18 ])) "/usr/include/c++/7/bits/vector.tcc":199 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 104 [ _18 ])
        (nil)))
(insn 87 86 88 10 (set (reg:DI 5 di)
        (reg/f:DI 106 [ _20 ])) "/usr/include/c++/7/bits/vector.tcc":199 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 106 [ _20 ])
        (nil)))
(call_insn 88 87 89 10 (call (mem:QI (symbol_ref/i:DI ("_ZSt15__alloc_on_copyISaIN2sf6VertexEEEvRT_RKS3_") [flags 0x3]  <function_decl 0x7f7f8ce0fc00 __alloc_on_copy>) [0 __alloc_on_copy S1 A8])
        (const_int 0 [0])) "/usr/include/c++/7/bits/vector.tcc":199 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       3
;;              10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 107 146 169 170 171
(code_label 89 88 90 11 62 (nil) [1 uses])
(note 90 89 91 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 11 (set (reg:DI 169)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [63 __x+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":203 81 {*movdi_internal}
     (nil))
(insn 92 91 93 11 (set (reg:DI 5 di)
        (reg:DI 169)) "/usr/include/c++/7/bits/vector.tcc":203 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 169)
        (nil)))
(call_insn 93 92 94 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt6vectorIN2sf6VertexESaIS1_EE4sizeEv") [flags 0x3]  <function_decl 0x7f7f8d9a9700 size>) [0 size S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/vector.tcc":203 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 94 93 95 11 (set (reg:DI 170)
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/vector.tcc":203 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 95 94 96 11 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [4 __xlen+0 S8 A64])
        (reg:DI 170)) "/usr/include/c++/7/bits/vector.tcc":203 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 170)
        (nil)))
(insn 96 95 97 11 (set (reg:DI 171)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":204 81 {*movdi_internal}
     (nil))
(insn 97 96 98 11 (set (reg:DI 5 di)
        (reg:DI 171)) "/usr/include/c++/7/bits/vector.tcc":204 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 171)
        (nil)))
(call_insn 98 97 99 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt6vectorIN2sf6VertexESaIS1_EE8capacityEv") [flags 0x3]  <function_decl 0x7f7f8d9a9c00 capacity>) [0 capacity S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/vector.tcc":204 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 99 98 100 11 (set (reg:DI 107 [ _21 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/vector.tcc":204 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 100 99 101 11 (set (reg:CC 17 flags)
        (compare:CC (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [4 __xlen+0 S8 A64])
            (reg:DI 107 [ _21 ]))) "/usr/include/c++/7/bits/vector.tcc":204 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 107 [ _21 ])
        (nil)))
(insn 101 100 102 11 (set (reg:QI 146 [ retval.3_88 ])
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) "/usr/include/c++/7/bits/vector.tcc":204 613 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil)))
(insn 102 101 103 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 146 [ retval.3_88 ])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/vector.tcc":204 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 146 [ retval.3_88 ])
        (nil)))
(jump_insn 103 102 104 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 170)
            (pc))) "/usr/include/c++/7/bits/vector.tcc":204 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 170)
;;  succ:       12 (FALLTHRU)
;;              13
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 148 155 156 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190
(note 104 103 105 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 12 (set (reg:DI 172)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [63 __x+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":206 81 {*movdi_internal}
     (nil))
(insn 106 105 107 12 (set (reg:DI 5 di)
        (reg:DI 172)) "/usr/include/c++/7/bits/vector.tcc":206 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 172)
        (nil)))
(call_insn 107 106 108 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt6vectorIN2sf6VertexESaIS1_EE3endEv") [flags 0x3]  <function_decl 0x7f7f8d9a1e00 end>) [0 end S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/vector.tcc":206 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 108 107 109 12 (set (reg:DI 156 [ D.82026 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/vector.tcc":206 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 109 108 110 12 (set (reg:DI 173)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [63 __x+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":206 81 {*movdi_internal}
     (nil))
(insn 110 109 111 12 (set (reg:DI 5 di)
        (reg:DI 173)) "/usr/include/c++/7/bits/vector.tcc":206 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 173)
        (nil)))
(call_insn 111 110 112 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt6vectorIN2sf6VertexESaIS1_EE5beginEv") [flags 0x3]  <function_decl 0x7f7f8d9a1c00 begin>) [0 begin S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/vector.tcc":206 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 112 111 113 12 (set (reg:DI 155 [ D.82027 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/vector.tcc":206 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 113 112 114 12 (set (reg:DI 174)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [4 __xlen+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":206 81 {*movdi_internal}
     (nil))
(insn 114 113 115 12 (set (reg:DI 175)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":206 81 {*movdi_internal}
     (nil))
(insn 115 114 116 12 (set (reg:DI 2 cx)
        (reg:DI 156 [ D.82026 ])) "/usr/include/c++/7/bits/vector.tcc":206 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 156 [ D.82026 ])
        (nil)))
(insn 116 115 117 12 (set (reg:DI 1 dx)
        (reg:DI 155 [ D.82027 ])) "/usr/include/c++/7/bits/vector.tcc":206 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 155 [ D.82027 ])
        (nil)))
(insn 117 116 118 12 (set (reg:DI 4 si)
        (reg:DI 174)) "/usr/include/c++/7/bits/vector.tcc":206 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 174)
        (nil)))
(insn 118 117 119 12 (set (reg:DI 5 di)
        (reg:DI 175)) "/usr/include/c++/7/bits/vector.tcc":206 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 175)
        (nil)))
(call_insn 119 118 120 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIN2sf6VertexESaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_mT_SB_") [flags 0x3]  <function_decl 0x7f7f8ce24800 _M_allocate_and_copy>) [0 _M_allocate_and_copy S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/vector.tcc":206 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 120 119 121 12 (set (reg/f:DI 148 [ _106 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/vector.tcc":206 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 121 120 122 12 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [26 __tmp+0 S8 A64])
        (reg/f:DI 148 [ _106 ])) "/usr/include/c++/7/bits/vector.tcc":206 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 148 [ _106 ])
        (nil)))
(insn 122 121 123 12 (set (reg/f:DI 108 [ _22 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":209 81 {*movdi_internal}
     (nil))
(insn 123 122 124 12 (set (reg:DI 5 di)
        (reg/f:DI 108 [ _22 ])) "/usr/include/c++/7/bits/vector.tcc":209 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 108 [ _22 ])
        (nil)))
(call_insn 124 123 125 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE19_M_get_Tp_allocatorEv") [flags 0x3]  <function_decl 0x7f7f8d964700 _M_get_Tp_allocator>) [0 _M_get_Tp_allocator S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/vector.tcc":209 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 125 124 126 12 (set (reg/f:DI 109 [ _23 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/vector.tcc":209 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 126 125 127 12 (set (reg/f:DI 176)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":208 81 {*movdi_internal}
     (nil))
(insn 127 126 128 12 (set (reg/f:DI 110 [ _24 ])
        (mem/f:DI (plus:DI (reg/f:DI 176)
                (const_int 8 [0x8])) [26 this_66(D)->D.59661._M_impl._M_finish+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":208 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 176)
        (nil)))
(insn 128 127 129 12 (set (reg/f:DI 177)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":208 81 {*movdi_internal}
     (nil))
(insn 129 128 130 12 (set (reg/f:DI 111 [ _25 ])
        (mem/f:DI (reg/f:DI 177) [26 this_66(D)->D.59661._M_impl._M_start+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":208 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 177)
        (nil)))
(insn 130 129 131 12 (set (reg:DI 1 dx)
        (reg/f:DI 109 [ _23 ])) "/usr/include/c++/7/bits/vector.tcc":208 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 109 [ _23 ])
        (nil)))
(insn 131 130 132 12 (set (reg:DI 4 si)
        (reg/f:DI 110 [ _24 ])) "/usr/include/c++/7/bits/vector.tcc":208 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 110 [ _24 ])
        (nil)))
(insn 132 131 133 12 (set (reg:DI 5 di)
        (reg/f:DI 111 [ _25 ])) "/usr/include/c++/7/bits/vector.tcc":208 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 111 [ _25 ])
        (nil)))
(call_insn 133 132 134 12 (call (mem:QI (symbol_ref/i:DI ("_ZSt8_DestroyIPN2sf6VertexES1_EvT_S3_RSaIT0_E") [flags 0x3]  <function_decl 0x7f7f8ce24f00 _Destroy>) [0 _Destroy S1 A8])
        (const_int 0 [0])) "/usr/include/c++/7/bits/vector.tcc":208 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 134 133 135 12 (set (reg/f:DI 112 [ _26 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":210 81 {*movdi_internal}
     (nil))
(insn 135 134 136 12 (set (reg/f:DI 178)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":211 81 {*movdi_internal}
     (nil))
(insn 136 135 137 12 (set (reg/f:DI 113 [ _27 ])
        (mem/f:DI (plus:DI (reg/f:DI 178)
                (const_int 16 [0x10])) [26 this_66(D)->D.59661._M_impl._M_end_of_storage+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":211 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 178)
        (nil)))
(insn 137 136 138 12 (set (reg:DI 114 [ _28 ])
        (reg/f:DI 113 [ _27 ])) "/usr/include/c++/7/bits/vector.tcc":212 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 113 [ _27 ])
        (nil)))
(insn 138 137 139 12 (set (reg/f:DI 179)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":212 81 {*movdi_internal}
     (nil))
(insn 139 138 140 12 (set (reg/f:DI 115 [ _29 ])
        (mem/f:DI (reg/f:DI 179) [26 this_66(D)->D.59661._M_impl._M_start+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":212 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 179)
        (nil)))
(insn 140 139 141 12 (set (reg:DI 116 [ _30 ])
        (reg/f:DI 115 [ _29 ])) "/usr/include/c++/7/bits/vector.tcc":212 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 115 [ _29 ])
        (nil)))
(insn 141 140 142 12 (parallel [
            (set (reg:DI 117 [ _31 ])
                (minus:DI (reg:DI 114 [ _28 ])
                    (reg:DI 116 [ _30 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/vector.tcc":212 274 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 116 [ _30 ])
        (expr_list:REG_DEAD (reg:DI 114 [ _28 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 142 141 143 12 (parallel [
            (set (reg:DI 180)
                (ashiftrt:DI (reg:DI 117 [ _31 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/vector.tcc":212 547 {*ashrdi3_1}
     (expr_list:REG_DEAD (reg:DI 117 [ _31 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 143 142 144 12 (set (reg:DI 182)
        (const_int -3689348814741910323 [0xcccccccccccccccd])) "/usr/include/c++/7/bits/vector.tcc":212 81 {*movdi_internal}
     (nil))
(insn 144 143 145 12 (parallel [
            (set (reg:DI 181)
                (mult:DI (reg:DI 180)
                    (reg:DI 182)))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/vector.tcc":212 329 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 182)
        (expr_list:REG_DEAD (reg:DI 180)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 145 144 146 12 (set (reg:DI 118 [ _32 ])
        (reg:DI 181)) "/usr/include/c++/7/bits/vector.tcc":212 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 181)
        (nil)))
(insn 146 145 147 12 (set (reg:DI 119 [ _33 ])
        (reg:DI 118 [ _32 ])) "/usr/include/c++/7/bits/vector.tcc":210 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 118 [ _32 ])
        (nil)))
(insn 147 146 148 12 (set (reg/f:DI 183)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":210 81 {*movdi_internal}
     (nil))
(insn 148 147 149 12 (set (reg/f:DI 120 [ _34 ])
        (mem/f:DI (reg/f:DI 183) [26 this_66(D)->D.59661._M_impl._M_start+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":210 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 183)
        (nil)))
(insn 149 148 150 12 (set (reg:DI 1 dx)
        (reg:DI 119 [ _33 ])) "/usr/include/c++/7/bits/vector.tcc":210 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 119 [ _33 ])
        (nil)))
(insn 150 149 151 12 (set (reg:DI 4 si)
        (reg/f:DI 120 [ _34 ])) "/usr/include/c++/7/bits/vector.tcc":210 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 120 [ _34 ])
        (nil)))
(insn 151 150 152 12 (set (reg:DI 5 di)
        (reg/f:DI 112 [ _26 ])) "/usr/include/c++/7/bits/vector.tcc":210 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 112 [ _26 ])
        (nil)))
(call_insn 152 151 153 12 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE13_M_deallocateEPS1_m") [flags 0x3]  <function_decl 0x7f7f8d98d000 _M_deallocate>) [0 _M_deallocate S1 A8])
        (const_int 0 [0])) "/usr/include/c++/7/bits/vector.tcc":210 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 153 152 154 12 (set (reg/f:DI 184)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":213 81 {*movdi_internal}
     (nil))
(insn 154 153 155 12 (set (reg/f:DI 185)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [26 __tmp+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":213 81 {*movdi_internal}
     (nil))
(insn 155 154 156 12 (set (mem/f:DI (reg/f:DI 184) [26 this_66(D)->D.59661._M_impl._M_start+0 S8 A64])
        (reg/f:DI 185)) "/usr/include/c++/7/bits/vector.tcc":213 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 185)
        (expr_list:REG_DEAD (reg/f:DI 184)
            (nil))))
(insn 156 155 157 12 (set (reg/f:DI 186)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":214 81 {*movdi_internal}
     (nil))
(insn 157 156 158 12 (set (reg/f:DI 121 [ _35 ])
        (mem/f:DI (reg/f:DI 186) [26 this_66(D)->D.59661._M_impl._M_start+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":214 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 186)
        (nil)))
(insn 158 157 159 12 (set (reg:DI 187)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [4 __xlen+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":214 81 {*movdi_internal}
     (nil))
(insn 159 158 160 12 (set (reg:DI 188)
        (reg:DI 187)) "/usr/include/c++/7/bits/vector.tcc":214 81 {*movdi_internal}
     (nil))
(insn 160 159 161 12 (parallel [
            (set (reg:DI 188)
                (ashift:DI (reg:DI 188)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/vector.tcc":214 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 161 160 162 12 (parallel [
            (set (reg:DI 188)
                (plus:DI (reg:DI 188)
                    (reg:DI 187)))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/vector.tcc":214 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 187)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 187)
                    (const_int 5 [0x5]))
                (nil)))))
(insn 162 161 163 12 (parallel [
            (set (reg:DI 189)
                (ashift:DI (reg:DI 188)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/vector.tcc":214 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 188)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 163 162 164 12 (set (reg:DI 188)
        (reg:DI 189)) "/usr/include/c++/7/bits/vector.tcc":214 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 189)
        (nil)))
(insn 164 163 165 12 (set (reg:DI 122 [ _36 ])
        (reg:DI 188)) "/usr/include/c++/7/bits/vector.tcc":214 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 188)
        (nil)))
(insn 165 164 166 12 (parallel [
            (set (reg/f:DI 123 [ _37 ])
                (plus:DI (reg/f:DI 121 [ _35 ])
                    (reg:DI 122 [ _36 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/vector.tcc":214 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 122 [ _36 ])
        (expr_list:REG_DEAD (reg/f:DI 121 [ _35 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 166 165 167 12 (set (reg/f:DI 190)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":214 81 {*movdi_internal}
     (nil))
(insn 167 166 289 12 (set (mem/f:DI (plus:DI (reg/f:DI 190)
                (const_int 16 [0x10])) [26 this_66(D)->D.59661._M_impl._M_end_of_storage+0 S8 A64])
        (reg/f:DI 123 [ _37 ])) "/usr/include/c++/7/bits/vector.tcc":214 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 190)
        (expr_list:REG_DEAD (reg/f:DI 123 [ _37 ])
            (nil))))
(jump_insn 289 167 290 12 (set (pc)
        (label_ref 261)) 649 {jump}
     (nil)
 -> 261)
;;  succ:       16 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 290 289 170)
;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       11
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 124 147 191
(code_label 170 290 171 13 66 (nil) [1 uses])
(note 171 170 172 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 172 171 173 13 (set (reg:DI 191)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":216 81 {*movdi_internal}
     (nil))
(insn 173 172 174 13 (set (reg:DI 5 di)
        (reg:DI 191)) "/usr/include/c++/7/bits/vector.tcc":216 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 191)
        (nil)))
(call_insn 174 173 175 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt6vectorIN2sf6VertexESaIS1_EE4sizeEv") [flags 0x3]  <function_decl 0x7f7f8d9a9700 size>) [0 size S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/vector.tcc":216 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 175 174 176 13 (set (reg:DI 124 [ _38 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/vector.tcc":216 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 176 175 177 13 (set (reg:CC 17 flags)
        (compare:CC (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [4 __xlen+0 S8 A64])
            (reg:DI 124 [ _38 ]))) "/usr/include/c++/7/bits/vector.tcc":216 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 124 [ _38 ])
        (nil)))
(insn 177 176 178 13 (set (reg:QI 147 [ retval.4_90 ])
        (leu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) "/usr/include/c++/7/bits/vector.tcc":216 613 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil)))
(insn 178 177 179 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 147 [ retval.4_90 ])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/vector.tcc":216 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 147 [ retval.4_90 ])
        (nil)))
(jump_insn 179 178 180 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 212)
            (pc))) "/usr/include/c++/7/bits/vector.tcc":216 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 212)
;;  succ:       14 (FALLTHRU)
;;              15
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 125 126 150 151 152 153 154 192 193 194 195
(note 180 179 181 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 181 180 182 14 (set (reg/f:DI 125 [ _39 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":219 81 {*movdi_internal}
     (nil))
(insn 182 181 183 14 (set (reg:DI 5 di)
        (reg/f:DI 125 [ _39 ])) "/usr/include/c++/7/bits/vector.tcc":219 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 125 [ _39 ])
        (nil)))
(call_insn 183 182 184 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE19_M_get_Tp_allocatorEv") [flags 0x3]  <function_decl 0x7f7f8d964700 _M_get_Tp_allocator>) [0 _M_get_Tp_allocator S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/vector.tcc":219 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 184 183 185 14 (set (reg/f:DI 126 [ _40 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/vector.tcc":219 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 185 184 186 14 (set (reg:DI 192)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":218 81 {*movdi_internal}
     (nil))
(insn 186 185 187 14 (set (reg:DI 5 di)
        (reg:DI 192)) "/usr/include/c++/7/bits/vector.tcc":218 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 192)
        (nil)))
(call_insn 187 186 188 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIN2sf6VertexESaIS1_EE3endEv") [flags 0x3]  <function_decl 0x7f7f8d9a1d00 end>) [0 end S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/vector.tcc":218 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 188 187 189 14 (set (reg:DI 154 [ D.82032 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/vector.tcc":218 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 189 188 190 14 (set (reg:DI 193)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":218 81 {*movdi_internal}
     (nil))
(insn 190 189 191 14 (set (reg:DI 5 di)
        (reg:DI 193)) "/usr/include/c++/7/bits/vector.tcc":218 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 193)
        (nil)))
(call_insn 191 190 192 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIN2sf6VertexESaIS1_EE5beginEv") [flags 0x3]  <function_decl 0x7f7f8d9a1b00 begin>) [0 begin S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/vector.tcc":218 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 192 191 193 14 (set (reg:DI 153 [ D.82033 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/vector.tcc":218 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 193 192 194 14 (set (reg:DI 194)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [63 __x+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":218 81 {*movdi_internal}
     (nil))
(insn 194 193 195 14 (set (reg:DI 5 di)
        (reg:DI 194)) "/usr/include/c++/7/bits/vector.tcc":218 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 194)
        (nil)))
(call_insn 195 194 196 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt6vectorIN2sf6VertexESaIS1_EE3endEv") [flags 0x3]  <function_decl 0x7f7f8d9a1e00 end>) [0 end S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/vector.tcc":218 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 196 195 197 14 (set (reg:DI 152 [ D.82034 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/vector.tcc":218 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 197 196 198 14 (set (reg:DI 195)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [63 __x+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":218 81 {*movdi_internal}
     (nil))
(insn 198 197 199 14 (set (reg:DI 5 di)
        (reg:DI 195)) "/usr/include/c++/7/bits/vector.tcc":218 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 195)
        (nil)))
(call_insn 199 198 200 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt6vectorIN2sf6VertexESaIS1_EE5beginEv") [flags 0x3]  <function_decl 0x7f7f8d9a1c00 begin>) [0 begin S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/vector.tcc":218 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 200 199 201 14 (set (reg:DI 151 [ D.82035 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/vector.tcc":218 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 201 200 202 14 (set (reg:DI 1 dx)
        (reg:DI 153 [ D.82033 ])) "/usr/include/c++/7/bits/vector.tcc":218 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 153 [ D.82033 ])
        (nil)))
(insn 202 201 203 14 (set (reg:DI 4 si)
        (reg:DI 152 [ D.82034 ])) "/usr/include/c++/7/bits/vector.tcc":218 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 152 [ D.82034 ])
        (nil)))
(insn 203 202 204 14 (set (reg:DI 5 di)
        (reg:DI 151 [ D.82035 ])) "/usr/include/c++/7/bits/vector.tcc":218 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 151 [ D.82035 ])
        (nil)))
(call_insn 204 203 205 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET0_T_SD_SC_") [flags 0x3]  <function_decl 0x7f7f8ce3bc00 copy>) [0 copy S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/vector.tcc":218 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 205 204 206 14 (set (reg:DI 150 [ D.82036 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/vector.tcc":218 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 206 205 207 14 (set (reg:DI 1 dx)
        (reg/f:DI 126 [ _40 ])) "/usr/include/c++/7/bits/vector.tcc":218 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 126 [ _40 ])
        (nil)))
(insn 207 206 208 14 (set (reg:DI 4 si)
        (reg:DI 154 [ D.82032 ])) "/usr/include/c++/7/bits/vector.tcc":218 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 154 [ D.82032 ])
        (nil)))
(insn 208 207 209 14 (set (reg:DI 5 di)
        (reg:DI 150 [ D.82036 ])) "/usr/include/c++/7/bits/vector.tcc":218 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 150 [ D.82036 ])
        (nil)))
(call_insn 209 208 291 14 (call (mem:QI (symbol_ref/i:DI ("_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN2sf6VertexESt6vectorIS3_SaIS3_EEEES3_EvT_S9_RSaIT0_E") [flags 0x3]  <function_decl 0x7f7f8ce45600 _Destroy>) [0 _Destroy S1 A8])
        (const_int 0 [0])) "/usr/include/c++/7/bits/vector.tcc":218 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 291 209 292 14 (set (pc)
        (label_ref 261)) 649 {jump}
     (nil)
 -> 261)
;;  succ:       16 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 292 291 212)
;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       13
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 127 128 129 130 131 132 133 134 135 136 137 138 139 140 196 197 198 199 200 201 202 203 204 205 206 207
(code_label 212 292 213 15 68 (nil) [1 uses])
(note 213 212 214 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 214 213 215 15 (set (reg/f:DI 196)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":223 81 {*movdi_internal}
     (nil))
(insn 215 214 216 15 (set (reg/f:DI 127 [ _41 ])
        (mem/f:DI (reg/f:DI 196) [26 this_66(D)->D.59661._M_impl._M_start+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":223 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 196)
        (nil)))
(insn 216 215 217 15 (set (reg/f:DI 197)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [63 __x+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":223 81 {*movdi_internal}
     (nil))
(insn 217 216 218 15 (set (reg/f:DI 128 [ _42 ])
        (mem/f:DI (reg/f:DI 197) [26 __x_65(D)->D.59661._M_impl._M_start+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":223 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 197)
        (nil)))
(insn 218 217 219 15 (set (reg:DI 198)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":223 81 {*movdi_internal}
     (nil))
(insn 219 218 220 15 (set (reg:DI 5 di)
        (reg:DI 198)) "/usr/include/c++/7/bits/vector.tcc":223 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 198)
        (nil)))
(call_insn 220 219 221 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt6vectorIN2sf6VertexESaIS1_EE4sizeEv") [flags 0x3]  <function_decl 0x7f7f8d9a9700 size>) [0 size S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/vector.tcc":223 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 221 220 222 15 (set (reg:DI 129 [ _43 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/vector.tcc":223 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 222 221 223 15 (set (reg:DI 199)
        (reg:DI 129 [ _43 ])) "/usr/include/c++/7/bits/vector.tcc":223 81 {*movdi_internal}
     (nil))
(insn 223 222 224 15 (parallel [
            (set (reg:DI 199)
                (ashift:DI (reg:DI 199)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/vector.tcc":223 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 224 223 225 15 (parallel [
            (set (reg:DI 199)
                (plus:DI (reg:DI 199)
                    (reg:DI 129 [ _43 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/vector.tcc":223 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 129 [ _43 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 129 [ _43 ])
                    (const_int 5 [0x5]))
                (nil)))))
(insn 225 224 226 15 (parallel [
            (set (reg:DI 200)
                (ashift:DI (reg:DI 199)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/vector.tcc":223 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 199)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 226 225 227 15 (set (reg:DI 199)
        (reg:DI 200)) "/usr/include/c++/7/bits/vector.tcc":223 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 200)
        (nil)))
(insn 227 226 228 15 (set (reg:DI 130 [ _44 ])
        (reg:DI 199)) "/usr/include/c++/7/bits/vector.tcc":223 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 199)
        (nil)))
(insn 228 227 229 15 (parallel [
            (set (reg/f:DI 131 [ _45 ])
                (plus:DI (reg/f:DI 128 [ _42 ])
                    (reg:DI 130 [ _44 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/vector.tcc":223 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 130 [ _44 ])
        (expr_list:REG_DEAD (reg/f:DI 128 [ _42 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 229 228 230 15 (set (reg/f:DI 201)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [63 __x+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":223 81 {*movdi_internal}
     (nil))
(insn 230 229 231 15 (set (reg/f:DI 132 [ _46 ])
        (mem/f:DI (reg/f:DI 201) [26 __x_65(D)->D.59661._M_impl._M_start+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":223 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 201)
        (nil)))
(insn 231 230 232 15 (set (reg:DI 1 dx)
        (reg/f:DI 127 [ _41 ])) "/usr/include/c++/7/bits/vector.tcc":223 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 127 [ _41 ])
        (nil)))
(insn 232 231 233 15 (set (reg:DI 4 si)
        (reg/f:DI 131 [ _45 ])) "/usr/include/c++/7/bits/vector.tcc":223 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 131 [ _45 ])
        (nil)))
(insn 233 232 234 15 (set (reg:DI 5 di)
        (reg/f:DI 132 [ _46 ])) "/usr/include/c++/7/bits/vector.tcc":223 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 132 [ _46 ])
        (nil)))
(call_insn 234 233 235 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt4copyIPN2sf6VertexES2_ET0_T_S4_S3_") [flags 0x3]  <function_decl 0x7f7f8ce45800 copy>) [0 copy S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/vector.tcc":223 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 235 234 236 15 (set (reg/f:DI 133 [ _47 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":228 81 {*movdi_internal}
     (nil))
(insn 236 235 237 15 (set (reg:DI 5 di)
        (reg/f:DI 133 [ _47 ])) "/usr/include/c++/7/bits/vector.tcc":228 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 133 [ _47 ])
        (nil)))
(call_insn 237 236 238 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE19_M_get_Tp_allocatorEv") [flags 0x3]  <function_decl 0x7f7f8d964700 _M_get_Tp_allocator>) [0 _M_get_Tp_allocator S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/vector.tcc":228 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 238 237 239 15 (set (reg/f:DI 134 [ _48 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/vector.tcc":228 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 239 238 240 15 (set (reg/f:DI 202)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":225 81 {*movdi_internal}
     (nil))
(insn 240 239 241 15 (set (reg/f:DI 135 [ _49 ])
        (mem/f:DI (plus:DI (reg/f:DI 202)
                (const_int 8 [0x8])) [26 this_66(D)->D.59661._M_impl._M_finish+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":225 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 202)
        (nil)))
(insn 241 240 242 15 (set (reg/f:DI 203)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [63 __x+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":226 81 {*movdi_internal}
     (nil))
(insn 242 241 243 15 (set (reg/f:DI 136 [ _50 ])
        (mem/f:DI (plus:DI (reg/f:DI 203)
                (const_int 8 [0x8])) [26 __x_65(D)->D.59661._M_impl._M_finish+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":226 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 203)
        (nil)))
(insn 243 242 244 15 (set (reg/f:DI 204)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [63 __x+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":225 81 {*movdi_internal}
     (nil))
(insn 244 243 245 15 (set (reg/f:DI 137 [ _51 ])
        (mem/f:DI (reg/f:DI 204) [26 __x_65(D)->D.59661._M_impl._M_start+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":225 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 204)
        (nil)))
(insn 245 244 246 15 (set (reg:DI 205)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":225 81 {*movdi_internal}
     (nil))
(insn 246 245 247 15 (set (reg:DI 5 di)
        (reg:DI 205)) "/usr/include/c++/7/bits/vector.tcc":225 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 205)
        (nil)))
(call_insn 247 246 248 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNKSt6vectorIN2sf6VertexESaIS1_EE4sizeEv") [flags 0x3]  <function_decl 0x7f7f8d9a9700 size>) [0 size S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/vector.tcc":225 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 248 247 249 15 (set (reg:DI 138 [ _52 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/vector.tcc":225 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 249 248 250 15 (set (reg:DI 206)
        (reg:DI 138 [ _52 ])) "/usr/include/c++/7/bits/vector.tcc":225 81 {*movdi_internal}
     (nil))
(insn 250 249 251 15 (parallel [
            (set (reg:DI 206)
                (ashift:DI (reg:DI 206)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/vector.tcc":225 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 251 250 252 15 (parallel [
            (set (reg:DI 206)
                (plus:DI (reg:DI 206)
                    (reg:DI 138 [ _52 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/vector.tcc":225 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 138 [ _52 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 138 [ _52 ])
                    (const_int 5 [0x5]))
                (nil)))))
(insn 252 251 253 15 (parallel [
            (set (reg:DI 207)
                (ashift:DI (reg:DI 206)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/vector.tcc":225 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 206)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 253 252 254 15 (set (reg:DI 206)
        (reg:DI 207)) "/usr/include/c++/7/bits/vector.tcc":225 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 207)
        (nil)))
(insn 254 253 255 15 (set (reg:DI 139 [ _53 ])
        (reg:DI 206)) "/usr/include/c++/7/bits/vector.tcc":225 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 206)
        (nil)))
(insn 255 254 256 15 (parallel [
            (set (reg/f:DI 140 [ _54 ])
                (plus:DI (reg/f:DI 137 [ _51 ])
                    (reg:DI 139 [ _53 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/vector.tcc":225 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 139 [ _53 ])
        (expr_list:REG_DEAD (reg/f:DI 137 [ _51 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 256 255 257 15 (set (reg:DI 2 cx)
        (reg/f:DI 134 [ _48 ])) "/usr/include/c++/7/bits/vector.tcc":225 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 134 [ _48 ])
        (nil)))
(insn 257 256 258 15 (set (reg:DI 1 dx)
        (reg/f:DI 135 [ _49 ])) "/usr/include/c++/7/bits/vector.tcc":225 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 135 [ _49 ])
        (nil)))
(insn 258 257 259 15 (set (reg:DI 4 si)
        (reg/f:DI 136 [ _50 ])) "/usr/include/c++/7/bits/vector.tcc":225 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 136 [ _50 ])
        (nil)))
(insn 259 258 260 15 (set (reg:DI 5 di)
        (reg/f:DI 140 [ _54 ])) "/usr/include/c++/7/bits/vector.tcc":225 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 140 [ _54 ])
        (nil)))
(call_insn 260 259 261 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt22__uninitialized_copy_aIPN2sf6VertexES2_S1_ET0_T_S4_S3_RSaIT1_E") [flags 0x3]  <function_decl 0x7f7f8ce45900 __uninitialized_copy_a>) [0 __uninitialized_copy_a S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/vector.tcc":225 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_UNUSED (reg:DI 0 ax)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       16 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (RTL)
;;  pred:       15 (FALLTHRU)
;;              12 [100.0%] 
;;              14 [100.0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 141 142 143 208 209 210 211 212
(code_label 261 260 262 16 67 (nil) [2 uses])
(note 262 261 263 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 263 262 264 16 (set (reg/f:DI 208)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":230 81 {*movdi_internal}
     (nil))
(insn 264 263 265 16 (set (reg/f:DI 141 [ _55 ])
        (mem/f:DI (reg/f:DI 208) [26 this_66(D)->D.59661._M_impl._M_start+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":230 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 208)
        (nil)))
(insn 265 264 266 16 (set (reg:DI 209)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [4 __xlen+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":230 81 {*movdi_internal}
     (nil))
(insn 266 265 267 16 (set (reg:DI 210)
        (reg:DI 209)) "/usr/include/c++/7/bits/vector.tcc":230 81 {*movdi_internal}
     (nil))
(insn 267 266 268 16 (parallel [
            (set (reg:DI 210)
                (ashift:DI (reg:DI 210)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/vector.tcc":230 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 268 267 269 16 (parallel [
            (set (reg:DI 210)
                (plus:DI (reg:DI 210)
                    (reg:DI 209)))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/vector.tcc":230 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 209)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 209)
                    (const_int 5 [0x5]))
                (nil)))))
(insn 269 268 270 16 (parallel [
            (set (reg:DI 211)
                (ashift:DI (reg:DI 210)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/vector.tcc":230 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 210)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 270 269 271 16 (set (reg:DI 210)
        (reg:DI 211)) "/usr/include/c++/7/bits/vector.tcc":230 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 211)
        (nil)))
(insn 271 270 272 16 (set (reg:DI 142 [ _56 ])
        (reg:DI 210)) "/usr/include/c++/7/bits/vector.tcc":230 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 210)
        (nil)))
(insn 272 271 273 16 (parallel [
            (set (reg/f:DI 143 [ _57 ])
                (plus:DI (reg/f:DI 141 [ _55 ])
                    (reg:DI 142 [ _56 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/vector.tcc":230 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 142 [ _56 ])
        (expr_list:REG_DEAD (reg/f:DI 141 [ _55 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 273 272 274 16 (set (reg/f:DI 212)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":230 81 {*movdi_internal}
     (nil))
(insn 274 273 275 16 (set (mem/f:DI (plus:DI (reg/f:DI 212)
                (const_int 8 [0x8])) [26 this_66(D)->D.59661._M_impl._M_finish+0 S8 A64])
        (reg/f:DI 143 [ _57 ])) "/usr/include/c++/7/bits/vector.tcc":230 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 212)
        (expr_list:REG_DEAD (reg/f:DI 143 [ _57 ])
            (nil))))
;;  succ:       17 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 1, flags: (RTL)
;;  pred:       2
;;              16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 149 157
(code_label 275 274 276 17 61 (nil) [1 uses])
(note 276 275 277 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 277 276 280 17 (set (reg/f:DI 149 [ _114 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/vector.tcc":232 81 {*movdi_internal}
     (nil))
(insn 280 277 284 17 (set (reg/f:DI 157 [ <retval> ])
        (reg/f:DI 149 [ _114 ])) "/usr/include/c++/7/bits/vector.tcc":232 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 149 [ _114 ])
        (nil)))
(insn 284 280 285 17 (set (reg/i:DI 0 ax)
        (reg/f:DI 157 [ <retval> ])) "/usr/include/c++/7/bits/vector.tcc":233 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 157 [ <retval> ])
        (nil)))
(insn 285 284 0 17 (use (reg/i:DI 0 ax)) "/usr/include/c++/7/bits/vector.tcc":233 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function sf::Vector2<T>::Vector2() [with T = float] (_ZN2sf7Vector2IfEC2Ev, funcdef_no=3546, decl_uid=58345, cgraph_uid=1063, symbol_order=1067)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r90: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a1 (r90,l0) best SSE_REGS, allocno SSE_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a3 (r88,l0) best SSE_REGS, allocno SSE_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a1(r90,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12
  a2(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a3(r88,l0) costs: AREG:4 DREG:4 CREG:4 BREG:4 SIREG:4 DIREG:4 AD_REGS:4 CLOBBERED_REGS:4 Q_REGS:4 NON_Q_REGS:4 TLS_GOTBASE_REGS:4 GENERAL_REGS:4 FP_TOP_REG:31 FP_SECOND_REG:31 FLOAT_REGS:31 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:29 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:31 INT_SSE_REGS:24 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:12

   Insn 14(l0): point = 0
   Insn 11(l0): point = 2
   Insn 10(l0): point = 4
   Insn 9(l0): point = 6
   Insn 8(l0): point = 8
   Insn 7(l0): point = 10
   Insn 6(l0): point = 12
   Insn 2(l0): point = 14
 a0(r89): [3..6]
 a1(r90): [3..4]
 a2(r87): [9..12]
 a3(r88): [9..10]
Compressing live ranges: from 17 to 4 - 23%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r90): [0..1]
 a2(r87): [2..3]
 a3(r88): [2..3]
  regions=1, blocks=3, points=4
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4
Disposition:
    2:r87  l0     0    3:r88  l0    21    0:r89  l0     0    1:r90  l0    21
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


sf::Vector2<T>::Vector2() [with T = float]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5 [di] 6 [bp]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,5u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 38{23d,15u,0e} in 8{8 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87 88 89 90
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [61 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "/usr/include/SFML/System/Vector2.inl":28 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [61 this+0 S8 A64])) "/usr/include/SFML/System/Vector2.inl":30 81 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:SF 88)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [17  S4 A32])) "/usr/include/SFML/System/Vector2.inl":30 127 {*movsf_internal}
     (nil))
(insn 8 7 9 2 (set (mem:SF (reg/f:DI 87) [17 this_2(D)->x+0 S4 A32])
        (reg:SF 88)) "/usr/include/SFML/System/Vector2.inl":30 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 88)
        (expr_list:REG_DEAD (reg/f:DI 87)
            (nil))))
(insn 9 8 10 2 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [61 this+0 S8 A64])) "/usr/include/SFML/System/Vector2.inl":30 81 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:SF 90)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [17  S4 A32])) "/usr/include/SFML/System/Vector2.inl":30 127 {*movsf_internal}
     (nil))
(insn 11 10 14 2 (set (mem:SF (plus:DI (reg/f:DI 89)
                (const_int 4 [0x4])) [17 this_2(D)->y+0 S4 A32])
        (reg:SF 90)) "/usr/include/SFML/System/Vector2.inl":30 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 90)
        (expr_list:REG_DEAD (reg/f:DI 89)
            (nil))))
(insn 14 11 0 2 (const_int 0 [0]) "/usr/include/SFML/System/Vector2.inl":33 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function sf::Vector2<T> sf::operator/(const sf::Vector2<T>&, T) [with T = float] (_ZN2sfdvIfEENS_7Vector2IT_EERKS3_S2_, funcdef_no=3551, decl_uid=77179, cgraph_uid=1068, symbol_order=1072)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 4 count 5 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { }
;; 4 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 29.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r95: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r95,l0) best DIREG, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a0 (r92,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a3 (r90,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r89: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a5 (r89,l0) best SSE_REGS, allocno SSE_REGS
    r88: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a4 (r88,l0) best SSE_REGS, allocno SSE_REGS
    r87: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a7 (r87,l0) best SSE_REGS, allocno SSE_REGS

  a0(r92,l0) costs: AREG:8 DREG:8 CREG:8 BREG:8 SIREG:8 DIREG:8 AD_REGS:8 CLOBBERED_REGS:8 Q_REGS:8 NON_Q_REGS:8 TLS_GOTBASE_REGS:8 GENERAL_REGS:8 SSE_FIRST_REG:25 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:29 INT_SSE_REGS:25 ALL_REGS:316 MEM:12
  a1(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a3(r90,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 CLOBBERED_REGS:12 Q_REGS:12 NON_Q_REGS:12 TLS_GOTBASE_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a4(r88,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 CLOBBERED_REGS:12 Q_REGS:12 NON_Q_REGS:12 TLS_GOTBASE_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 ALL_REGS:33 MEM:9
  a5(r89,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 CLOBBERED_REGS:15 Q_REGS:15 NON_Q_REGS:15 TLS_GOTBASE_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a6(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a7(r87,l0) costs: AREG:15 DREG:15 CREG:15 BREG:15 SIREG:15 DIREG:15 AD_REGS:15 CLOBBERED_REGS:15 Q_REGS:15 NON_Q_REGS:15 TLS_GOTBASE_REGS:15 GENERAL_REGS:15 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:31 FP_TOP_SSE_REGS:35 FP_SECOND_SSE_REGS:35 FLOAT_SSE_REGS:35 FLOAT_INT_REGS:33 INT_SSE_REGS:26 FLOAT_INT_SSE_REGS:35 ALL_REGS:35 MEM:14
  a8(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 32(l0): point = 0
   Insn 29(l0): point = 3
   Insn 28(l0): point = 6
   Insn 27(l0): point = 8
   Insn 26(l0): point = 10
   Insn 22(l0): point = 12
   Insn 19(l0): point = 14
   Insn 18(l0): point = 16
   Insn 17(l0): point = 18
   Insn 16(l0): point = 20
   Insn 15(l0): point = 22
   Insn 14(l0): point = 24
   Insn 13(l0): point = 26
   Insn 12(l0): point = 28
   Insn 11(l0): point = 30
   Insn 10(l0): point = 32
   Insn 9(l0): point = 34
   Insn 8(l0): point = 36
   Insn 5(l0): point = 38
   Insn 3(l0): point = 40
   Insn 2(l0): point = 42
 a0(r92): [11..12]
 a1(r91): [13..14]
 a2(r95): [19..24]
 a3(r90): [21..26]
 a4(r88): [23..32]
 a5(r89): [27..28]
 a6(r94): [29..30]
 a7(r87): [33..34]
 a8(r93): [35..36]
Compressing live ranges: from 45 to 14 - 31%
Ranges after the compression:
 a0(r92): [0..1]
 a1(r91): [2..3]
 a2(r95): [4..5]
 a3(r90): [4..5]
 a4(r88): [4..9]
 a5(r89): [6..7]
 a6(r94): [8..9]
 a7(r87): [10..11]
 a8(r93): [12..13]
  pref0:a0(r92)<-hr21@1
  regions=1, blocks=5, points=14
    allocnos=9 (big 0), copies=0, conflicts=0, ranges=9
Disposition:
    7:r87  l0    21    4:r88  l0    22    5:r89  l0    21    3:r90  l0    21
    1:r91  l0     0    0:r92  l0     0    8:r93  l0     0    6:r94  l0     0
    2:r95  l0     0
+++Costs: overall 5, reg 5, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


sf::Vector2<T> sf::operator/(const sf::Vector2<T>&, T) [with T = float]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame] 21 [xmm0]
;;  regs ever live 	 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 22 [xmm1]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={3d} r5={4d,2u} r6={1d,4u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u} r17={5d,1u} r18={2d} r19={2d} r20={1d,14u} r21={5d,4u} r22={4d,1u} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} 
;;    total ref usage 223{179d,44u,0e} in 21{19 regular + 2 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93 94 95
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [64 left+0 S8 A64])
        (reg:DI 5 di [ left ])) "/usr/include/SFML/System/Vector2.inl":131 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ left ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [17 right+0 S4 A32])
        (reg:SF 21 xmm0 [ right ])) "/usr/include/SFML/System/Vector2.inl":131 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [ right ])
        (nil)))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [5 D.82392+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/SFML/System/Vector2.inl":131 1002 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 8 5 9 2 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [64 left+0 S8 A64])) "/usr/include/SFML/System/Vector2.inl":133 81 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:SF 87 [ _1 ])
        (mem:SF (plus:DI (reg/f:DI 93)
                (const_int 4 [0x4])) [17 left_6(D)->y+0 S4 A32])) "/usr/include/SFML/System/Vector2.inl":133 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 93)
        (nil)))
(insn 10 9 11 2 (set (reg:SF 88 [ _2 ])
        (div:SF (reg:SF 87 [ _1 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -28 [0xffffffffffffffe4])) [17 right+0 S4 A32]))) "/usr/include/SFML/System/Vector2.inl":133 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 87 [ _1 ])
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [64 left+0 S8 A64])) "/usr/include/SFML/System/Vector2.inl":133 81 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:SF 89 [ _3 ])
        (mem:SF (reg/f:DI 94) [17 left_6(D)->x+0 S4 A32])) "/usr/include/SFML/System/Vector2.inl":133 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 94)
        (nil)))
(insn 13 12 14 2 (set (reg:SF 90 [ _4 ])
        (div:SF (reg:SF 89 [ _3 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -28 [0xffffffffffffffe4])) [17 right+0 S4 A32]))) "/usr/include/SFML/System/Vector2.inl":133 805 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 89 [ _3 ])
        (nil)))
(insn 14 13 15 2 (parallel [
            (set (reg:DI 95)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/SFML/System/Vector2.inl":133 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 15 14 16 2 (set (reg:SF 22 xmm1)
        (reg:SF 88 [ _2 ])) "/usr/include/SFML/System/Vector2.inl":133 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 88 [ _2 ])
        (nil)))
(insn 16 15 17 2 (set (reg:SF 21 xmm0)
        (reg:SF 90 [ _4 ])) "/usr/include/SFML/System/Vector2.inl":133 127 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 90 [ _4 ])
        (nil)))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (reg:DI 95)) "/usr/include/SFML/System/Vector2.inl":133 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 95)
        (nil)))
(call_insn 18 17 19 2 (call (mem:QI (symbol_ref/i:DI ("_ZN2sf7Vector2IfEC1Eff") [flags 0x3]  <function_decl 0x7f7f8d934f00 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) "/usr/include/SFML/System/Vector2.inl":133 655 {*call}
     (expr_list:REG_DEAD (reg:SF 22 xmm1)
        (expr_list:REG_DEAD (reg:SF 21 xmm0)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SF (use (reg:SF 21 xmm0))
            (expr_list:SF (use (reg:SF 22 xmm1))
                (nil)))))
(insn 19 18 22 2 (set (reg:DI 91 [ D.82199 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [16 D.79550+0 S8 A64])) "/usr/include/SFML/System/Vector2.inl":133 81 {*movdi_internal}
     (nil))
(insn 22 19 26 2 (set (reg:DI 92 [ <retval> ])
        (reg:DI 91 [ D.82199 ])) "/usr/include/SFML/System/Vector2.inl":133 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91 [ D.82199 ])
        (nil)))
(insn 26 22 27 2 (set (reg/i:DI 21 xmm0)
        (reg:DI 92 [ <retval> ])) "/usr/include/SFML/System/Vector2.inl":134 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92 [ <retval> ])
        (nil)))
(insn 27 26 28 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [5 D.82392+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) "/usr/include/SFML/System/Vector2.inl":134 1006 {stack_tls_protect_test_di}
     (nil))
(jump_insn 28 27 34 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "/usr/include/SFML/System/Vector2.inl":134 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 31)
;;  succ:       4
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 34 28 29 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 29 34 30 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f7f8c72b800 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "/usr/include/SFML/System/Vector2.inl":134 655 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 30 29 31)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (RTL)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]
;; lr  def 	
(code_label 31 30 35 4 73 (nil) [1 uses])
(note 35 31 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 32 35 0 4 (use (reg/i:DI 21 xmm0)) "/usr/include/SFML/System/Vector2.inl":134 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0]


;; Function std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = sf::Vertex; _Alloc = std::allocator<sf::Vertex>] (_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=3665, decl_uid=58723, cgraph_uid=1182, symbol_order=1186)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 14(l0): point = 0
   Insn 13(l0): point = 2
   Insn 9(l0): point = 4
   Insn 6(l0): point = 6
   Insn 2(l0): point = 8
 a0(r88): [3..4]
 a1(r87): [5..6]
Compressing live ranges: from 11 to 4 - 36%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     0    0:r88  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = sf::Vertex; _Alloc = std::allocator<sf::Vertex>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 5 [di] 6 [bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 36{22d,14u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 87 88
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [65 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "/usr/include/c++/7/bits/stl_vector.h":115 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 9 2 (set (reg/f:DI 87 [ _2 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [65 this+0 S8 A64])) "/usr/include/c++/7/bits/stl_vector.h":116 81 {*movdi_internal}
     (nil))
(insn 9 6 13 2 (set (reg/f:DI 88 [ <retval> ])
        (reg/f:DI 87 [ _2 ])) "/usr/include/c++/7/bits/stl_vector.h":116 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _2 ])
        (nil)))
(insn 13 9 14 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 88 [ <retval> ])) "/usr/include/c++/7/bits/stl_vector.h":116 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ <retval> ])
        (nil)))
(insn 14 13 0 2 (use (reg/i:DI 0 ax)) "/usr/include/c++/7/bits/stl_vector.h":116 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function const _Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() const [with _Tp = sf::Vertex; _Alloc = std::allocator<sf::Vertex>] (_ZNKSt12_Vector_baseIN2sf6VertexESaIS1_EE19_M_get_Tp_allocatorEv, funcdef_no=3666, decl_uid=58725, cgraph_uid=1183, symbol_order=1187)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 14(l0): point = 0
   Insn 13(l0): point = 2
   Insn 9(l0): point = 4
   Insn 6(l0): point = 6
   Insn 2(l0): point = 8
 a0(r88): [3..4]
 a1(r87): [5..6]
Compressing live ranges: from 11 to 4 - 36%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     0    0:r88  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


const _Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() const [with _Tp = sf::Vertex; _Alloc = std::allocator<sf::Vertex>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 5 [di] 6 [bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 36{22d,14u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 87 88
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [65 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "/usr/include/c++/7/bits/stl_vector.h":119 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 9 2 (set (reg/f:DI 87 [ _2 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [65 this+0 S8 A64])) "/usr/include/c++/7/bits/stl_vector.h":120 81 {*movdi_internal}
     (nil))
(insn 9 6 13 2 (set (reg/f:DI 88 [ <retval> ])
        (reg/f:DI 87 [ _2 ])) "/usr/include/c++/7/bits/stl_vector.h":120 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _2 ])
        (nil)))
(insn 13 9 14 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 88 [ <retval> ])) "/usr/include/c++/7/bits/stl_vector.h":120 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ <retval> ])
        (nil)))
(insn 14 13 0 2 (use (reg/i:DI 0 ax)) "/usr/include/c++/7/bits/stl_vector.h":120 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function bool std::operator!=(const std::allocator<_CharT>&, const std::allocator<_CharT>&) [with _Tp = sf::Vertex] (_ZStneIN2sf6VertexEEbRKSaIT_ES5_, funcdef_no=3667, decl_uid=79218, cgraph_uid=1184, symbol_order=1188)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:4

   Insn 15(l0): point = 0
   Insn 14(l0): point = 2
   Insn 10(l0): point = 4
   Insn 7(l0): point = 6
   Insn 3(l0): point = 8
   Insn 2(l0): point = 10
 a0(r88): [3..4]
 a1(r87): [5..6]
Compressing live ranges: from 13 to 4 - 30%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     0    0:r88  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


bool std::operator!=(const std::allocator<_CharT>&, const std::allocator<_CharT>&) [with _Tp = sf::Vertex]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 6 [bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 37{22d,15u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 87 88
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [66 D.79219+0 S8 A64])
        (reg:DI 5 di [ D.79219 ])) "/usr/include/c++/7/bits/allocator.h":164 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ D.79219 ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [66 D.79220+0 S8 A64])
        (reg:DI 4 si [ D.79220 ])) "/usr/include/c++/7/bits/allocator.h":164 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ D.79220 ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 10 2 (set (reg:QI 87 [ _1 ])
        (const_int 0 [0])) "/usr/include/c++/7/bits/allocator.h":166 84 {*movqi_internal}
     (nil))
(insn 10 7 14 2 (set (reg:QI 88 [ <retval> ])
        (reg:QI 87 [ _1 ])) "/usr/include/c++/7/bits/allocator.h":166 84 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 87 [ _1 ])
        (nil)))
(insn 14 10 15 2 (set (reg/i:QI 0 ax)
        (reg:QI 88 [ <retval> ])) "/usr/include/c++/7/bits/allocator.h":166 84 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 88 [ <retval> ])
        (nil)))
(insn 15 14 0 2 (use (reg/i:QI 0 ax)) "/usr/include/c++/7/bits/allocator.h":166 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void std::vector<_Tp, _Alloc>::clear() [with _Tp = sf::Vertex; _Alloc = std::allocator<sf::Vertex>] (_ZNSt6vectorIN2sf6VertexESaIS1_EE5clearEv, funcdef_no=3668, decl_uid=59298, cgraph_uid=1185, symbol_order=1189)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 11.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best DIREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best SIREG, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 14(l0): point = 0
   Insn 11(l0): point = 2
   Insn 10(l0): point = 4
   Insn 9(l0): point = 6
   Insn 8(l0): point = 8
   Insn 7(l0): point = 10
   Insn 6(l0): point = 12
   Insn 2(l0): point = 14
 a0(r89): [5..8]
 a1(r87): [7..10]
 a2(r88): [11..12]
Compressing live ranges: from 17 to 4 - 23%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r87): [0..1]
 a2(r88): [2..3]
  regions=1, blocks=3, points=4
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    1:r87  l0     1    2:r88  l0     0    0:r89  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void std::vector<_Tp, _Alloc>::clear() [with _Tp = sf::Vertex; _Alloc = std::allocator<sf::Vertex>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={3d,1u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,5u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 113{96d,17u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [62 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "/usr/include/c++/7/bits/stl_vector.h":1247 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/stl_vector.h":1248 81 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (reg/f:DI 88) [26 this_3(D)->D.59661._M_impl._M_start+0 S8 A64])) "/usr/include/c++/7/bits/stl_vector.h":1248 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88)
        (nil)))
(insn 8 7 9 2 (set (reg:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/stl_vector.h":1248 81 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (reg/f:DI 87 [ _1 ])) "/usr/include/c++/7/bits/stl_vector.h":1248 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _1 ])
        (nil)))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 89)) "/usr/include/c++/7/bits/stl_vector.h":1248 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(call_insn 11 10 14 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt6vectorIN2sf6VertexESaIS1_EE15_M_erase_at_endEPS1_") [flags 0x3]  <function_decl 0x7f7f8d9d3100 _M_erase_at_end>) [0 _M_erase_at_end S1 A8])
        (const_int 0 [0])) "/usr/include/c++/7/bits/stl_vector.h":1248 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 14 11 0 2 (const_int 0 [0]) "/usr/include/c++/7/bits/stl_vector.h":1248 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(std::_Vector_base<_Tp, _Alloc>::pointer, std::size_t) [with _Tp = sf::Vertex; _Alloc = std::allocator<sf::Vertex>] (_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE13_M_deallocateEPS1_m, funcdef_no=3669, decl_uid=58962, cgraph_uid=1186, symbol_order=1190)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 6 count 6 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 5 4
;; 2 succs { 3 5 }
;; 3 succs { 5 }
;; 5 succs { 4 }
;; 4 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 17.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r89,l0) best SIREG, allocno GENERAL_REGS
    r88: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r88,l0) best DREG, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 26(l0): point = 1
   Insn 17(l0): point = 4
   Insn 16(l0): point = 6
   Insn 15(l0): point = 8
   Insn 14(l0): point = 10
   Insn 13(l0): point = 12
   Insn 12(l0): point = 14
   Insn 11(l0): point = 16
   Insn 9(l0): point = 19
   Insn 8(l0): point = 21
   Insn 4(l0): point = 23
   Insn 3(l0): point = 25
   Insn 2(l0): point = 27
 a0(r87): [7..16]
 a1(r89): [9..12]
 a2(r88): [11..14]
Compressing live ranges: from 30 to 2 - 6%
Ranges after the compression:
 a0(r87): [0..1]
 a1(r89): [0..1]
 a2(r88): [0..1]
  regions=1, blocks=6, points=2
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    0:r87  l0     0    2:r88  l0     1    1:r89  l0     2
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(std::_Vector_base<_Tp, _Alloc>::pointer, std::size_t) [with _Tp = sf::Vertex; _Alloc = std::allocator<sf::Vertex>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={2d} r1={3d,2u} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,5u} r7={1d,6u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,4u} r17={2d,1u} r18={1d} r19={1d} r20={1d,12u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 135{98d,37u,0e} in 13{12 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [65 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "/usr/include/c++/7/bits/stl_vector.h":176 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [26 __p+0 S8 A64])
        (reg:DI 4 si [ __p ])) "/usr/include/c++/7/bits/stl_vector.h":176 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __p ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [4 __n+0 S8 A64])
        (reg:DI 1 dx [ __n ])) "/usr/include/c++/7/bits/stl_vector.h":176 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __n ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [26 __p+0 S8 A64])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/stl_vector.h":179 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 25)
            (pc))) "/usr/include/c++/7/bits/stl_vector.h":179 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 25)
;;  succ:       3 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:DI 87 [ _1 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [65 this+0 S8 A64])) "/usr/include/c++/7/bits/stl_vector.h":180 81 {*movdi_internal}
     (nil))
(insn 12 11 13 3 (set (reg:DI 88)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [4 __n+0 S8 A64])) "/usr/include/c++/7/bits/stl_vector.h":180 81 {*movdi_internal}
     (nil))
(insn 13 12 14 3 (set (reg:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [26 __p+0 S8 A64])) "/usr/include/c++/7/bits/stl_vector.h":180 81 {*movdi_internal}
     (nil))
(insn 14 13 15 3 (set (reg:DI 1 dx)
        (reg:DI 88)) "/usr/include/c++/7/bits/stl_vector.h":180 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(insn 15 14 16 3 (set (reg:DI 4 si)
        (reg:DI 89)) "/usr/include/c++/7/bits/stl_vector.h":180 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(insn 16 15 17 3 (set (reg:DI 5 di)
        (reg/f:DI 87 [ _1 ])) "/usr/include/c++/7/bits/stl_vector.h":180 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _1 ])
        (nil)))
(call_insn 17 16 25 3 (call (mem:QI (symbol_ref/i:DI ("_ZNSt16allocator_traitsISaIN2sf6VertexEEE10deallocateERS2_PS1_m") [flags 0x3]  <function_decl 0x7f7f8d94d800 deallocate>) [0 deallocate S1 A8])
        (const_int 0 [0])) "/usr/include/c++/7/bits/stl_vector.h":180 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 4, flags: (RTL)
;;  pred:       2
;;              3 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 25 17 24 5 83 (nil) [1 uses])
(note 24 25 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 24 20 5 (const_int 0 [0]) "/usr/include/c++/7/bits/stl_vector.h":181 684 {nop}
     (nil))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 1, flags: (RTL)
;;  pred:       5 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 20 26 21 4 81 (nil) [0 uses])
(note 21 20 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void std::__alloc_on_copy(_Alloc&, const _Alloc&) [with _Alloc = std::allocator<sf::Vertex>] (_ZSt15__alloc_on_copyISaIN2sf6VertexEEEvRT_RKS3_, funcdef_no=3670, decl_uid=79225, cgraph_uid=1187, symbol_order=1191)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 4 count 5 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { }
;; 4 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 19.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best DIREG, allocno GENERAL_REGS
    r88: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r88,l0) best SIREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:4

   Insn 19(l0): point = 1
   Insn 18(l0): point = 4
   Insn 17(l0): point = 6
   Insn 25(l0): point = 8
   Insn 15(l0): point = 10
   Insn 14(l0): point = 12
   Insn 13(l0): point = 14
   Insn 12(l0): point = 16
   Insn 11(l0): point = 18
   Insn 10(l0): point = 20
   Insn 9(l0): point = 22
   Insn 8(l0): point = 24
   Insn 5(l0): point = 26
   Insn 3(l0): point = 28
   Insn 2(l0): point = 30
 a0(r89): [15..22]
 a1(r88): [17..24]
 a2(r87): [19..32]
Compressing live ranges: from 33 to 2 - 6%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r88): [0..1]
 a2(r87): [0..1]
  regions=1, blocks=5, points=2
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    2:r87  l0     2    1:r88  l0     1    0:r89  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void std::__alloc_on_copy(_Alloc&, const _Alloc&) [with _Alloc = std::allocator<sf::Vertex>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={4d,2u} r5={4d,2u} r6={1d,4u} r7={4d,12u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u} r17={6d,1u} r18={2d} r19={2d} r20={1d,10u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 211{174d,37u,0e} in 15{13 regular + 2 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 89
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [66 __one+0 S8 A64])
        (reg:DI 5 di [ __one ])) "/usr/include/c++/7/bits/alloc_traits.h":520 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __one ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [66 __two+0 S8 A64])
        (reg:DI 4 si [ __two ])) "/usr/include/c++/7/bits/alloc_traits.h":520 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __two ])
        (nil)))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 8 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [5 D.82393+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/alloc_traits.h":520 1002 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 8 5 9 2 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [66 __two+0 S8 A64])) "/usr/include/c++/7/bits/alloc_traits.h":524 81 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [66 __one+0 S8 A64])) "/usr/include/c++/7/bits/alloc_traits.h":524 81 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/alloc_traits.h":524 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 11 10 12 2 (set (mem:QI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [67  S1 A8])
        (reg:QI 87 [ D.82050 ])) "/usr/include/c++/7/bits/alloc_traits.h":524 59 {*pushqi2_rex64}
     (expr_list:REG_DEAD (reg:QI 87 [ D.82050 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(insn 12 11 13 2 (set (reg:DI 4 si)
        (reg:DI 88)) "/usr/include/c++/7/bits/alloc_traits.h":524 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg:DI 89)) "/usr/include/c++/7/bits/alloc_traits.h":524 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(call_insn 14 13 15 2 (call (mem:QI (symbol_ref/i:DI ("_ZSt18__do_alloc_on_copyISaIN2sf6VertexEEEvRT_RKS3_St17integral_constantIbLb0EE") [flags 0x3]  <function_decl 0x7f7f8cae5f00 __do_alloc_on_copy>) [0 __do_alloc_on_copy S1 A8])
        (const_int 16 [0x10])) "/usr/include/c++/7/bits/alloc_traits.h":524 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 15 14 25 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/alloc_traits.h":524 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 25 15 17 2 (const_int 0 [0]) "/usr/include/c++/7/bits/alloc_traits.h":525 684 {nop}
     (nil))
(insn 17 25 18 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [5 D.82393+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) "/usr/include/c++/7/bits/alloc_traits.h":525 1006 {stack_tls_protect_test_di}
     (nil))
(jump_insn 18 17 23 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) "/usr/include/c++/7/bits/alloc_traits.h":525 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 21)
;;  succ:       4
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 23 18 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 19 23 20 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f7f8c72b800 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "/usr/include/c++/7/bits/alloc_traits.h":525 655 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 20 19 21)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (RTL)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 21 20 24 4 85 (nil) [1 uses])
(note 24 21 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = sf::Vertex; _Alloc = std::allocator<sf::Vertex>] (_ZNKSt6vectorIN2sf6VertexESaIS1_EE4sizeEv, funcdef_no=3671, decl_uid=59179, cgraph_uid=1188, symbol_order=1192)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r94,l0) best AREG, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a3(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:13 NO_REX_SSE_REGS:13 SSE_REGS:13 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a4(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a5(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a6(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a7(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a8(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a9(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a10(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a11(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a12(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 25(l0): point = 0
   Insn 24(l0): point = 2
   Insn 20(l0): point = 4
   Insn 17(l0): point = 6
   Insn 16(l0): point = 8
   Insn 15(l0): point = 10
   Insn 14(l0): point = 12
   Insn 13(l0): point = 14
   Insn 12(l0): point = 16
   Insn 11(l0): point = 18
   Insn 10(l0): point = 20
   Insn 9(l0): point = 22
   Insn 8(l0): point = 24
   Insn 7(l0): point = 26
   Insn 6(l0): point = 28
   Insn 2(l0): point = 30
 a0(r94): [3..4]
 a1(r93): [5..6]
 a2(r92): [7..8]
 a3(r98): [9..10]
 a4(r99): [11..12]
 a5(r97): [11..14]
 a6(r91): [15..16]
 a7(r90): [17..18]
 a8(r88): [17..24]
 a9(r89): [19..20]
 a10(r96): [21..22]
 a11(r87): [25..26]
 a12(r95): [27..28]
Compressing live ranges: from 33 to 22 - 66%
Ranges after the compression:
 a0(r94): [0..1]
 a1(r93): [2..3]
 a2(r92): [4..5]
 a3(r98): [6..7]
 a4(r99): [8..9]
 a5(r97): [8..9]
 a6(r91): [10..11]
 a7(r90): [12..13]
 a8(r88): [12..17]
 a9(r89): [14..15]
 a10(r96): [16..17]
 a11(r87): [18..19]
 a12(r95): [20..21]
  regions=1, blocks=3, points=22
    allocnos=13 (big 0), copies=0, conflicts=0, ranges=13
Disposition:
   11:r87  l0     0    8:r88  l0     1    9:r89  l0     0    7:r90  l0     0
    6:r91  l0     0    2:r92  l0     0    1:r93  l0     0    0:r94  l0     0
   12:r95  l0     0   10:r96  l0     0    5:r97  l0     1    3:r98  l0     0
    4:r99  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = sf::Vertex; _Alloc = std::allocator<sf::Vertex>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 5 [di] 6 [bp] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r17={3d} r20={1d,5u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} 
;;    total ref usage 62{36d,26u,0e} in 16{16 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 17 [flags] 87 88 89 90 91 92 93 94 95 96 97 98 99
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [62 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "/usr/include/c++/7/bits/stl_vector.h":670 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/stl_vector.h":671 81 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (plus:DI (reg/f:DI 95)
                (const_int 8 [0x8])) [26 this_8(D)->D.59661._M_impl._M_finish+0 S8 A64])) "/usr/include/c++/7/bits/stl_vector.h":671 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95)
        (nil)))
(insn 8 7 9 2 (set (reg:DI 88 [ _2 ])
        (reg/f:DI 87 [ _1 ])) "/usr/include/c++/7/bits/stl_vector.h":671 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _1 ])
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/stl_vector.h":671 81 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg/f:DI 89 [ _3 ])
        (mem/f:DI (reg/f:DI 96) [26 this_8(D)->D.59661._M_impl._M_start+0 S8 A64])) "/usr/include/c++/7/bits/stl_vector.h":671 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 96)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 90 [ _4 ])
        (reg/f:DI 89 [ _3 ])) "/usr/include/c++/7/bits/stl_vector.h":671 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ _3 ])
        (nil)))
(insn 12 11 13 2 (parallel [
            (set (reg:DI 91 [ _5 ])
                (minus:DI (reg:DI 88 [ _2 ])
                    (reg:DI 90 [ _4 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/stl_vector.h":671 274 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 90 [ _4 ])
        (expr_list:REG_DEAD (reg:DI 88 [ _2 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 13 12 14 2 (parallel [
            (set (reg:DI 97)
                (ashiftrt:DI (reg:DI 91 [ _5 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/stl_vector.h":671 547 {*ashrdi3_1}
     (expr_list:REG_DEAD (reg:DI 91 [ _5 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 14 13 15 2 (set (reg:DI 99)
        (const_int -3689348814741910323 [0xcccccccccccccccd])) "/usr/include/c++/7/bits/stl_vector.h":671 81 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (parallel [
            (set (reg:DI 98)
                (mult:DI (reg:DI 97)
                    (reg:DI 99)))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/stl_vector.h":671 329 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 99)
        (expr_list:REG_DEAD (reg:DI 97)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 16 15 17 2 (set (reg:DI 92 [ _6 ])
        (reg:DI 98)) "/usr/include/c++/7/bits/stl_vector.h":671 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 98)
        (nil)))
(insn 17 16 20 2 (set (reg:DI 93 [ _9 ])
        (reg:DI 92 [ _6 ])) "/usr/include/c++/7/bits/stl_vector.h":671 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92 [ _6 ])
        (nil)))
(insn 20 17 24 2 (set (reg:DI 94 [ <retval> ])
        (reg:DI 93 [ _9 ])) "/usr/include/c++/7/bits/stl_vector.h":671 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93 [ _9 ])
        (nil)))
(insn 24 20 25 2 (set (reg/i:DI 0 ax)
        (reg:DI 94 [ <retval> ])) "/usr/include/c++/7/bits/stl_vector.h":671 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94 [ <retval> ])
        (nil)))
(insn 25 24 0 2 (use (reg/i:DI 0 ax)) "/usr/include/c++/7/bits/stl_vector.h":671 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::capacity() const [with _Tp = sf::Vertex; _Alloc = std::allocator<sf::Vertex>] (_ZNKSt6vectorIN2sf6VertexESaIS1_EE8capacityEv, funcdef_no=3672, decl_uid=59192, cgraph_uid=1189, symbol_order=1193)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r94,l0) best AREG, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a3(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:13 NO_REX_SSE_REGS:13 SSE_REGS:13 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a4(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a5(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a6(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a7(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a8(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a9(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a10(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a11(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a12(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 25(l0): point = 0
   Insn 24(l0): point = 2
   Insn 20(l0): point = 4
   Insn 17(l0): point = 6
   Insn 16(l0): point = 8
   Insn 15(l0): point = 10
   Insn 14(l0): point = 12
   Insn 13(l0): point = 14
   Insn 12(l0): point = 16
   Insn 11(l0): point = 18
   Insn 10(l0): point = 20
   Insn 9(l0): point = 22
   Insn 8(l0): point = 24
   Insn 7(l0): point = 26
   Insn 6(l0): point = 28
   Insn 2(l0): point = 30
 a0(r94): [3..4]
 a1(r93): [5..6]
 a2(r92): [7..8]
 a3(r98): [9..10]
 a4(r99): [11..12]
 a5(r97): [11..14]
 a6(r91): [15..16]
 a7(r90): [17..18]
 a8(r88): [17..24]
 a9(r89): [19..20]
 a10(r96): [21..22]
 a11(r87): [25..26]
 a12(r95): [27..28]
Compressing live ranges: from 33 to 22 - 66%
Ranges after the compression:
 a0(r94): [0..1]
 a1(r93): [2..3]
 a2(r92): [4..5]
 a3(r98): [6..7]
 a4(r99): [8..9]
 a5(r97): [8..9]
 a6(r91): [10..11]
 a7(r90): [12..13]
 a8(r88): [12..17]
 a9(r89): [14..15]
 a10(r96): [16..17]
 a11(r87): [18..19]
 a12(r95): [20..21]
  regions=1, blocks=3, points=22
    allocnos=13 (big 0), copies=0, conflicts=0, ranges=13
Disposition:
   11:r87  l0     0    8:r88  l0     1    9:r89  l0     0    7:r90  l0     0
    6:r91  l0     0    2:r92  l0     0    1:r93  l0     0    0:r94  l0     0
   12:r95  l0     0   10:r96  l0     0    5:r97  l0     1    3:r98  l0     0
    4:r99  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::capacity() const [with _Tp = sf::Vertex; _Alloc = std::allocator<sf::Vertex>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 5 [di] 6 [bp] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r17={3d} r20={1d,5u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} 
;;    total ref usage 62{36d,26u,0e} in 16{16 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 17 [flags] 87 88 89 90 91 92 93 94 95 96 97 98 99
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [62 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "/usr/include/c++/7/bits/stl_vector.h":750 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/stl_vector.h":751 81 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (plus:DI (reg/f:DI 95)
                (const_int 16 [0x10])) [26 this_8(D)->D.59661._M_impl._M_end_of_storage+0 S8 A64])) "/usr/include/c++/7/bits/stl_vector.h":751 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95)
        (nil)))
(insn 8 7 9 2 (set (reg:DI 88 [ _2 ])
        (reg/f:DI 87 [ _1 ])) "/usr/include/c++/7/bits/stl_vector.h":752 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _1 ])
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/stl_vector.h":752 81 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg/f:DI 89 [ _3 ])
        (mem/f:DI (reg/f:DI 96) [26 this_8(D)->D.59661._M_impl._M_start+0 S8 A64])) "/usr/include/c++/7/bits/stl_vector.h":752 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 96)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 90 [ _4 ])
        (reg/f:DI 89 [ _3 ])) "/usr/include/c++/7/bits/stl_vector.h":752 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ _3 ])
        (nil)))
(insn 12 11 13 2 (parallel [
            (set (reg:DI 91 [ _5 ])
                (minus:DI (reg:DI 88 [ _2 ])
                    (reg:DI 90 [ _4 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/stl_vector.h":752 274 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 90 [ _4 ])
        (expr_list:REG_DEAD (reg:DI 88 [ _2 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 13 12 14 2 (parallel [
            (set (reg:DI 97)
                (ashiftrt:DI (reg:DI 91 [ _5 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/stl_vector.h":752 547 {*ashrdi3_1}
     (expr_list:REG_DEAD (reg:DI 91 [ _5 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 14 13 15 2 (set (reg:DI 99)
        (const_int -3689348814741910323 [0xcccccccccccccccd])) "/usr/include/c++/7/bits/stl_vector.h":752 81 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (parallel [
            (set (reg:DI 98)
                (mult:DI (reg:DI 97)
                    (reg:DI 99)))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/stl_vector.h":752 329 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 99)
        (expr_list:REG_DEAD (reg:DI 97)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 16 15 17 2 (set (reg:DI 92 [ _6 ])
        (reg:DI 98)) "/usr/include/c++/7/bits/stl_vector.h":752 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 98)
        (nil)))
(insn 17 16 20 2 (set (reg:DI 93 [ _9 ])
        (reg:DI 92 [ _6 ])) "/usr/include/c++/7/bits/stl_vector.h":752 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92 [ _6 ])
        (nil)))
(insn 20 17 24 2 (set (reg:DI 94 [ <retval> ])
        (reg:DI 93 [ _9 ])) "/usr/include/c++/7/bits/stl_vector.h":752 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93 [ _9 ])
        (nil)))
(insn 24 20 25 2 (set (reg/i:DI 0 ax)
        (reg:DI 94 [ <retval> ])) "/usr/include/c++/7/bits/stl_vector.h":752 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94 [ <retval> ])
        (nil)))
(insn 25 24 0 2 (use (reg/i:DI 0 ax)) "/usr/include/c++/7/bits/stl_vector.h":752 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::begin() const [with _Tp = sf::Vertex; _Alloc = std::allocator<sf::Vertex>] (_ZNKSt6vectorIN2sf6VertexESaIS1_EE5beginEv, funcdef_no=3673, decl_uid=59157, cgraph_uid=1190, symbol_order=1194)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 4 count 5 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { }
;; 4 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 25.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r92,l0) best DIREG, allocno GENERAL_REGS
    r91: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r91,l0) best SIREG, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a3(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a4(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a5(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 28(l0): point = 0
   Insn 25(l0): point = 3
   Insn 24(l0): point = 6
   Insn 23(l0): point = 8
   Insn 22(l0): point = 10
   Insn 18(l0): point = 12
   Insn 15(l0): point = 14
   Insn 14(l0): point = 16
   Insn 13(l0): point = 18
   Insn 12(l0): point = 20
   Insn 11(l0): point = 22
   Insn 10(l0): point = 24
   Insn 9(l0): point = 26
   Insn 8(l0): point = 28
   Insn 7(l0): point = 30
   Insn 4(l0): point = 32
   Insn 2(l0): point = 34
 a0(r89): [11..12]
 a1(r88): [13..14]
 a2(r92): [19..22]
 a3(r91): [21..24]
 a4(r87): [27..28]
 a5(r90): [29..30]
Compressing live ranges: from 37 to 10 - 27%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r88): [2..3]
 a2(r92): [4..5]
 a3(r91): [4..5]
 a4(r87): [6..7]
 a5(r90): [8..9]
  regions=1, blocks=5, points=10
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    4:r87  l0     0    1:r88  l0     0    0:r89  l0     0    5:r90  l0     0
    3:r91  l0     1    2:r92  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::begin() const [with _Tp = sf::Vertex; _Alloc = std::allocator<sf::Vertex>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={4d,2u} r1={3d} r2={3d} r4={4d,1u} r5={4d,2u} r6={1d,4u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u} r17={6d,1u} r18={2d} r19={2d} r20={1d,12u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} 
;;    total ref usage 213{176d,37u,0e} in 17{15 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [62 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "/usr/include/c++/7/bits/stl_vector.h":572 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [5 D.82394+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/stl_vector.h":572 1002 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 7 4 8 2 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/stl_vector.h":573 81 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (reg/f:DI 90) [26 this_3(D)->D.59661._M_impl._M_start+0 S8 A64])) "/usr/include/c++/7/bits/stl_vector.h":573 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90)
        (nil)))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [26 D.79987+0 S8 A64])
        (reg/f:DI 87 [ _1 ])) "/usr/include/c++/7/bits/stl_vector.h":573 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _1 ])
        (nil)))
(insn 10 9 11 2 (parallel [
            (set (reg:DI 91)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/stl_vector.h":573 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 11 10 12 2 (parallel [
            (set (reg:DI 92)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/stl_vector.h":573 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 4 si)
        (reg:DI 91)) "/usr/include/c++/7/bits/stl_vector.h":573 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg:DI 92)) "/usr/include/c++/7/bits/stl_vector.h":573 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92)
        (nil)))
(call_insn 14 13 15 2 (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEC1ERKS4_") [flags 0x3]  <function_decl 0x7f7f8ce24100 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) "/usr/include/c++/7/bits/stl_vector.h":573 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 15 14 18 2 (set (reg:DI 88 [ D.82119 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [68 D.79988+0 S8 A64])) "/usr/include/c++/7/bits/stl_vector.h":573 81 {*movdi_internal}
     (nil))
(insn 18 15 22 2 (set (reg:DI 89 [ <retval> ])
        (reg:DI 88 [ D.82119 ])) "/usr/include/c++/7/bits/stl_vector.h":573 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ D.82119 ])
        (nil)))
(insn 22 18 23 2 (set (reg/i:DI 0 ax)
        (reg:DI 89 [ <retval> ])) "/usr/include/c++/7/bits/stl_vector.h":573 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89 [ <retval> ])
        (nil)))
(insn 23 22 24 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [5 D.82394+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) "/usr/include/c++/7/bits/stl_vector.h":573 1006 {stack_tls_protect_test_di}
     (nil))
(jump_insn 24 23 30 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) "/usr/include/c++/7/bits/stl_vector.h":573 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 27)
;;  succ:       4
;;              3 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 30 24 25 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 25 30 26 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f7f8c72b800 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "/usr/include/c++/7/bits/stl_vector.h":573 655 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 26 25 27)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (RTL)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 27 26 31 4 92 (nil) [1 uses])
(note 31 27 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 28 31 0 4 (use (reg/i:DI 0 ax)) "/usr/include/c++/7/bits/stl_vector.h":573 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::end() const [with _Tp = sf::Vertex; _Alloc = std::allocator<sf::Vertex>] (_ZNKSt6vectorIN2sf6VertexESaIS1_EE3endEv, funcdef_no=3674, decl_uid=59161, cgraph_uid=1191, symbol_order=1195)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 4 count 5 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { }
;; 4 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 25.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r92,l0) best DIREG, allocno GENERAL_REGS
    r91: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r91,l0) best SIREG, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a3(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a4(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a5(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 28(l0): point = 0
   Insn 25(l0): point = 3
   Insn 24(l0): point = 6
   Insn 23(l0): point = 8
   Insn 22(l0): point = 10
   Insn 18(l0): point = 12
   Insn 15(l0): point = 14
   Insn 14(l0): point = 16
   Insn 13(l0): point = 18
   Insn 12(l0): point = 20
   Insn 11(l0): point = 22
   Insn 10(l0): point = 24
   Insn 9(l0): point = 26
   Insn 8(l0): point = 28
   Insn 7(l0): point = 30
   Insn 4(l0): point = 32
   Insn 2(l0): point = 34
 a0(r89): [11..12]
 a1(r88): [13..14]
 a2(r92): [19..22]
 a3(r91): [21..24]
 a4(r87): [27..28]
 a5(r90): [29..30]
Compressing live ranges: from 37 to 10 - 27%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r88): [2..3]
 a2(r92): [4..5]
 a3(r91): [4..5]
 a4(r87): [6..7]
 a5(r90): [8..9]
  regions=1, blocks=5, points=10
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    4:r87  l0     0    1:r88  l0     0    0:r89  l0     0    5:r90  l0     0
    3:r91  l0     1    2:r92  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::vector<_Tp, _Alloc>::const_iterator std::vector<_Tp, _Alloc>::end() const [with _Tp = sf::Vertex; _Alloc = std::allocator<sf::Vertex>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={4d,2u} r1={3d} r2={3d} r4={4d,1u} r5={4d,2u} r6={1d,4u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u} r17={6d,1u} r18={2d} r19={2d} r20={1d,12u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} 
;;    total ref usage 213{176d,37u,0e} in 17{15 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [62 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "/usr/include/c++/7/bits/stl_vector.h":590 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [5 D.82395+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/stl_vector.h":590 1002 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 7 4 8 2 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/stl_vector.h":591 81 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (plus:DI (reg/f:DI 90)
                (const_int 8 [0x8])) [26 this_3(D)->D.59661._M_impl._M_finish+0 S8 A64])) "/usr/include/c++/7/bits/stl_vector.h":591 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90)
        (nil)))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [26 D.79990+0 S8 A64])
        (reg/f:DI 87 [ _1 ])) "/usr/include/c++/7/bits/stl_vector.h":591 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _1 ])
        (nil)))
(insn 10 9 11 2 (parallel [
            (set (reg:DI 91)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/stl_vector.h":591 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 11 10 12 2 (parallel [
            (set (reg:DI 92)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/stl_vector.h":591 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 4 si)
        (reg:DI 91)) "/usr/include/c++/7/bits/stl_vector.h":591 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg:DI 92)) "/usr/include/c++/7/bits/stl_vector.h":591 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92)
        (nil)))
(call_insn 14 13 15 2 (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEC1ERKS4_") [flags 0x3]  <function_decl 0x7f7f8ce24100 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) "/usr/include/c++/7/bits/stl_vector.h":591 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 15 14 18 2 (set (reg:DI 88 [ D.82115 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [68 D.79991+0 S8 A64])) "/usr/include/c++/7/bits/stl_vector.h":591 81 {*movdi_internal}
     (nil))
(insn 18 15 22 2 (set (reg:DI 89 [ <retval> ])
        (reg:DI 88 [ D.82115 ])) "/usr/include/c++/7/bits/stl_vector.h":591 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ D.82115 ])
        (nil)))
(insn 22 18 23 2 (set (reg/i:DI 0 ax)
        (reg:DI 89 [ <retval> ])) "/usr/include/c++/7/bits/stl_vector.h":591 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89 [ <retval> ])
        (nil)))
(insn 23 22 24 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [5 D.82395+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) "/usr/include/c++/7/bits/stl_vector.h":591 1006 {stack_tls_protect_test_di}
     (nil))
(jump_insn 24 23 30 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) "/usr/include/c++/7/bits/stl_vector.h":591 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 27)
;;  succ:       4
;;              3 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 30 24 25 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 25 30 26 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f7f8c72b800 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "/usr/include/c++/7/bits/stl_vector.h":591 655 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 26 25 27)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (RTL)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 27 26 31 4 95 (nil) [1 uses])
(note 31 27 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 28 31 0 4 (use (reg/i:DI 0 ax)) "/usr/include/c++/7/bits/stl_vector.h":591 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::vector<_Tp, _Alloc>::pointer std::vector<_Tp, _Alloc>::_M_allocate_and_copy(std::vector<_Tp, _Alloc>::size_type, _ForwardIterator, _ForwardIterator) [with _ForwardIterator = __gnu_cxx::__normal_iterator<const sf::Vertex*, std::vector<sf::Vertex> >; _Tp = sf::Vertex; _Alloc = std::allocator<sf::Vertex>] (_ZNSt6vectorIN2sf6VertexESaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_mT_SB_, funcdef_no=3675, decl_uid=79334, cgraph_uid=1192, symbol_order=1196)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 8 count 8 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 4 3 }
;; 3 succs { 7 }
;; 4 succs { 6 5 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 27.
verify found no changes in insn with uid = 39.
verify found no changes in insn with uid = 46.
verify found no changes in insn with uid = 48.
verify found no changes in insn with uid = 52.
verify found no changes in insn with uid = 55.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r104: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r104,l0) best AREG, allocno GENERAL_REGS
    r103: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r103,l0) best SIREG, allocno GENERAL_REGS
    r102: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r102,l0) best DREG, allocno GENERAL_REGS
    r101: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r101,l0) best AREG, allocno GENERAL_REGS
    r99: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r99,l0) best DIREG, allocno GENERAL_REGS
    r98: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r98,l0) best SIREG, allocno GENERAL_REGS
    r97: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r97,l0) best DREG, allocno GENERAL_REGS
    r96: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r96,l0) best SIREG, allocno GENERAL_REGS
    r95: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r95,l0) best AREG, allocno GENERAL_REGS
    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r94,l0) best DIREG, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r92,l0) best AREG, allocno GENERAL_REGS
    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a3(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a5(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a6(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a7(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a8(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a9(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a10(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a11(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a12(r89,l0) costs: AREG:0 DREG:0 CREG:-1 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a13(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a14(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a15(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a16(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 59(l0): point = 0
   Insn 58(l0): point = 2
   Insn 55(l0): point = 5
   Insn 54(l0): point = 7
   Insn 53(l0): point = 9
   Insn 52(l0): point = 11
   Insn 65(l0): point = 13
   Insn 48(l0): point = 16
   Insn 46(l0): point = 19
   Insn 45(l0): point = 21
   Insn 44(l0): point = 23
   Insn 43(l0): point = 25
   Insn 42(l0): point = 27
   Insn 41(l0): point = 29
   Insn 40(l0): point = 31
   Insn 39(l0): point = 33
   Insn 38(l0): point = 35
   Insn 37(l0): point = 37
   Insn 62(l0): point = 39
   Insn 68(l0): point = 42
   Insn 32(l0): point = 44
   Insn 29(l0): point = 46
   Insn 27(l0): point = 49
   Insn 26(l0): point = 51
   Insn 25(l0): point = 53
   Insn 24(l0): point = 55
   Insn 23(l0): point = 57
   Insn 22(l0): point = 59
   Insn 21(l0): point = 61
   Insn 20(l0): point = 63
   Insn 19(l0): point = 65
   Insn 18(l0): point = 67
   Insn 17(l0): point = 69
   Insn 16(l0): point = 71
   Insn 15(l0): point = 73
   Insn 14(l0): point = 75
   Insn 13(l0): point = 77
   Insn 12(l0): point = 79
   Insn 11(l0): point = 81
   Insn 10(l0): point = 83
   Insn 9(l0): point = 85
   Insn 5(l0): point = 87
   Insn 4(l0): point = 89
   Insn 3(l0): point = 91
   Insn 2(l0): point = 93
 a0(r95): [42..44] [3..4]
 a1(r94): [8..9]
 a2(r104): [10..13]
 a3(r91): [22..31]
 a4(r103): [24..27]
 a5(r102): [26..29]
 a6(r90): [36..37]
 a7(r101): [38..39]
 a8(r93): [45..46]
 a9(r99): [52..59]
 a10(r98): [54..61]
 a11(r97): [56..63]
 a12(r89): [58..65]
 a13(r88): [70..71]
 a14(r92): [74..75]
 a15(r87): [80..85]
 a16(r96): [82..83]
Compressing live ranges: from 96 to 24 - 25%
Ranges after the compression:
 a0(r95): [12..13] [0..1]
 a1(r94): [2..3]
 a2(r104): [4..5]
 a3(r91): [6..7]
 a4(r103): [6..7]
 a5(r102): [6..7]
 a6(r90): [8..9]
 a7(r101): [10..11]
 a8(r93): [14..15]
 a9(r99): [16..17]
 a10(r98): [16..17]
 a11(r97): [16..17]
 a12(r89): [16..17]
 a13(r88): [18..19]
 a14(r92): [20..21]
 a15(r87): [22..23]
 a16(r96): [22..23]
  regions=1, blocks=8, points=24
    allocnos=17 (big 0), copies=0, conflicts=0, ranges=18
Disposition:
   15:r87  l0     0   13:r88  l0     0   12:r89  l0     2    6:r90  l0     0
    3:r91  l0     0   14:r92  l0     0    8:r93  l0     0    1:r94  l0     0
    0:r95  l0     0   16:r96  l0     1   11:r97  l0     1   10:r98  l0     4
    9:r99  l0     0    7:r101 l0     0    5:r102 l0     1    4:r103 l0     2
    2:r104 l0     3
+++Costs: overall -16, reg -16, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::vector<_Tp, _Alloc>::pointer std::vector<_Tp, _Alloc>::_M_allocate_and_copy(std::vector<_Tp, _Alloc>::size_type, _ForwardIterator, _ForwardIterator) [with _ForwardIterator = __gnu_cxx::__normal_iterator<const sf::Vertex*, std::vector<sf::Vertex> >; _Tp = sf::Vertex; _Alloc = std::allocator<sf::Vertex>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={12d,6u} r1={13d,3u} r2={10d,2u} r4={12d,4u} r5={15d,7u} r6={1d,7u} r7={1d,15u} r8={8d} r9={8d} r10={8d} r11={8d} r12={8d} r13={8d} r14={8d} r15={8d} r16={1d,6u} r17={8d} r18={8d} r19={8d} r20={1d,22u} r21={9d} r22={9d} r23={9d} r24={9d} r25={9d} r26={9d} r27={9d} r28={9d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={8d} r37={9d} r38={9d} r39={8d} r40={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r76={8d} r77={8d} r78={8d} r79={8d} r80={8d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} 
;;    total ref usage 718{629d,89u,0e} in 45{37 regular + 8 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 92 96 97 98 99
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [62 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "/usr/include/c++/7/bits/stl_vector.h":1257 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [4 __n+0 S8 A64])
        (reg:DI 4 si [ __n ])) "/usr/include/c++/7/bits/stl_vector.h":1257 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __n ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [68 __first+0 S8 A64])
        (reg:DI 1 dx [ __first ])) "/usr/include/c++/7/bits/stl_vector.h":1257 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __first ])
        (nil)))
(insn 5 4 6 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [68 __last+0 S8 A64])
        (reg:DI 2 cx [ __last ])) "/usr/include/c++/7/bits/stl_vector.h":1257 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ __last ])
        (nil)))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg/f:DI 87 [ _1 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/stl_vector.h":1260 81 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 96)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [4 __n+0 S8 A64])) "/usr/include/c++/7/bits/stl_vector.h":1260 81 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 4 si)
        (reg:DI 96)) "/usr/include/c++/7/bits/stl_vector.h":1260 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ _1 ])) "/usr/include/c++/7/bits/stl_vector.h":1260 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _1 ])
        (nil)))
(call_insn 13 12 14 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE11_M_allocateEm") [flags 0x3]  <function_decl 0x7f7f8d985f00 _M_allocate>) [0 _M_allocate S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/stl_vector.h":1260 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 14 13 15 2 (set (reg/f:DI 92 [ _11 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/stl_vector.h":1260 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 15 14 16 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [26 __result+0 S8 A64])
        (reg/f:DI 92 [ _11 ])) "/usr/include/c++/7/bits/stl_vector.h":1260 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ _11 ])
        (nil)))
(insn 16 15 17 2 (set (reg/f:DI 88 [ _2 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/stl_vector.h":1264 81 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (reg/f:DI 88 [ _2 ])) "/usr/include/c++/7/bits/stl_vector.h":1264 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ _2 ])
        (nil)))
(call_insn 18 17 19 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE19_M_get_Tp_allocatorEv") [flags 0x3]  <function_decl 0x7f7f8d964700 _M_get_Tp_allocator>) [0 _M_get_Tp_allocator S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/stl_vector.h":1264 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 19 18 20 2 (set (reg/f:DI 89 [ _3 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/stl_vector.h":1264 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 20 19 21 2 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [26 __result+0 S8 A64])) "/usr/include/c++/7/bits/stl_vector.h":1263 81 {*movdi_internal}
     (nil))
(insn 21 20 22 2 (set (reg:DI 98)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [68 __last+0 S8 A64])) "/usr/include/c++/7/bits/stl_vector.h":1263 81 {*movdi_internal}
     (nil))
(insn 22 21 23 2 (set (reg:DI 99)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [68 __first+0 S8 A64])) "/usr/include/c++/7/bits/stl_vector.h":1263 81 {*movdi_internal}
     (nil))
(insn 23 22 24 2 (set (reg:DI 2 cx)
        (reg/f:DI 89 [ _3 ])) "/usr/include/c++/7/bits/stl_vector.h":1263 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ _3 ])
        (nil)))
(insn 24 23 25 2 (set (reg:DI 1 dx)
        (reg:DI 97)) "/usr/include/c++/7/bits/stl_vector.h":1263 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 97)
        (nil)))
(insn 25 24 26 2 (set (reg:DI 4 si)
        (reg:DI 98)) "/usr/include/c++/7/bits/stl_vector.h":1263 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 98)
        (nil)))
(insn 26 25 27 2 (set (reg:DI 5 di)
        (reg:DI 99)) "/usr/include/c++/7/bits/stl_vector.h":1263 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 99)
        (nil)))
(call_insn 27 26 28 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E") [flags 0x3]  <function_decl 0x7f7f8caef700 __uninitialized_copy_a>) [0 __uninitialized_copy_a S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/stl_vector.h":1263 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_UNUSED (reg:DI 0 ax)
                        (expr_list:REG_EH_REGION (const_int 1 [0x1])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       4 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 93 95
(note 28 27 29 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 32 3 (set (reg/f:DI 93 [ _15 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [26 __result+0 S8 A64])) "/usr/include/c++/7/bits/stl_vector.h":1265 81 {*movdi_internal}
     (nil))
(insn 32 29 68 3 (set (reg/f:DI 95 [ <retval> ])
        (reg/f:DI 93 [ _15 ])) "/usr/include/c++/7/bits/stl_vector.h":1265 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ _15 ])
        (nil)))
(jump_insn 68 32 69 3 (set (pc)
        (label_ref 67)) "/usr/include/c++/7/bits/stl_vector.h":1265 649 {jump}
     (nil)
 -> 67)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95

(barrier 69 68 61)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 4 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 90 91 101 102 103
(code_label/s 61 69 63 4 100 (nil) [1 uses])
(note 63 61 62 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 62 63 37 4 (set (reg:DI 101)
        (reg:DI 0 ax)) 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 37 62 38 4 (set (reg/f:DI 90 [ _4 ])
        (reg:DI 101)) "/usr/include/c++/7/bits/stl_vector.h":1267 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 101)
        (nil)))
(insn 38 37 39 4 (set (reg:DI 5 di)
        (reg/f:DI 90 [ _4 ])) "/usr/include/c++/7/bits/stl_vector.h":1267 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ _4 ])
        (nil)))
(call_insn 39 38 40 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_begin_catch") [flags 0x41]  <function_decl 0x7f7f8ed23100 __cxa_begin_catch>) [0 __cxa_begin_catch S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/stl_vector.h":1267 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:DI 0 ax)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 40 39 41 4 (set (reg/f:DI 91 [ _5 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/stl_vector.h":1269 81 {*movdi_internal}
     (nil))
(insn 41 40 42 4 (set (reg:DI 102)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [4 __n+0 S8 A64])) "/usr/include/c++/7/bits/stl_vector.h":1269 81 {*movdi_internal}
     (nil))
(insn 42 41 43 4 (set (reg:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [26 __result+0 S8 A64])) "/usr/include/c++/7/bits/stl_vector.h":1269 81 {*movdi_internal}
     (nil))
(insn 43 42 44 4 (set (reg:DI 1 dx)
        (reg:DI 102)) "/usr/include/c++/7/bits/stl_vector.h":1269 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 102)
        (nil)))
(insn 44 43 45 4 (set (reg:DI 4 si)
        (reg:DI 103)) "/usr/include/c++/7/bits/stl_vector.h":1269 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 103)
        (nil)))
(insn 45 44 46 4 (set (reg:DI 5 di)
        (reg/f:DI 91 [ _5 ])) "/usr/include/c++/7/bits/stl_vector.h":1269 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ _5 ])
        (nil)))
(call_insn 46 45 47 4 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE13_M_deallocateEPS1_m") [flags 0x3]  <function_decl 0x7f7f8d98d000 _M_deallocate>) [0 _M_deallocate S1 A8])
        (const_int 0 [0])) "/usr/include/c++/7/bits/stl_vector.h":1269 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 2 [0x2])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       6 (ABNORMAL,ABNORMAL_CALL,EH)
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 47 46 48 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(call_insn 48 47 49 5 (call (mem:QI (symbol_ref:DI ("__cxa_rethrow") [flags 0x41]  <function_decl 0x7f7f8caef900 __cxa_rethrow>) [0 __cxa_rethrow S1 A8])
        (const_int 0 [0])) "/usr/include/c++/7/bits/stl_vector.h":1270 655 {*call}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:       6 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 49 48 64)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       4 (ABNORMAL,ABNORMAL_CALL,EH)
;;              5 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 6 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 94 104
(code_label/s 64 49 66 6 101 (nil) [1 uses])
(note 66 64 65 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 65 66 52 6 (set (reg:DI 104)
        (reg:DI 0 ax)) 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(call_insn 52 65 53 6 (call (mem:QI (symbol_ref:DI ("__cxa_end_catch") [flags 0x41]  <function_decl 0x7f7f8ed23000 __cxa_end_catch>) [0 __cxa_end_catch S1 A8])
        (const_int 0 [0])) "/usr/include/c++/7/bits/stl_vector.h":1267 655 {*call}
     (expr_list:REG_EH_REGION (const_int -3 [0xfffffffffffffffd])
        (nil))
    (nil))
(insn 53 52 54 6 (set (reg/f:DI 94 [ D.82396 ])
        (reg:DI 104)) 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 104)
        (nil)))
(insn 54 53 55 6 (set (reg:DI 5 di)
        (reg/f:DI 94 [ D.82396 ])) 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ D.82396 ])
        (nil)))
(call_insn 55 54 56 6 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f7f904ed100 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 56 55 67)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 1, flags: (RTL)
;;  pred:       3 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95
;; lr  def 	 0 [ax]
(code_label 67 56 60 7 102 (nil) [1 uses])
(note 60 67 58 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 58 60 59 7 (set (reg/i:DI 0 ax)
        (reg/f:DI 95 [ <retval> ])) "/usr/include/c++/7/bits/stl_vector.h":1272 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ <retval> ])
        (nil)))
(insn 59 58 0 7 (use (reg/i:DI 0 ax)) "/usr/include/c++/7/bits/stl_vector.h":1272 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = sf::Vertex*; _Tp = sf::Vertex] (_ZSt8_DestroyIPN2sf6VertexES1_EvT_S3_RSaIT0_E, funcdef_no=3676, decl_uid=79366, cgraph_uid=1193, symbol_order=1197)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best SIREG, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 15(l0): point = 0
   Insn 12(l0): point = 2
   Insn 11(l0): point = 4
   Insn 10(l0): point = 6
   Insn 9(l0): point = 8
   Insn 8(l0): point = 10
   Insn 4(l0): point = 12
   Insn 3(l0): point = 14
   Insn 2(l0): point = 16
 a0(r88): [5..8]
 a1(r87): [7..10]
Compressing live ranges: from 19 to 2 - 10%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [0..1]
  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     1    0:r88  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = sf::Vertex*; _Tp = sf::Vertex]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={2d} r1={2d,1u} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,7u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 115{95d,20u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [26 __first+0 S8 A64])
        (reg:DI 5 di [ __first ])) "/usr/include/c++/7/bits/stl_construct.h":203 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [26 __last+0 S8 A64])
        (reg:DI 4 si [ __last ])) "/usr/include/c++/7/bits/stl_construct.h":203 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __last ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [66 D.79369+0 S8 A64])
        (reg:DI 1 dx [ D.79369 ])) "/usr/include/c++/7/bits/stl_construct.h":203 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ D.79369 ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [26 __last+0 S8 A64])) "/usr/include/c++/7/bits/stl_construct.h":206 81 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [26 __first+0 S8 A64])) "/usr/include/c++/7/bits/stl_construct.h":206 81 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg:DI 87)) "/usr/include/c++/7/bits/stl_construct.h":206 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg:DI 88)) "/usr/include/c++/7/bits/stl_construct.h":206 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(call_insn 12 11 15 2 (call (mem:QI (symbol_ref/i:DI ("_ZSt8_DestroyIPN2sf6VertexEEvT_S3_") [flags 0x3]  <function_decl 0x7f7f8caefb00 _Destroy>) [0 _Destroy S1 A8])
        (const_int 0 [0])) "/usr/include/c++/7/bits/stl_construct.h":206 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 15 12 0 2 (const_int 0 [0]) "/usr/include/c++/7/bits/stl_construct.h":207 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = sf::Vertex; _Alloc = std::allocator<sf::Vertex>] (_ZNSt6vectorIN2sf6VertexESaIS1_EE5beginEv, funcdef_no=3677, decl_uid=59155, cgraph_uid=1194, symbol_order=1198)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 4 count 5 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { }
;; 4 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 22.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r87,l0) best SIREG, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a3(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 25(l0): point = 0
   Insn 22(l0): point = 3
   Insn 21(l0): point = 6
   Insn 20(l0): point = 8
   Insn 19(l0): point = 10
   Insn 15(l0): point = 12
   Insn 12(l0): point = 14
   Insn 11(l0): point = 16
   Insn 10(l0): point = 18
   Insn 9(l0): point = 20
   Insn 8(l0): point = 22
   Insn 7(l0): point = 24
   Insn 4(l0): point = 26
   Insn 2(l0): point = 28
 a0(r89): [11..12]
 a1(r88): [13..14]
 a2(r90): [19..22]
 a3(r87): [21..24]
Compressing live ranges: from 31 to 6 - 19%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r88): [2..3]
 a2(r90): [4..5]
 a3(r87): [4..5]
  regions=1, blocks=5, points=6
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4
Disposition:
    3:r87  l0     1    1:r88  l0     0    0:r89  l0     0    2:r90  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = sf::Vertex; _Alloc = std::allocator<sf::Vertex>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={4d,2u} r1={3d} r2={3d} r4={4d,1u} r5={4d,2u} r6={1d,4u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u} r17={5d,1u} r18={2d} r19={2d} r20={1d,10u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 206{173d,33u,0e} in 14{12 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [62 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "/usr/include/c++/7/bits/stl_vector.h":563 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [5 D.82397+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/stl_vector.h":563 1002 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 7 4 8 2 (set (reg/f:DI 87 [ _1 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/stl_vector.h":564 81 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg:DI 90)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/stl_vector.h":564 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (reg/f:DI 87 [ _1 ])) "/usr/include/c++/7/bits/stl_vector.h":564 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _1 ])
        (nil)))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 90)) "/usr/include/c++/7/bits/stl_vector.h":564 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(call_insn 11 10 12 2 (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx17__normal_iteratorIPN2sf6VertexESt6vectorIS2_SaIS2_EEEC1ERKS3_") [flags 0x3]  <function_decl 0x7f7f8ce3b500 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) "/usr/include/c++/7/bits/stl_vector.h":564 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 12 11 15 2 (set (reg:DI 88 [ D.82112 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [69 D.80012+0 S8 A64])) "/usr/include/c++/7/bits/stl_vector.h":564 81 {*movdi_internal}
     (nil))
(insn 15 12 19 2 (set (reg:DI 89 [ <retval> ])
        (reg:DI 88 [ D.82112 ])) "/usr/include/c++/7/bits/stl_vector.h":564 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ D.82112 ])
        (nil)))
(insn 19 15 20 2 (set (reg/i:DI 0 ax)
        (reg:DI 89 [ <retval> ])) "/usr/include/c++/7/bits/stl_vector.h":564 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89 [ <retval> ])
        (nil)))
(insn 20 19 21 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [5 D.82397+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) "/usr/include/c++/7/bits/stl_vector.h":564 1006 {stack_tls_protect_test_di}
     (nil))
(jump_insn 21 20 27 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) "/usr/include/c++/7/bits/stl_vector.h":564 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 24)
;;  succ:       4
;;              3 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 27 21 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 22 27 23 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f7f8c72b800 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "/usr/include/c++/7/bits/stl_vector.h":564 655 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 23 22 24)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (RTL)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 24 23 28 4 106 (nil) [1 uses])
(note 28 24 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 25 28 0 4 (use (reg/i:DI 0 ax)) "/usr/include/c++/7/bits/stl_vector.h":564 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _OI std::copy(_II, _II, _OI) [with _II = __gnu_cxx::__normal_iterator<const sf::Vertex*, std::vector<sf::Vertex> >; _OI = __gnu_cxx::__normal_iterator<sf::Vertex*, std::vector<sf::Vertex> >] (_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET0_T_SD_SC_, funcdef_no=3678, decl_uid=79475, cgraph_uid=1195, symbol_order=1199)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 20.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r93: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r93,l0) best DREG, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r92,l0) best DIREG, allocno GENERAL_REGS
    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a3(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a4(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a5(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a6(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 29(l0): point = 0
   Insn 28(l0): point = 2
   Insn 24(l0): point = 4
   Insn 21(l0): point = 6
   Insn 20(l0): point = 8
   Insn 19(l0): point = 10
   Insn 18(l0): point = 12
   Insn 17(l0): point = 14
   Insn 16(l0): point = 16
   Insn 15(l0): point = 18
   Insn 14(l0): point = 20
   Insn 13(l0): point = 22
   Insn 12(l0): point = 24
   Insn 11(l0): point = 26
   Insn 10(l0): point = 28
   Insn 9(l0): point = 30
   Insn 8(l0): point = 32
   Insn 4(l0): point = 34
   Insn 3(l0): point = 36
   Insn 2(l0): point = 38
 a0(r90): [3..4]
 a1(r89): [5..6]
 a2(r87): [11..18]
 a3(r88): [13..26]
 a4(r93): [15..16]
 a5(r92): [23..24]
 a6(r91): [31..32]
Compressing live ranges: from 41 to 10 - 24%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r89): [2..3]
 a2(r87): [4..5]
 a3(r88): [4..7]
 a4(r93): [4..5]
 a5(r92): [6..7]
 a6(r91): [8..9]
  regions=1, blocks=3, points=10
    allocnos=7 (big 0), copies=0, conflicts=0, ranges=7
Disposition:
    2:r87  l0     2    3:r88  l0     3    1:r89  l0     0    0:r90  l0     0
    6:r91  l0     0    5:r92  l0     0    4:r93  l0     0
+++Costs: overall -7, reg -7, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_OI std::copy(_II, _II, _OI) [with _II = __gnu_cxx::__normal_iterator<const sf::Vertex*, std::vector<sf::Vertex> >; _OI = __gnu_cxx::__normal_iterator<sf::Vertex*, std::vector<sf::Vertex> >]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={5d,5u} r1={5d,2u} r2={4d} r4={5d,2u} r5={7d,4u} r6={1d,2u} r7={1d,5u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,1u} r17={3d} r18={3d} r19={3d} r20={1d,8u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} 
;;    total ref usage 284{248d,36u,0e} in 20{17 regular + 3 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [68 __first+0 S8 A64])
        (reg:DI 5 di [ __first ])) "/usr/include/c++/7/bits/stl_algobase.h":446 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [68 __last+0 S8 A64])
        (reg:DI 4 si [ __last ])) "/usr/include/c++/7/bits/stl_algobase.h":446 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __last ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [69 __result+0 S8 A64])
        (reg:DI 1 dx [ __result ])) "/usr/include/c++/7/bits/stl_algobase.h":446 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __result ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 91)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [68 __last+0 S8 A64])) "/usr/include/c++/7/bits/stl_algobase.h":455 81 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 91)) "/usr/include/c++/7/bits/stl_algobase.h":455 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (nil)))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS3_SaIS3_EEEEET_SA_") [flags 0x3]  <function_decl 0x7f7f8caeff00 __miter_base>) [0 __miter_base S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/stl_algobase.h":455 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 88 [ D.82124 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/stl_algobase.h":455 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 92)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [68 __first+0 S8 A64])) "/usr/include/c++/7/bits/stl_algobase.h":455 81 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg:DI 92)) "/usr/include/c++/7/bits/stl_algobase.h":455 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92)
        (nil)))
(call_insn 14 13 15 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS3_SaIS3_EEEEET_SA_") [flags 0x3]  <function_decl 0x7f7f8caeff00 __miter_base>) [0 __miter_base S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/stl_algobase.h":455 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg:DI 87 [ D.82125 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/stl_algobase.h":455 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 16 15 17 2 (set (reg:DI 93)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [69 __result+0 S8 A64])) "/usr/include/c++/7/bits/stl_algobase.h":456 81 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:DI 1 dx)
        (reg:DI 93)) "/usr/include/c++/7/bits/stl_algobase.h":456 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (nil)))
(insn 18 17 19 2 (set (reg:DI 4 si)
        (reg:DI 88 [ D.82124 ])) "/usr/include/c++/7/bits/stl_algobase.h":456 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ D.82124 ])
        (nil)))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (reg:DI 87 [ D.82125 ])) "/usr/include/c++/7/bits/stl_algobase.h":456 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87 [ D.82125 ])
        (nil)))
(call_insn 20 19 21 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET1_T0_SD_SC_") [flags 0x3]  <function_decl 0x7f7f8cafe000 __copy_move_a2>) [0 __copy_move_a2 S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/stl_algobase.h":456 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 21 20 24 2 (set (reg:DI 89 [ D.82123 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/stl_algobase.h":456 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 24 21 28 2 (set (reg:DI 90 [ <retval> ])
        (reg:DI 89 [ D.82123 ])) "/usr/include/c++/7/bits/stl_algobase.h":456 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89 [ D.82123 ])
        (nil)))
(insn 28 24 29 2 (set (reg/i:DI 0 ax)
        (reg:DI 90 [ <retval> ])) "/usr/include/c++/7/bits/stl_algobase.h":457 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90 [ <retval> ])
        (nil)))
(insn 29 28 0 2 (use (reg/i:DI 0 ax)) "/usr/include/c++/7/bits/stl_algobase.h":457 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = sf::Vertex; _Alloc = std::allocator<sf::Vertex>] (_ZNSt6vectorIN2sf6VertexESaIS1_EE3endEv, funcdef_no=3679, decl_uid=59159, cgraph_uid=1196, symbol_order=1200)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 4 count 5 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { }
;; 4 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 23.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r87,l0) best SIREG, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a3(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a4(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 26(l0): point = 0
   Insn 23(l0): point = 3
   Insn 22(l0): point = 6
   Insn 21(l0): point = 8
   Insn 20(l0): point = 10
   Insn 16(l0): point = 12
   Insn 13(l0): point = 14
   Insn 12(l0): point = 16
   Insn 11(l0): point = 18
   Insn 10(l0): point = 20
   Insn 9(l0): point = 22
   Insn 8(l0): point = 24
   Insn 7(l0): point = 26
   Insn 4(l0): point = 28
   Insn 2(l0): point = 30
 a0(r89): [11..12]
 a1(r88): [13..14]
 a2(r91): [19..22]
 a3(r87): [21..24]
 a4(r90): [25..26]
Compressing live ranges: from 33 to 8 - 24%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r88): [2..3]
 a2(r91): [4..5]
 a3(r87): [4..5]
 a4(r90): [6..7]
  regions=1, blocks=5, points=8
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    3:r87  l0     1    1:r88  l0     0    0:r89  l0     0    4:r90  l0     0
    2:r91  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = sf::Vertex; _Alloc = std::allocator<sf::Vertex>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={4d,2u} r1={3d} r2={3d} r4={4d,1u} r5={4d,2u} r6={1d,4u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u} r17={6d,1u} r18={2d} r19={2d} r20={1d,10u,1e} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 210{175d,34u,1e} in 15{13 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [62 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "/usr/include/c++/7/bits/stl_vector.h":581 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [5 D.82398+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/stl_vector.h":581 1002 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 7 4 8 2 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/stl_vector.h":582 81 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg/f:DI 87 [ _1 ])
                (plus:DI (reg/f:DI 90)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/stl_vector.h":582 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 90)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [62 this+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 9 8 10 2 (parallel [
            (set (reg:DI 91)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/stl_vector.h":582 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg/f:DI 87 [ _1 ])) "/usr/include/c++/7/bits/stl_vector.h":582 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _1 ])
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg:DI 91)) "/usr/include/c++/7/bits/stl_vector.h":582 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (nil)))
(call_insn 12 11 13 2 (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx17__normal_iteratorIPN2sf6VertexESt6vectorIS2_SaIS2_EEEC1ERKS3_") [flags 0x3]  <function_decl 0x7f7f8ce3b500 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) "/usr/include/c++/7/bits/stl_vector.h":582 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 13 12 16 2 (set (reg:DI 88 [ D.82109 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [69 D.80033+0 S8 A64])) "/usr/include/c++/7/bits/stl_vector.h":582 81 {*movdi_internal}
     (nil))
(insn 16 13 20 2 (set (reg:DI 89 [ <retval> ])
        (reg:DI 88 [ D.82109 ])) "/usr/include/c++/7/bits/stl_vector.h":582 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ D.82109 ])
        (nil)))
(insn 20 16 21 2 (set (reg/i:DI 0 ax)
        (reg:DI 89 [ <retval> ])) "/usr/include/c++/7/bits/stl_vector.h":582 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89 [ <retval> ])
        (nil)))
(insn 21 20 22 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [5 D.82398+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) "/usr/include/c++/7/bits/stl_vector.h":582 1006 {stack_tls_protect_test_di}
     (nil))
(jump_insn 22 21 28 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) "/usr/include/c++/7/bits/stl_vector.h":582 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 25)
;;  succ:       4
;;              3 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 28 22 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 23 28 24 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f7f8c72b800 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "/usr/include/c++/7/bits/stl_vector.h":582 655 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 24 23 25)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (RTL)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 25 24 29 4 111 (nil) [1 uses])
(note 29 25 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 26 29 0 4 (use (reg/i:DI 0 ax)) "/usr/include/c++/7/bits/stl_vector.h":582 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = __gnu_cxx::__normal_iterator<sf::Vertex*, std::vector<sf::Vertex> >; _Tp = sf::Vertex] (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN2sf6VertexESt6vectorIS3_SaIS3_EEEES3_EvT_S9_RSaIT0_E, funcdef_no=3680, decl_uid=79518, cgraph_uid=1197, symbol_order=1201)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best SIREG, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 15(l0): point = 0
   Insn 12(l0): point = 2
   Insn 11(l0): point = 4
   Insn 10(l0): point = 6
   Insn 9(l0): point = 8
   Insn 8(l0): point = 10
   Insn 4(l0): point = 12
   Insn 3(l0): point = 14
   Insn 2(l0): point = 16
 a0(r88): [5..8]
 a1(r87): [7..10]
Compressing live ranges: from 19 to 2 - 10%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [0..1]
  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     1    0:r88  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = __gnu_cxx::__normal_iterator<sf::Vertex*, std::vector<sf::Vertex> >; _Tp = sf::Vertex]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={2d} r1={2d,1u} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,7u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 115{95d,20u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [69 __first+0 S8 A64])
        (reg:DI 5 di [ __first ])) "/usr/include/c++/7/bits/stl_construct.h":203 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [69 __last+0 S8 A64])
        (reg:DI 4 si [ __last ])) "/usr/include/c++/7/bits/stl_construct.h":203 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __last ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [66 D.79521+0 S8 A64])
        (reg:DI 1 dx [ D.79521 ])) "/usr/include/c++/7/bits/stl_construct.h":203 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ D.79521 ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 87)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [69 __last+0 S8 A64])) "/usr/include/c++/7/bits/stl_construct.h":206 81 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 88)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [69 __first+0 S8 A64])) "/usr/include/c++/7/bits/stl_construct.h":206 81 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg:DI 87)) "/usr/include/c++/7/bits/stl_construct.h":206 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg:DI 88)) "/usr/include/c++/7/bits/stl_construct.h":206 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(call_insn 12 11 15 2 (call (mem:QI (symbol_ref/i:DI ("_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN2sf6VertexESt6vectorIS3_SaIS3_EEEEEvT_S9_") [flags 0x3]  <function_decl 0x7f7f8cafe400 _Destroy>) [0 _Destroy S1 A8])
        (const_int 0 [0])) "/usr/include/c++/7/bits/stl_construct.h":206 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 15 12 0 2 (const_int 0 [0]) "/usr/include/c++/7/bits/stl_construct.h":207 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _OI std::copy(_II, _II, _OI) [with _II = sf::Vertex*; _OI = sf::Vertex*] (_ZSt4copyIPN2sf6VertexES2_ET0_T_S4_S3_, funcdef_no=3681, decl_uid=79526, cgraph_uid=1198, symbol_order=1202)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 20.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r93: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r93,l0) best DREG, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r92,l0) best DIREG, allocno GENERAL_REGS
    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a3(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a4(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a5(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a6(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 29(l0): point = 0
   Insn 28(l0): point = 2
   Insn 24(l0): point = 4
   Insn 21(l0): point = 6
   Insn 20(l0): point = 8
   Insn 19(l0): point = 10
   Insn 18(l0): point = 12
   Insn 17(l0): point = 14
   Insn 16(l0): point = 16
   Insn 15(l0): point = 18
   Insn 14(l0): point = 20
   Insn 13(l0): point = 22
   Insn 12(l0): point = 24
   Insn 11(l0): point = 26
   Insn 10(l0): point = 28
   Insn 9(l0): point = 30
   Insn 8(l0): point = 32
   Insn 4(l0): point = 34
   Insn 3(l0): point = 36
   Insn 2(l0): point = 38
 a0(r90): [3..4]
 a1(r89): [5..6]
 a2(r88): [11..18]
 a3(r87): [13..26]
 a4(r93): [15..16]
 a5(r92): [23..24]
 a6(r91): [31..32]
Compressing live ranges: from 41 to 10 - 24%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r89): [2..3]
 a2(r88): [4..5]
 a3(r87): [4..7]
 a4(r93): [4..5]
 a5(r92): [6..7]
 a6(r91): [8..9]
  regions=1, blocks=3, points=10
    allocnos=7 (big 0), copies=0, conflicts=0, ranges=7
Disposition:
    3:r87  l0     3    2:r88  l0     2    1:r89  l0     0    0:r90  l0     0
    6:r91  l0     0    5:r92  l0     0    4:r93  l0     0
+++Costs: overall -7, reg -7, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_OI std::copy(_II, _II, _OI) [with _II = sf::Vertex*; _OI = sf::Vertex*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={5d,5u} r1={5d,2u} r2={4d} r4={5d,2u} r5={7d,4u} r6={1d,2u} r7={1d,5u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,1u} r17={3d} r18={3d} r19={3d} r20={1d,8u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} 
;;    total ref usage 284{248d,36u,0e} in 20{17 regular + 3 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [26 __first+0 S8 A64])
        (reg:DI 5 di [ __first ])) "/usr/include/c++/7/bits/stl_algobase.h":446 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [26 __last+0 S8 A64])
        (reg:DI 4 si [ __last ])) "/usr/include/c++/7/bits/stl_algobase.h":446 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __last ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [26 __result+0 S8 A64])
        (reg:DI 1 dx [ __result ])) "/usr/include/c++/7/bits/stl_algobase.h":446 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __result ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [26 __last+0 S8 A64])) "/usr/include/c++/7/bits/stl_algobase.h":455 81 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 91)) "/usr/include/c++/7/bits/stl_algobase.h":455 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (nil)))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt12__miter_baseIPN2sf6VertexEET_S3_") [flags 0x3]  <function_decl 0x7f7f8cafe600 __miter_base>) [0 __miter_base S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/stl_algobase.h":455 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 87 [ _1 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/stl_algobase.h":455 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [26 __first+0 S8 A64])) "/usr/include/c++/7/bits/stl_algobase.h":455 81 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg:DI 92)) "/usr/include/c++/7/bits/stl_algobase.h":455 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92)
        (nil)))
(call_insn 14 13 15 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt12__miter_baseIPN2sf6VertexEET_S3_") [flags 0x3]  <function_decl 0x7f7f8cafe600 __miter_base>) [0 __miter_base S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/stl_algobase.h":455 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg/f:DI 88 [ _2 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/stl_algobase.h":455 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 16 15 17 2 (set (reg:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [26 __result+0 S8 A64])) "/usr/include/c++/7/bits/stl_algobase.h":456 81 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:DI 1 dx)
        (reg:DI 93)) "/usr/include/c++/7/bits/stl_algobase.h":456 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (nil)))
(insn 18 17 19 2 (set (reg:DI 4 si)
        (reg/f:DI 87 [ _1 ])) "/usr/include/c++/7/bits/stl_algobase.h":456 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _1 ])
        (nil)))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (reg/f:DI 88 [ _2 ])) "/usr/include/c++/7/bits/stl_algobase.h":456 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ _2 ])
        (nil)))
(call_insn 20 19 21 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt14__copy_move_a2ILb0EPN2sf6VertexES2_ET1_T0_S4_S3_") [flags 0x3]  <function_decl 0x7f7f8cafe700 __copy_move_a2>) [0 __copy_move_a2 S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/stl_algobase.h":456 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 21 20 24 2 (set (reg/f:DI 89 [ _10 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/stl_algobase.h":456 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 24 21 28 2 (set (reg/f:DI 90 [ <retval> ])
        (reg/f:DI 89 [ _10 ])) "/usr/include/c++/7/bits/stl_algobase.h":456 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ _10 ])
        (nil)))
(insn 28 24 29 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 90 [ <retval> ])) "/usr/include/c++/7/bits/stl_algobase.h":457 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ <retval> ])
        (nil)))
(insn 29 28 0 2 (use (reg/i:DI 0 ax)) "/usr/include/c++/7/bits/stl_algobase.h":457 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = sf::Vertex*; _ForwardIterator = sf::Vertex*; _Tp = sf::Vertex] (_ZSt22__uninitialized_copy_aIPN2sf6VertexES2_S1_ET0_T_S4_S3_RSaIT1_E, funcdef_no=3682, decl_uid=79530, cgraph_uid=1199, symbol_order=1203)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 15.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r90,l0) best SIREG, allocno GENERAL_REGS
    r89: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r89,l0) best DREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 24(l0): point = 0
   Insn 23(l0): point = 2
   Insn 19(l0): point = 4
   Insn 16(l0): point = 6
   Insn 15(l0): point = 8
   Insn 14(l0): point = 10
   Insn 13(l0): point = 12
   Insn 12(l0): point = 14
   Insn 11(l0): point = 16
   Insn 10(l0): point = 18
   Insn 9(l0): point = 20
   Insn 5(l0): point = 22
   Insn 4(l0): point = 24
   Insn 3(l0): point = 26
   Insn 2(l0): point = 28
 a0(r88): [3..4]
 a1(r87): [5..6]
 a2(r91): [11..16]
 a3(r90): [13..18]
 a4(r89): [15..20]
Compressing live ranges: from 31 to 6 - 19%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
 a2(r91): [4..5]
 a3(r90): [4..5]
 a4(r89): [4..5]
  regions=1, blocks=3, points=6
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    1:r87  l0     0    0:r88  l0     0    4:r89  l0     1    3:r90  l0     2
    2:r91  l0     0
+++Costs: overall -5, reg -5, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = sf::Vertex*; _ForwardIterator = sf::Vertex*; _Tp = sf::Vertex]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={3d,3u} r1={3d,2u} r2={2d,1u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,9u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 130{100d,30u,0e} in 15{14 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [26 __first+0 S8 A64])
        (reg:DI 5 di [ __first ])) "/usr/include/c++/7/bits/stl_uninitialized.h":287 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [26 __last+0 S8 A64])
        (reg:DI 4 si [ __last ])) "/usr/include/c++/7/bits/stl_uninitialized.h":287 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __last ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [26 __result+0 S8 A64])
        (reg:DI 1 dx [ __result ])) "/usr/include/c++/7/bits/stl_uninitialized.h":287 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __result ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [66 D.79534+0 S8 A64])
        (reg:DI 2 cx [ D.79534 ])) "/usr/include/c++/7/bits/stl_uninitialized.h":287 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ D.79534 ])
        (nil)))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [26 __result+0 S8 A64])) "/usr/include/c++/7/bits/stl_uninitialized.h":289 81 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [26 __last+0 S8 A64])) "/usr/include/c++/7/bits/stl_uninitialized.h":289 81 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [26 __first+0 S8 A64])) "/usr/include/c++/7/bits/stl_uninitialized.h":289 81 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 1 dx)
        (reg:DI 89)) "/usr/include/c++/7/bits/stl_uninitialized.h":289 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 4 si)
        (reg:DI 90)) "/usr/include/c++/7/bits/stl_uninitialized.h":289 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 91)) "/usr/include/c++/7/bits/stl_uninitialized.h":289 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (nil)))
(call_insn 15 14 16 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt18uninitialized_copyIPN2sf6VertexES2_ET0_T_S4_S3_") [flags 0x3]  <function_decl 0x7f7f8cafea00 uninitialized_copy>) [0 uninitialized_copy S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/stl_uninitialized.h":289 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 16 15 19 2 (set (reg/f:DI 87 [ _6 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/stl_uninitialized.h":289 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 19 16 23 2 (set (reg/f:DI 88 [ <retval> ])
        (reg/f:DI 87 [ _6 ])) "/usr/include/c++/7/bits/stl_uninitialized.h":289 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _6 ])
        (nil)))
(insn 23 19 24 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 88 [ <retval> ])) "/usr/include/c++/7/bits/stl_uninitialized.h":289 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ <retval> ])
        (nil)))
(insn 24 23 0 2 (use (reg/i:DI 0 ax)) "/usr/include/c++/7/bits/stl_uninitialized.h":289 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void std::vector<_Tp, _Alloc>::_M_erase_at_end(std::vector<_Tp, _Alloc>::pointer) [with _Tp = sf::Vertex; _Alloc = std::allocator<sf::Vertex>] (_ZNSt6vectorIN2sf6VertexESaIS1_EE15_M_erase_at_endEPS1_, funcdef_no=3721, decl_uid=59540, cgraph_uid=1238, symbol_order=1242)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 9.
verify found no changes in insn with uid = 17.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r89,l0) best SIREG, allocno GENERAL_REGS
    r88: preferred AD_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r88,l0) best AD_REGS, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a1(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a2(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r88,l0) costs: AREG:-1 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a5(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a6(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 23(l0): point = 0
   Insn 20(l0): point = 2
   Insn 19(l0): point = 4
   Insn 18(l0): point = 6
   Insn 17(l0): point = 8
   Insn 16(l0): point = 10
   Insn 15(l0): point = 12
   Insn 14(l0): point = 14
   Insn 13(l0): point = 16
   Insn 12(l0): point = 18
   Insn 11(l0): point = 20
   Insn 10(l0): point = 22
   Insn 9(l0): point = 24
   Insn 8(l0): point = 26
   Insn 7(l0): point = 28
   Insn 3(l0): point = 30
   Insn 2(l0): point = 32
 a0(r92): [3..6]
 a1(r93): [3..4]
 a2(r91): [11..16]
 a3(r89): [13..18]
 a4(r88): [15..22]
 a5(r90): [19..20]
 a6(r87): [27..28]
Compressing live ranges: from 35 to 8 - 22%
Ranges after the compression:
 a0(r92): [0..1]
 a1(r93): [0..1]
 a2(r91): [2..3]
 a3(r89): [2..3]
 a4(r88): [2..5]
 a5(r90): [4..5]
 a6(r87): [6..7]
  regions=1, blocks=3, points=8
    allocnos=7 (big 0), copies=0, conflicts=0, ranges=7
Disposition:
    6:r87  l0     0    4:r88  l0     1    3:r89  l0     2    5:r90  l0     0
    2:r91  l0     0    0:r92  l0     0    1:r93  l0     1
+++Costs: overall -4, reg -4, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void std::vector<_Tp, _Alloc>::_M_erase_at_end(std::vector<_Tp, _Alloc>::pointer) [with _Tp = sf::Vertex; _Alloc = std::allocator<sf::Vertex>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={3d,1u} r1={4d,1u} r2={3d} r4={4d,2u} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,9u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} 
;;    total ref usage 204{174d,30u,0e} in 17{15 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [62 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "/usr/include/c++/7/bits/stl_vector.h":1511 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [26 __pos+0 S8 A64])
        (reg:DI 4 si [ __pos ])) "/usr/include/c++/7/bits/stl_vector.h":1511 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __pos ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 87 [ _1 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/stl_vector.h":1513 81 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ _1 ])) "/usr/include/c++/7/bits/stl_vector.h":1513 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _1 ])
        (nil)))
(call_insn 9 8 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE19_M_get_Tp_allocatorEv") [flags 0x3]  <function_decl 0x7f7f8d964700 _M_get_Tp_allocator>) [0 _M_get_Tp_allocator S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/stl_vector.h":1513 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 88 [ _2 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/stl_vector.h":1513 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/stl_vector.h":1513 81 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg/f:DI 89 [ _3 ])
        (mem/f:DI (plus:DI (reg/f:DI 90)
                (const_int 8 [0x8])) [26 this_4(D)->D.59661._M_impl._M_finish+0 S8 A64])) "/usr/include/c++/7/bits/stl_vector.h":1513 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [26 __pos+0 S8 A64])) "/usr/include/c++/7/bits/stl_vector.h":1513 81 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 1 dx)
        (reg/f:DI 88 [ _2 ])) "/usr/include/c++/7/bits/stl_vector.h":1513 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ _2 ])
        (nil)))
(insn 15 14 16 2 (set (reg:DI 4 si)
        (reg/f:DI 89 [ _3 ])) "/usr/include/c++/7/bits/stl_vector.h":1513 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ _3 ])
        (nil)))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (reg:DI 91)) "/usr/include/c++/7/bits/stl_vector.h":1513 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (nil)))
(call_insn 17 16 18 2 (call (mem:QI (symbol_ref/i:DI ("_ZSt8_DestroyIPN2sf6VertexES1_EvT_S3_RSaIT0_E") [flags 0x3]  <function_decl 0x7f7f8ce24f00 _Destroy>) [0 _Destroy S1 A8])
        (const_int 0 [0])) "/usr/include/c++/7/bits/stl_vector.h":1513 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 18 17 19 2 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [62 this+0 S8 A64])) "/usr/include/c++/7/bits/stl_vector.h":1514 81 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [26 __pos+0 S8 A64])) "/usr/include/c++/7/bits/stl_vector.h":1514 81 {*movdi_internal}
     (nil))
(insn 20 19 23 2 (set (mem/f:DI (plus:DI (reg/f:DI 92)
                (const_int 8 [0x8])) [26 this_4(D)->D.59661._M_impl._M_finish+0 S8 A64])
        (reg/f:DI 93)) "/usr/include/c++/7/bits/stl_vector.h":1514 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93)
        (expr_list:REG_DEAD (reg/f:DI 92)
            (nil))))
(insn 23 20 0 2 (const_int 0 [0]) "/usr/include/c++/7/bits/stl_vector.h":1515 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function static void std::allocator_traits<std::allocator<_CharT> >::deallocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::pointer, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = sf::Vertex] (_ZNSt16allocator_traitsISaIN2sf6VertexEEE10deallocateERS2_PS1_m, funcdef_no=3722, decl_uid=58607, cgraph_uid=1239, symbol_order=1243)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 14.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best DIREG, allocno GENERAL_REGS
    r88: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r88,l0) best SIREG, allocno GENERAL_REGS
    r87: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r87,l0) best DREG, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 17(l0): point = 0
   Insn 14(l0): point = 2
   Insn 13(l0): point = 4
   Insn 12(l0): point = 6
   Insn 11(l0): point = 8
   Insn 10(l0): point = 10
   Insn 9(l0): point = 12
   Insn 8(l0): point = 14
   Insn 4(l0): point = 16
   Insn 3(l0): point = 18
   Insn 2(l0): point = 20
 a0(r89): [5..10]
 a1(r88): [7..12]
 a2(r87): [9..14]
Compressing live ranges: from 23 to 2 - 8%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r88): [0..1]
 a2(r87): [0..1]
  regions=1, blocks=3, points=2
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    2:r87  l0     1    1:r88  l0     2    0:r89  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


static void std::allocator_traits<std::allocator<_CharT> >::deallocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::pointer, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = sf::Vertex]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={2d} r1={3d,2u} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,8u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 120{97d,23u,0e} in 11{10 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [66 __a+0 S8 A64])
        (reg:DI 5 di [ __a ])) "/usr/include/c++/7/bits/alloc_traits.h":461 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __a ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [26 __p+0 S8 A64])
        (reg:DI 4 si [ __p ])) "/usr/include/c++/7/bits/alloc_traits.h":461 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __p ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [4 __n+0 S8 A64])
        (reg:DI 1 dx [ __n ])) "/usr/include/c++/7/bits/alloc_traits.h":461 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __n ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 87)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [4 __n+0 S8 A64])) "/usr/include/c++/7/bits/alloc_traits.h":462 81 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [26 __p+0 S8 A64])) "/usr/include/c++/7/bits/alloc_traits.h":462 81 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [66 __a+0 S8 A64])) "/usr/include/c++/7/bits/alloc_traits.h":462 81 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 1 dx)
        (reg:DI 87)) "/usr/include/c++/7/bits/alloc_traits.h":462 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 4 si)
        (reg:DI 88)) "/usr/include/c++/7/bits/alloc_traits.h":462 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg:DI 89)) "/usr/include/c++/7/bits/alloc_traits.h":462 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(call_insn 14 13 17 2 (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE10deallocateEPS2_m") [flags 0x3]  <function_decl 0x7f7f8d96eb00 deallocate>) [0 deallocate S1 A8])
        (const_int 0 [0])) "/usr/include/c++/7/bits/alloc_traits.h":462 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 17 14 0 2 (const_int 0 [0]) "/usr/include/c++/7/bits/alloc_traits.h":462 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void std::__do_alloc_on_copy(_Alloc&, const _Alloc&, std::false_type) [with _Alloc = std::allocator<sf::Vertex>] (_ZSt18__do_alloc_on_copyISaIN2sf6VertexEEEvRT_RKS3_St17integral_constantIbLb0EE, funcdef_no=3723, decl_uid=79980, cgraph_uid=1240, symbol_order=1244)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 9(l0): point = 0
   Insn 3(l0): point = 2
   Insn 2(l0): point = 4
Compressing live ranges: from 7 to 0 - 0%
Ranges after the compression:
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0
Disposition:
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void std::__do_alloc_on_copy(_Alloc&, const _Alloc&, std::false_type) [with _Alloc = std::allocator<sf::Vertex>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4 [si] 5 [di] 6 [bp]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 30{19d,11u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [66 D.79981+0 S8 A64])
        (reg:DI 5 di [ D.79981 ])) "/usr/include/c++/7/bits/alloc_traits.h":516 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ D.79981 ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [66 D.79982+0 S8 A64])
        (reg:DI 4 si [ D.79982 ])) "/usr/include/c++/7/bits/alloc_traits.h":516 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ D.79982 ])
        (nil)))
(note 4 3 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 4 0 2 (const_int 0 [0]) "/usr/include/c++/7/bits/alloc_traits.h":517 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function __gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = const sf::Vertex*; _Container = std::vector<sf::Vertex>] (_ZN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEC2ERKS4_, funcdef_no=3725, decl_uid=79315, cgraph_uid=1242, symbol_order=1246)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a2(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 13(l0): point = 0
   Insn 10(l0): point = 2
   Insn 9(l0): point = 4
   Insn 8(l0): point = 6
   Insn 7(l0): point = 8
   Insn 3(l0): point = 10
   Insn 2(l0): point = 12
 a0(r89): [3..4]
 a1(r87): [3..6]
 a2(r88): [7..8]
Compressing live ranges: from 15 to 4 - 26%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r87): [0..1]
 a2(r88): [2..3]
  regions=1, blocks=3, points=4
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    1:r87  l0     1    2:r88  l0     0    0:r89  l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = const sf::Vertex*; _Container = std::vector<sf::Vertex>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4 [si] 5 [di] 6 [bp]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,6u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 38{22d,16u,0e} in 7{7 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87 88 89
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [70 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "/usr/include/c++/7/bits/stl_iterator.h":779 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [71 __i+0 S8 A64])
        (reg:DI 4 si [ __i ])) "/usr/include/c++/7/bits/stl_iterator.h":779 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __i ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [71 __i+0 S8 A64])) "/usr/include/c++/7/bits/stl_iterator.h":780 81 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (reg/f:DI 88) [26 *__i_5(D)+0 S8 A64])) "/usr/include/c++/7/bits/stl_iterator.h":780 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88)
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [70 this+0 S8 A64])) "/usr/include/c++/7/bits/stl_iterator.h":780 81 {*movdi_internal}
     (nil))
(insn 10 9 13 2 (set (mem/f:DI (reg/f:DI 89) [26 this_3(D)->_M_current+0 S8 A64])
        (reg/f:DI 87 [ _1 ])) "/usr/include/c++/7/bits/stl_iterator.h":780 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89)
        (expr_list:REG_DEAD (reg/f:DI 87 [ _1 ])
            (nil))))
(insn 13 10 0 2 (const_int 0 [0]) "/usr/include/c++/7/bits/stl_iterator.h":780 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function std::_Vector_base<_Tp, _Alloc>::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = sf::Vertex; _Alloc = std::allocator<sf::Vertex>] (_ZNSt12_Vector_baseIN2sf6VertexESaIS1_EE11_M_allocateEm, funcdef_no=3727, decl_uid=58959, cgraph_uid=1244, symbol_order=1248)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 6 count 6 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 14.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r90,l0) best SIREG, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:29 INT_SSE_REGS:25 ALL_REGS:408 MEM:5
  a2(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 30(l0): point = 0
   Insn 29(l0): point = 2
   Insn 25(l0): point = 4
   Insn 20(l0): point = 7
   Insn 32(l0): point = 10
   Insn 15(l0): point = 12
   Insn 14(l0): point = 14
   Insn 13(l0): point = 16
   Insn 12(l0): point = 18
   Insn 11(l0): point = 20
   Insn 10(l0): point = 22
   Insn 8(l0): point = 25
   Insn 7(l0): point = 27
   Insn 3(l0): point = 29
   Insn 2(l0): point = 31
 a0(r89): [3..4]
 a1(r88): [10..12] [5..7]
 a2(r87): [17..22]
 a3(r90): [19..20]
Compressing live ranges: from 34 to 8 - 23%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r88): [2..5]
 a2(r87): [6..7]
 a3(r90): [6..7]
  regions=1, blocks=6, points=8
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4
Disposition:
    2:r87  l0     0    1:r88  l0     0    0:r89  l0     0    3:r90  l0     1
+++Costs: overall -4, reg -4, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


std::_Vector_base<_Tp, _Alloc>::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = sf::Vertex; _Alloc = std::allocator<sf::Vertex>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,5u} r7={1d,6u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,4u} r17={2d,1u} r18={1d} r19={1d} r20={1d,10u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={2d,1u} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 137{100d,37u,0e} in 15{14 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [65 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "/usr/include/c++/7/bits/stl_vector.h":169 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [4 __n+0 S8 A64])
        (reg:DI 4 si [ __n ])) "/usr/include/c++/7/bits/stl_vector.h":169 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __n ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [4 __n+0 S8 A64])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/stl_vector.h":172 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) "/usr/include/c++/7/bits/stl_vector.h":172 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 18)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 90
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg/f:DI 87 [ _1 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [65 this+0 S8 A64])) "/usr/include/c++/7/bits/stl_vector.h":172 81 {*movdi_internal}
     (nil))
(insn 11 10 12 3 (set (reg:DI 90)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [4 __n+0 S8 A64])) "/usr/include/c++/7/bits/stl_vector.h":172 81 {*movdi_internal}
     (nil))
(insn 12 11 13 3 (set (reg:DI 4 si)
        (reg:DI 90)) "/usr/include/c++/7/bits/stl_vector.h":172 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(insn 13 12 14 3 (set (reg:DI 5 di)
        (reg/f:DI 87 [ _1 ])) "/usr/include/c++/7/bits/stl_vector.h":172 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _1 ])
        (nil)))
(call_insn 14 13 15 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt16allocator_traitsISaIN2sf6VertexEEE8allocateERS2_m") [flags 0x3]  <function_decl 0x7f7f8d94d600 allocate>) [0 allocate S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/stl_vector.h":172 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 15 14 32 3 (set (reg/f:DI 88 [ iftmp.5_2 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/stl_vector.h":172 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(jump_insn 32 15 33 3 (set (pc)
        (label_ref 23)) "/usr/include/c++/7/bits/stl_vector.h":172 649 {jump}
     (nil)
 -> 23)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88

(barrier 33 32 18)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 88
(code_label 18 33 19 4 122 (nil) [1 uses])
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 23 4 (set (reg/f:DI 88 [ iftmp.5_2 ])
        (const_int 0 [0])) "/usr/include/c++/7/bits/stl_vector.h":172 81 {*movdi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  def 	 0 [ax] 89
(code_label 23 20 24 5 124 (nil) [1 uses])
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 29 5 (set (reg/f:DI 89 [ <retval> ])
        (reg/f:DI 88 [ iftmp.5_2 ])) "/usr/include/c++/7/bits/stl_vector.h":172 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ iftmp.5_2 ])
        (nil)))
(insn 29 25 30 5 (set (reg/i:DI 0 ax)
        (reg/f:DI 89 [ <retval> ])) "/usr/include/c++/7/bits/stl_vector.h":173 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ <retval> ])
        (nil)))
(insn 30 29 0 5 (use (reg/i:DI 0 ax)) "/usr/include/c++/7/bits/stl_vector.h":173 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = __gnu_cxx::__normal_iterator<const sf::Vertex*, std::vector<sf::Vertex> >; _ForwardIterator = sf::Vertex*; _Tp = sf::Vertex] (_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E, funcdef_no=3728, decl_uid=79994, cgraph_uid=1245, symbol_order=1249)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 15.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r90,l0) best SIREG, allocno GENERAL_REGS
    r89: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r89,l0) best DREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 24(l0): point = 0
   Insn 23(l0): point = 2
   Insn 19(l0): point = 4
   Insn 16(l0): point = 6
   Insn 15(l0): point = 8
   Insn 14(l0): point = 10
   Insn 13(l0): point = 12
   Insn 12(l0): point = 14
   Insn 11(l0): point = 16
   Insn 10(l0): point = 18
   Insn 9(l0): point = 20
   Insn 5(l0): point = 22
   Insn 4(l0): point = 24
   Insn 3(l0): point = 26
   Insn 2(l0): point = 28
 a0(r88): [3..4]
 a1(r87): [5..6]
 a2(r91): [11..16]
 a3(r90): [13..18]
 a4(r89): [15..20]
Compressing live ranges: from 31 to 6 - 19%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
 a2(r91): [4..5]
 a3(r90): [4..5]
 a4(r89): [4..5]
  regions=1, blocks=3, points=6
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    1:r87  l0     0    0:r88  l0     0    4:r89  l0     1    3:r90  l0     2
    2:r91  l0     0
+++Costs: overall -5, reg -5, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = __gnu_cxx::__normal_iterator<const sf::Vertex*, std::vector<sf::Vertex> >; _ForwardIterator = sf::Vertex*; _Tp = sf::Vertex]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={3d,3u} r1={3d,2u} r2={2d,1u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,9u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 130{100d,30u,0e} in 15{14 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [68 __first+0 S8 A64])
        (reg:DI 5 di [ __first ])) "/usr/include/c++/7/bits/stl_uninitialized.h":287 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [68 __last+0 S8 A64])
        (reg:DI 4 si [ __last ])) "/usr/include/c++/7/bits/stl_uninitialized.h":287 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __last ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [26 __result+0 S8 A64])
        (reg:DI 1 dx [ __result ])) "/usr/include/c++/7/bits/stl_uninitialized.h":287 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __result ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [66 D.79998+0 S8 A64])
        (reg:DI 2 cx [ D.79998 ])) "/usr/include/c++/7/bits/stl_uninitialized.h":287 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ D.79998 ])
        (nil)))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [26 __result+0 S8 A64])) "/usr/include/c++/7/bits/stl_uninitialized.h":289 81 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 90)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [68 __last+0 S8 A64])) "/usr/include/c++/7/bits/stl_uninitialized.h":289 81 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 91)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [68 __first+0 S8 A64])) "/usr/include/c++/7/bits/stl_uninitialized.h":289 81 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 1 dx)
        (reg:DI 89)) "/usr/include/c++/7/bits/stl_uninitialized.h":289 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 4 si)
        (reg:DI 90)) "/usr/include/c++/7/bits/stl_uninitialized.h":289 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 91)) "/usr/include/c++/7/bits/stl_uninitialized.h":289 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (nil)))
(call_insn 15 14 16 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_") [flags 0x3]  <function_decl 0x7f7f8cb66b00 uninitialized_copy>) [0 uninitialized_copy S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/stl_uninitialized.h":289 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 16 15 19 2 (set (reg/f:DI 87 [ _4 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/stl_uninitialized.h":289 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 19 16 23 2 (set (reg/f:DI 88 [ <retval> ])
        (reg/f:DI 87 [ _4 ])) "/usr/include/c++/7/bits/stl_uninitialized.h":289 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _4 ])
        (nil)))
(insn 23 19 24 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 88 [ <retval> ])) "/usr/include/c++/7/bits/stl_uninitialized.h":289 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ <retval> ])
        (nil)))
(insn 24 23 0 2 (use (reg/i:DI 0 ax)) "/usr/include/c++/7/bits/stl_uninitialized.h":289 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = sf::Vertex*] (_ZSt8_DestroyIPN2sf6VertexEEvT_S3_, funcdef_no=3729, decl_uid=80008, cgraph_uid=1246, symbol_order=1250)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 11.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best SIREG, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 14(l0): point = 0
   Insn 11(l0): point = 2
   Insn 10(l0): point = 4
   Insn 9(l0): point = 6
   Insn 8(l0): point = 8
   Insn 7(l0): point = 10
   Insn 3(l0): point = 12
   Insn 2(l0): point = 14
 a0(r88): [5..8]
 a1(r87): [7..10]
Compressing live ranges: from 17 to 2 - 11%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [0..1]
  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     1    0:r88  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = sf::Vertex*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,6u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 113{95d,18u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [26 __first+0 S8 A64])
        (reg:DI 5 di [ __first ])) "/usr/include/c++/7/bits/stl_construct.h":127 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [26 __last+0 S8 A64])
        (reg:DI 4 si [ __last ])) "/usr/include/c++/7/bits/stl_construct.h":127 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __last ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [26 __last+0 S8 A64])) "/usr/include/c++/7/bits/stl_construct.h":137 81 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [26 __first+0 S8 A64])) "/usr/include/c++/7/bits/stl_construct.h":137 81 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (reg:DI 87)) "/usr/include/c++/7/bits/stl_construct.h":137 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 88)) "/usr/include/c++/7/bits/stl_construct.h":137 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(call_insn 11 10 14 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Destroy_auxILb1EE9__destroyIPN2sf6VertexEEEvT_S5_") [flags 0x3]  <function_decl 0x7f7f8cb9a300 __destroy>) [0 __destroy S1 A8])
        (const_int 0 [0])) "/usr/include/c++/7/bits/stl_construct.h":137 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 14 11 0 2 (const_int 0 [0]) "/usr/include/c++/7/bits/stl_construct.h":138 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function __gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = sf::Vertex*; _Container = std::vector<sf::Vertex>] (_ZN9__gnu_cxx17__normal_iteratorIPN2sf6VertexESt6vectorIS2_SaIS2_EEEC2ERKS3_, funcdef_no=3731, decl_uid=79457, cgraph_uid=1248, symbol_order=1252)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a2(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 13(l0): point = 0
   Insn 10(l0): point = 2
   Insn 9(l0): point = 4
   Insn 8(l0): point = 6
   Insn 7(l0): point = 8
   Insn 3(l0): point = 10
   Insn 2(l0): point = 12
 a0(r89): [3..4]
 a1(r87): [3..6]
 a2(r88): [7..8]
Compressing live ranges: from 15 to 4 - 26%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r87): [0..1]
 a2(r88): [2..3]
  regions=1, blocks=3, points=4
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    1:r87  l0     1    2:r88  l0     0    0:r89  l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = sf::Vertex*; _Container = std::vector<sf::Vertex>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4 [si] 5 [di] 6 [bp]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,6u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 38{22d,16u,0e} in 7{7 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87 88 89
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [72 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "/usr/include/c++/7/bits/stl_iterator.h":779 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [71 __i+0 S8 A64])
        (reg:DI 4 si [ __i ])) "/usr/include/c++/7/bits/stl_iterator.h":779 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __i ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [71 __i+0 S8 A64])) "/usr/include/c++/7/bits/stl_iterator.h":780 81 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (reg/f:DI 88) [26 *__i_5(D)+0 S8 A64])) "/usr/include/c++/7/bits/stl_iterator.h":780 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88)
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [72 this+0 S8 A64])) "/usr/include/c++/7/bits/stl_iterator.h":780 81 {*movdi_internal}
     (nil))
(insn 10 9 13 2 (set (mem/f:DI (reg/f:DI 89) [26 this_3(D)->_M_current+0 S8 A64])
        (reg/f:DI 87 [ _1 ])) "/usr/include/c++/7/bits/stl_iterator.h":780 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89)
        (expr_list:REG_DEAD (reg/f:DI 87 [ _1 ])
            (nil))))
(insn 13 10 0 2 (const_int 0 [0]) "/usr/include/c++/7/bits/stl_iterator.h":780 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _Iterator std::__miter_base(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<const sf::Vertex*, std::vector<sf::Vertex> >] (_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS3_SaIS3_EEEEET_SA_, funcdef_no=3733, decl_uid=80020, cgraph_uid=1250, symbol_order=1254)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 14(l0): point = 0
   Insn 13(l0): point = 2
   Insn 9(l0): point = 4
   Insn 6(l0): point = 6
   Insn 2(l0): point = 8
 a0(r88): [3..4]
 a1(r87): [5..6]
Compressing live ranges: from 11 to 4 - 36%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     0    0:r88  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_Iterator std::__miter_base(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<const sf::Vertex*, std::vector<sf::Vertex> >]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 5 [di] 6 [bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 36{22d,14u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 87 88
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [68 __it+0 S8 A64])
        (reg:DI 5 di [ __it ])) "/usr/include/c++/7/bits/cpp_type_traits.h":408 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __it ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 9 2 (set (reg:DI 87 [ D.82127 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [68 __it+0 S8 A64])) "/usr/include/c++/7/bits/cpp_type_traits.h":409 81 {*movdi_internal}
     (nil))
(insn 9 6 13 2 (set (reg:DI 88 [ <retval> ])
        (reg:DI 87 [ D.82127 ])) "/usr/include/c++/7/bits/cpp_type_traits.h":409 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87 [ D.82127 ])
        (nil)))
(insn 13 9 14 2 (set (reg/i:DI 0 ax)
        (reg:DI 88 [ <retval> ])) "/usr/include/c++/7/bits/cpp_type_traits.h":409 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ <retval> ])
        (nil)))
(insn 14 13 0 2 (use (reg/i:DI 0 ax)) "/usr/include/c++/7/bits/cpp_type_traits.h":409 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = __gnu_cxx::__normal_iterator<const sf::Vertex*, std::vector<sf::Vertex> >; _OI = __gnu_cxx::__normal_iterator<sf::Vertex*, std::vector<sf::Vertex> >] (_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET1_T0_SD_SC_, funcdef_no=3734, decl_uid=80026, cgraph_uid=1251, symbol_order=1255)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 4 count 5 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { }
;; 4 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 19.
verify found no changes in insn with uid = 24.
verify found no changes in insn with uid = 31.
verify found no changes in insn with uid = 42.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r97: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r97,l0) best DIREG, allocno GENERAL_REGS
    r96: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r96,l0) best SIREG, allocno GENERAL_REGS
    r95: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r95,l0) best DIREG, allocno GENERAL_REGS
    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r94,l0) best DIREG, allocno GENERAL_REGS
    r93: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r93,l0) best DIREG, allocno GENERAL_REGS
    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r92,l0) best AREG, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred AD_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r87,l0) best AD_REGS, allocno GENERAL_REGS

  a0(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a3(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a4(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a5(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a6(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a7(r87,l0) costs: AREG:-1 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a8(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a9(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a10(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 45(l0): point = 0
   Insn 42(l0): point = 3
   Insn 41(l0): point = 6
   Insn 40(l0): point = 8
   Insn 39(l0): point = 10
   Insn 35(l0): point = 12
   Insn 32(l0): point = 14
   Insn 31(l0): point = 16
   Insn 30(l0): point = 18
   Insn 29(l0): point = 20
   Insn 28(l0): point = 22
   Insn 27(l0): point = 24
   Insn 26(l0): point = 26
   Insn 25(l0): point = 28
   Insn 24(l0): point = 30
   Insn 23(l0): point = 32
   Insn 22(l0): point = 34
   Insn 21(l0): point = 36
   Insn 20(l0): point = 38
   Insn 19(l0): point = 40
   Insn 18(l0): point = 42
   Insn 17(l0): point = 44
   Insn 16(l0): point = 46
   Insn 15(l0): point = 48
   Insn 14(l0): point = 50
   Insn 13(l0): point = 52
   Insn 12(l0): point = 54
   Insn 11(l0): point = 56
   Insn 10(l0): point = 58
   Insn 9(l0): point = 60
   Insn 6(l0): point = 62
   Insn 4(l0): point = 64
   Insn 3(l0): point = 66
   Insn 2(l0): point = 68
 a0(r92): [11..12]
 a1(r91): [13..14]
 a2(r97): [19..22]
 a3(r96): [21..24]
 a4(r90): [27..28]
 a5(r89): [33..38]
 a6(r88): [35..46]
 a7(r87): [37..54]
 a8(r95): [43..44]
 a9(r94): [51..52]
 a10(r93): [59..60]
Compressing live ranges: from 71 to 16 - 22%
Ranges after the compression:
 a0(r92): [0..1]
 a1(r91): [2..3]
 a2(r97): [4..5]
 a3(r96): [4..5]
 a4(r90): [6..7]
 a5(r89): [8..9]
 a6(r88): [8..11]
 a7(r87): [8..13]
 a8(r95): [10..11]
 a9(r94): [12..13]
 a10(r93): [14..15]
  regions=1, blocks=5, points=16
    allocnos=11 (big 0), copies=0, conflicts=0, ranges=11
Disposition:
    7:r87  l0    41    6:r88  l0     3    5:r89  l0     0    4:r90  l0     0
    1:r91  l0     0    0:r92  l0     0   10:r93  l0     0    9:r94  l0     0
    8:r95  l0     0    3:r96  l0     1    2:r97  l0     0
+++Costs: overall -10, reg -10, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = __gnu_cxx::__normal_iterator<const sf::Vertex*, std::vector<sf::Vertex> >; _OI = __gnu_cxx::__normal_iterator<sf::Vertex*, std::vector<sf::Vertex> >]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={8d,6u} r1={8d,2u} r2={7d} r4={9d,3u} r5={12d,6u} r6={1d,4u} r7={1d,10u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1d,3u} r17={10d,1u} r18={6d} r19={6d} r20={1d,16u} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={7d} r38={7d} r39={6d} r40={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} 
;;    total ref usage 537{475d,62u,0e} in 34{28 regular + 6 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93 94 95 96 97
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [68 __first+0 S8 A64])
        (reg:DI 5 di [ __first ])) "/usr/include/c++/7/bits/stl_algobase.h":420 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [68 __last+0 S8 A64])
        (reg:DI 4 si [ __last ])) "/usr/include/c++/7/bits/stl_algobase.h":420 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __last ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [69 __result+0 S8 A64])
        (reg:DI 1 dx [ __result ])) "/usr/include/c++/7/bits/stl_algobase.h":420 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __result ])
        (nil)))
(note 5 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 5 9 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [5 D.82399+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/stl_algobase.h":420 1002 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 9 6 10 2 (set (reg:DI 93)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [69 __result+0 S8 A64])) "/usr/include/c++/7/bits/stl_algobase.h":422 81 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 93)) "/usr/include/c++/7/bits/stl_algobase.h":422 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (nil)))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt12__niter_baseIPN2sf6VertexESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE") [flags 0x3]  <function_decl 0x7f7f8cb9ad00 __niter_base>) [0 __niter_base S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/stl_algobase.h":422 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 12 11 13 2 (set (reg/f:DI 87 [ _1 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/stl_algobase.h":422 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 94)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [68 __last+0 S8 A64])) "/usr/include/c++/7/bits/stl_algobase.h":422 81 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 94)) "/usr/include/c++/7/bits/stl_algobase.h":422 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94)
        (nil)))
(call_insn 15 14 16 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt12__niter_baseIPKN2sf6VertexESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE") [flags 0x3]  <function_decl 0x7f7f8cb9ab00 __niter_base>) [0 __niter_base S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/stl_algobase.h":422 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 16 15 17 2 (set (reg/f:DI 88 [ _2 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/stl_algobase.h":422 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 17 16 18 2 (set (reg:DI 95)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [68 __first+0 S8 A64])) "/usr/include/c++/7/bits/stl_algobase.h":422 81 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:DI 5 di)
        (reg:DI 95)) "/usr/include/c++/7/bits/stl_algobase.h":422 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 95)
        (nil)))
(call_insn 19 18 20 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt12__niter_baseIPKN2sf6VertexESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE") [flags 0x3]  <function_decl 0x7f7f8cb9ab00 __niter_base>) [0 __niter_base S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/stl_algobase.h":422 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 20 19 21 2 (set (reg/f:DI 89 [ _3 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/stl_algobase.h":422 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 21 20 22 2 (set (reg:DI 1 dx)
        (reg/f:DI 87 [ _1 ])) "/usr/include/c++/7/bits/stl_algobase.h":422 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _1 ])
        (nil)))
(insn 22 21 23 2 (set (reg:DI 4 si)
        (reg/f:DI 88 [ _2 ])) "/usr/include/c++/7/bits/stl_algobase.h":422 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ _2 ])
        (nil)))
(insn 23 22 24 2 (set (reg:DI 5 di)
        (reg/f:DI 89 [ _3 ])) "/usr/include/c++/7/bits/stl_algobase.h":422 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ _3 ])
        (nil)))
(call_insn 24 23 25 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt13__copy_move_aILb0EPKN2sf6VertexEPS1_ET1_T0_S6_S5_") [flags 0x3]  <function_decl 0x7f7f8cb9ae00 __copy_move_a>) [0 __copy_move_a S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/stl_algobase.h":422 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 25 24 26 2 (set (reg/f:DI 90 [ _4 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/stl_algobase.h":422 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 26 25 27 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [26 D.80709+0 S8 A64])
        (reg/f:DI 90 [ _4 ])) "/usr/include/c++/7/bits/stl_algobase.h":422 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ _4 ])
        (nil)))
(insn 27 26 28 2 (parallel [
            (set (reg:DI 96)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/stl_algobase.h":424 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 28 27 29 2 (parallel [
            (set (reg:DI 97)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/stl_algobase.h":424 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 29 28 30 2 (set (reg:DI 4 si)
        (reg:DI 96)) "/usr/include/c++/7/bits/stl_algobase.h":424 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96)
        (nil)))
(insn 30 29 31 2 (set (reg:DI 5 di)
        (reg:DI 97)) "/usr/include/c++/7/bits/stl_algobase.h":424 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 97)
        (nil)))
(call_insn 31 30 32 2 (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx17__normal_iteratorIPN2sf6VertexESt6vectorIS2_SaIS2_EEEC1ERKS3_") [flags 0x3]  <function_decl 0x7f7f8ce3b500 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) "/usr/include/c++/7/bits/stl_algobase.h":424 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 32 31 35 2 (set (reg:DI 91 [ D.82129 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [69 D.80710+0 S8 A64])) "/usr/include/c++/7/bits/stl_algobase.h":424 81 {*movdi_internal}
     (nil))
(insn 35 32 39 2 (set (reg:DI 92 [ <retval> ])
        (reg:DI 91 [ D.82129 ])) "/usr/include/c++/7/bits/stl_algobase.h":424 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91 [ D.82129 ])
        (nil)))
(insn 39 35 40 2 (set (reg/i:DI 0 ax)
        (reg:DI 92 [ <retval> ])) "/usr/include/c++/7/bits/stl_algobase.h":425 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92 [ <retval> ])
        (nil)))
(insn 40 39 41 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [5 D.82399+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) "/usr/include/c++/7/bits/stl_algobase.h":425 1006 {stack_tls_protect_test_di}
     (nil))
(jump_insn 41 40 47 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) "/usr/include/c++/7/bits/stl_algobase.h":425 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 44)
;;  succ:       4
;;              3 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 47 41 42 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 42 47 43 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f7f8c72b800 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "/usr/include/c++/7/bits/stl_algobase.h":425 655 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 43 42 44)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (RTL)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 44 43 48 4 133 (nil) [1 uses])
(note 48 44 45 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 45 48 0 4 (use (reg/i:DI 0 ax)) "/usr/include/c++/7/bits/stl_algobase.h":425 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = __gnu_cxx::__normal_iterator<sf::Vertex*, std::vector<sf::Vertex> >] (_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN2sf6VertexESt6vectorIS3_SaIS3_EEEEEvT_S9_, funcdef_no=3735, decl_uid=80035, cgraph_uid=1252, symbol_order=1256)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 11.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best SIREG, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 14(l0): point = 0
   Insn 11(l0): point = 2
   Insn 10(l0): point = 4
   Insn 9(l0): point = 6
   Insn 8(l0): point = 8
   Insn 7(l0): point = 10
   Insn 3(l0): point = 12
   Insn 2(l0): point = 14
 a0(r88): [5..8]
 a1(r87): [7..10]
Compressing live ranges: from 17 to 2 - 11%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [0..1]
  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     1    0:r88  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = __gnu_cxx::__normal_iterator<sf::Vertex*, std::vector<sf::Vertex> >]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,6u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 113{95d,18u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [69 __first+0 S8 A64])
        (reg:DI 5 di [ __first ])) "/usr/include/c++/7/bits/stl_construct.h":127 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [69 __last+0 S8 A64])
        (reg:DI 4 si [ __last ])) "/usr/include/c++/7/bits/stl_construct.h":127 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __last ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 87)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [69 __last+0 S8 A64])) "/usr/include/c++/7/bits/stl_construct.h":137 81 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 88)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [69 __first+0 S8 A64])) "/usr/include/c++/7/bits/stl_construct.h":137 81 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (reg:DI 87)) "/usr/include/c++/7/bits/stl_construct.h":137 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 88)) "/usr/include/c++/7/bits/stl_construct.h":137 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(call_insn 11 10 14 2 (call (mem:QI (symbol_ref/i:DI ("_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPN2sf6VertexESt6vectorIS5_SaIS5_EEEEEEvT_SB_") [flags 0x3]  <function_decl 0x7f7f8cbb4100 __destroy>) [0 __destroy S1 A8])
        (const_int 0 [0])) "/usr/include/c++/7/bits/stl_construct.h":137 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 14 11 0 2 (const_int 0 [0]) "/usr/include/c++/7/bits/stl_construct.h":138 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _Iterator std::__miter_base(_Iterator) [with _Iterator = sf::Vertex*] (_ZSt12__miter_baseIPN2sf6VertexEET_S3_, funcdef_no=3736, decl_uid=80047, cgraph_uid=1253, symbol_order=1257)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 14(l0): point = 0
   Insn 13(l0): point = 2
   Insn 9(l0): point = 4
   Insn 6(l0): point = 6
   Insn 2(l0): point = 8
 a0(r88): [3..4]
 a1(r87): [5..6]
Compressing live ranges: from 11 to 4 - 36%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     0    0:r88  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_Iterator std::__miter_base(_Iterator) [with _Iterator = sf::Vertex*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 5 [di] 6 [bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 36{22d,14u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 87 88
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [26 __it+0 S8 A64])
        (reg:DI 5 di [ __it ])) "/usr/include/c++/7/bits/cpp_type_traits.h":408 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __it ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 9 2 (set (reg/f:DI 87 [ _2 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [26 __it+0 S8 A64])) "/usr/include/c++/7/bits/cpp_type_traits.h":409 81 {*movdi_internal}
     (nil))
(insn 9 6 13 2 (set (reg/f:DI 88 [ <retval> ])
        (reg/f:DI 87 [ _2 ])) "/usr/include/c++/7/bits/cpp_type_traits.h":409 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _2 ])
        (nil)))
(insn 13 9 14 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 88 [ <retval> ])) "/usr/include/c++/7/bits/cpp_type_traits.h":409 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ <retval> ])
        (nil)))
(insn 14 13 0 2 (use (reg/i:DI 0 ax)) "/usr/include/c++/7/bits/cpp_type_traits.h":409 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = sf::Vertex*; _OI = sf::Vertex*] (_ZSt14__copy_move_a2ILb0EPN2sf6VertexES2_ET1_T0_S4_S3_, funcdef_no=3737, decl_uid=80049, cgraph_uid=1254, symbol_order=1258)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 23.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r94,l0) best DIREG, allocno GENERAL_REGS
    r93: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r93,l0) best DIREG, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r92,l0) best DIREG, allocno GENERAL_REGS
    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r91,l0) best AREG, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred AD_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best AD_REGS, allocno GENERAL_REGS

  a0(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a3(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a4(r87,l0) costs: AREG:-1 DREG:-1 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a5(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a6(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a7(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 32(l0): point = 0
   Insn 31(l0): point = 2
   Insn 27(l0): point = 4
   Insn 24(l0): point = 6
   Insn 23(l0): point = 8
   Insn 22(l0): point = 10
   Insn 21(l0): point = 12
   Insn 20(l0): point = 14
   Insn 19(l0): point = 16
   Insn 18(l0): point = 18
   Insn 17(l0): point = 20
   Insn 16(l0): point = 22
   Insn 15(l0): point = 24
   Insn 14(l0): point = 26
   Insn 13(l0): point = 28
   Insn 12(l0): point = 30
   Insn 11(l0): point = 32
   Insn 10(l0): point = 34
   Insn 9(l0): point = 36
   Insn 8(l0): point = 38
   Insn 4(l0): point = 40
   Insn 3(l0): point = 42
   Insn 2(l0): point = 44
 a0(r91): [3..4]
 a1(r90): [5..6]
 a2(r89): [11..16]
 a3(r88): [13..24]
 a4(r87): [15..32]
 a5(r94): [21..22]
 a6(r93): [29..30]
 a7(r92): [37..38]
Compressing live ranges: from 47 to 12 - 25%
Ranges after the compression:
 a0(r91): [0..1]
 a1(r90): [2..3]
 a2(r89): [4..5]
 a3(r88): [4..7]
 a4(r87): [4..9]
 a5(r94): [6..7]
 a6(r93): [8..9]
 a7(r92): [10..11]
  regions=1, blocks=3, points=12
    allocnos=8 (big 0), copies=0, conflicts=0, ranges=8
Disposition:
    4:r87  l0    41    3:r88  l0     3    2:r89  l0     0    1:r90  l0     0
    0:r91  l0     0    7:r92  l0     0    6:r93  l0     0    5:r94  l0     0
+++Costs: overall -8, reg -8, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = false; _II = sf::Vertex*; _OI = sf::Vertex*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={6d,6u} r1={6d,2u} r2={5d} r4={6d,2u} r5={9d,5u} r6={1d,2u} r7={1d,6u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,1u} r17={4d} r18={4d} r19={4d} r20={1d,8u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} 
;;    total ref usage 362{322d,40u,0e} in 23{19 regular + 4 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93 94
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [26 __first+0 S8 A64])
        (reg:DI 5 di [ __first ])) "/usr/include/c++/7/bits/stl_algobase.h":420 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [26 __last+0 S8 A64])
        (reg:DI 4 si [ __last ])) "/usr/include/c++/7/bits/stl_algobase.h":420 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __last ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [26 __result+0 S8 A64])
        (reg:DI 1 dx [ __result ])) "/usr/include/c++/7/bits/stl_algobase.h":420 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __result ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [26 __result+0 S8 A64])) "/usr/include/c++/7/bits/stl_algobase.h":422 81 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 92)) "/usr/include/c++/7/bits/stl_algobase.h":422 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92)
        (nil)))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt12__niter_baseIPN2sf6VertexEET_S3_") [flags 0x3]  <function_decl 0x7f7f8cbb4400 __niter_base>) [0 __niter_base S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/stl_algobase.h":422 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 87 [ _1 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/stl_algobase.h":422 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [26 __last+0 S8 A64])) "/usr/include/c++/7/bits/stl_algobase.h":422 81 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg:DI 93)) "/usr/include/c++/7/bits/stl_algobase.h":422 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (nil)))
(call_insn 14 13 15 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt12__niter_baseIPN2sf6VertexEET_S3_") [flags 0x3]  <function_decl 0x7f7f8cbb4400 __niter_base>) [0 __niter_base S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/stl_algobase.h":422 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg/f:DI 88 [ _2 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/stl_algobase.h":422 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 16 15 17 2 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [26 __first+0 S8 A64])) "/usr/include/c++/7/bits/stl_algobase.h":422 81 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (reg:DI 94)) "/usr/include/c++/7/bits/stl_algobase.h":422 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94)
        (nil)))
(call_insn 18 17 19 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt12__niter_baseIPN2sf6VertexEET_S3_") [flags 0x3]  <function_decl 0x7f7f8cbb4400 __niter_base>) [0 __niter_base S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/stl_algobase.h":422 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 19 18 20 2 (set (reg/f:DI 89 [ _3 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/stl_algobase.h":422 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 20 19 21 2 (set (reg:DI 1 dx)
        (reg/f:DI 87 [ _1 ])) "/usr/include/c++/7/bits/stl_algobase.h":424 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _1 ])
        (nil)))
(insn 21 20 22 2 (set (reg:DI 4 si)
        (reg/f:DI 88 [ _2 ])) "/usr/include/c++/7/bits/stl_algobase.h":424 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ _2 ])
        (nil)))
(insn 22 21 23 2 (set (reg:DI 5 di)
        (reg/f:DI 89 [ _3 ])) "/usr/include/c++/7/bits/stl_algobase.h":424 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ _3 ])
        (nil)))
(call_insn 23 22 24 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt13__copy_move_aILb0EPN2sf6VertexES2_ET1_T0_S4_S3_") [flags 0x3]  <function_decl 0x7f7f8cbb4500 __copy_move_a>) [0 __copy_move_a S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/stl_algobase.h":424 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 24 23 27 2 (set (reg/f:DI 90 [ _12 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/stl_algobase.h":424 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 27 24 31 2 (set (reg/f:DI 91 [ <retval> ])
        (reg/f:DI 90 [ _12 ])) "/usr/include/c++/7/bits/stl_algobase.h":424 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ _12 ])
        (nil)))
(insn 31 27 32 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 91 [ <retval> ])) "/usr/include/c++/7/bits/stl_algobase.h":425 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ <retval> ])
        (nil)))
(insn 32 31 0 2 (use (reg/i:DI 0 ax)) "/usr/include/c++/7/bits/stl_algobase.h":425 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = sf::Vertex*; _ForwardIterator = sf::Vertex*] (_ZSt18uninitialized_copyIPN2sf6VertexES2_ET0_T_S4_S3_, funcdef_no=3738, decl_uid=80054, cgraph_uid=1255, symbol_order=1259)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 15.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r90,l0) best SIREG, allocno GENERAL_REGS
    r89: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r89,l0) best DREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 24(l0): point = 0
   Insn 23(l0): point = 2
   Insn 19(l0): point = 4
   Insn 16(l0): point = 6
   Insn 15(l0): point = 8
   Insn 14(l0): point = 10
   Insn 13(l0): point = 12
   Insn 12(l0): point = 14
   Insn 11(l0): point = 16
   Insn 10(l0): point = 18
   Insn 9(l0): point = 20
   Insn 8(l0): point = 22
   Insn 4(l0): point = 24
   Insn 3(l0): point = 26
   Insn 2(l0): point = 28
 a0(r88): [3..4]
 a1(r87): [5..6]
 a2(r91): [11..16]
 a3(r90): [13..18]
 a4(r89): [15..20]
Compressing live ranges: from 31 to 6 - 19%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
 a2(r91): [4..5]
 a3(r90): [4..5]
 a4(r89): [4..5]
  regions=1, blocks=3, points=6
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    1:r87  l0     0    0:r88  l0     0    4:r89  l0     1    3:r90  l0     2
    2:r91  l0     0
+++Costs: overall -5, reg -5, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = sf::Vertex*; _ForwardIterator = sf::Vertex*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={3d,3u} r1={3d,2u} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,9u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 129{100d,29u,0e} in 15{14 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [26 __first+0 S8 A64])
        (reg:DI 5 di [ __first ])) "/usr/include/c++/7/bits/stl_uninitialized.h":115 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [26 __last+0 S8 A64])
        (reg:DI 4 si [ __last ])) "/usr/include/c++/7/bits/stl_uninitialized.h":115 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __last ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [26 __result+0 S8 A64])
        (reg:DI 1 dx [ __result ])) "/usr/include/c++/7/bits/stl_uninitialized.h":115 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __result ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -1 [0xffffffffffffffff])) [19 __assignable+0 S1 A8])
        (const_int 1 [0x1])) "/usr/include/c++/7/bits/stl_uninitialized.h":128 84 {*movqi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [26 __result+0 S8 A64])) "/usr/include/c++/7/bits/stl_uninitialized.h":134 81 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [26 __last+0 S8 A64])) "/usr/include/c++/7/bits/stl_uninitialized.h":134 81 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [26 __first+0 S8 A64])) "/usr/include/c++/7/bits/stl_uninitialized.h":134 81 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 1 dx)
        (reg:DI 89)) "/usr/include/c++/7/bits/stl_uninitialized.h":134 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 4 si)
        (reg:DI 90)) "/usr/include/c++/7/bits/stl_uninitialized.h":134 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 91)) "/usr/include/c++/7/bits/stl_uninitialized.h":134 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (nil)))
(call_insn 15 14 16 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN2sf6VertexES4_EET0_T_S6_S5_") [flags 0x3]  <function_decl 0x7f7f8cbb4e00 __uninit_copy>) [0 __uninit_copy S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/stl_uninitialized.h":134 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 16 15 19 2 (set (reg/f:DI 87 [ _7 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/stl_uninitialized.h":134 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 19 16 23 2 (set (reg/f:DI 88 [ <retval> ])
        (reg/f:DI 87 [ _7 ])) "/usr/include/c++/7/bits/stl_uninitialized.h":134 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _7 ])
        (nil)))
(insn 23 19 24 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 88 [ <retval> ])) "/usr/include/c++/7/bits/stl_uninitialized.h":135 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ <retval> ])
        (nil)))
(insn 24 23 0 2 (use (reg/i:DI 0 ax)) "/usr/include/c++/7/bits/stl_uninitialized.h":135 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = sf::Vertex] (_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE10deallocateEPS2_m, funcdef_no=3775, decl_uid=58806, cgraph_uid=1292, symbol_order=1296)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 10.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 13(l0): point = 0
   Insn 10(l0): point = 2
   Insn 9(l0): point = 4
   Insn 8(l0): point = 6
   Insn 4(l0): point = 8
   Insn 3(l0): point = 10
   Insn 2(l0): point = 12
 a0(r87): [5..6]
Compressing live ranges: from 15 to 2 - 13%
Ranges after the compression:
 a0(r87): [0..1]
  regions=1, blocks=3, points=2
    allocnos=1 (big 0), copies=0, conflicts=0, ranges=1
Disposition:
    0:r87  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = sf::Vertex]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={2d} r1={2d,1u} r2={2d} r4={2d,1u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,6u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} 
;;    total ref usage 110{93d,17u,0e} in 7{6 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [73 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "/usr/include/c++/7/ext/new_allocator.h":116 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [26 __p+0 S8 A64])
        (reg:DI 4 si [ __p ])) "/usr/include/c++/7/ext/new_allocator.h":116 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __p ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [4 D.58809+0 S8 A64])
        (reg:DI 1 dx [ D.58809 ])) "/usr/include/c++/7/ext/new_allocator.h":116 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ D.58809 ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [26 __p+0 S8 A64])) "/usr/include/c++/7/ext/new_allocator.h":125 81 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 87)) "/usr/include/c++/7/ext/new_allocator.h":125 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(call_insn 10 9 13 2 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7f7f904edf00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/c++/7/ext/new_allocator.h":125 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 13 10 0 2 (const_int 0 [0]) "/usr/include/c++/7/ext/new_allocator.h":126 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function static _Tp* std::allocator_traits<std::allocator<_CharT> >::allocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = sf::Vertex] (_ZNSt16allocator_traitsISaIN2sf6VertexEEE8allocateERS2_m, funcdef_no=3776, decl_uid=58600, cgraph_uid=1293, symbol_order=1297)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r89,l0) best SIREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 21(l0): point = 0
   Insn 20(l0): point = 2
   Insn 16(l0): point = 4
   Insn 13(l0): point = 6
   Insn 12(l0): point = 8
   Insn 11(l0): point = 10
   Insn 10(l0): point = 12
   Insn 9(l0): point = 14
   Insn 8(l0): point = 16
   Insn 7(l0): point = 18
   Insn 3(l0): point = 20
   Insn 2(l0): point = 22
 a0(r88): [3..4]
 a1(r87): [5..6]
 a2(r90): [11..16]
 a3(r89): [13..18]
Compressing live ranges: from 25 to 6 - 24%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
 a2(r90): [4..5]
 a3(r89): [4..5]
  regions=1, blocks=3, points=6
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4
Disposition:
    1:r87  l0     0    0:r88  l0     0    3:r89  l0     2    2:r90  l0     0
+++Costs: overall -4, reg -4, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


static _Tp* std::allocator_traits<std::allocator<_CharT> >::allocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = sf::Vertex]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={3d,3u} r1={3d,1u} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,6u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 123{99d,24u,0e} in 12{11 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [66 __a+0 S8 A64])
        (reg:DI 5 di [ __a ])) "/usr/include/c++/7/bits/alloc_traits.h":435 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __a ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [4 __n+0 S8 A64])
        (reg:DI 4 si [ __n ])) "/usr/include/c++/7/bits/alloc_traits.h":435 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __n ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 89)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [4 __n+0 S8 A64])) "/usr/include/c++/7/bits/alloc_traits.h":436 81 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [66 __a+0 S8 A64])) "/usr/include/c++/7/bits/alloc_traits.h":436 81 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 1 dx)
        (const_int 0 [0])) "/usr/include/c++/7/bits/alloc_traits.h":436 81 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg:DI 89)) "/usr/include/c++/7/bits/alloc_traits.h":436 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg:DI 90)) "/usr/include/c++/7/bits/alloc_traits.h":436 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(call_insn 12 11 13 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE8allocateEmPKv") [flags 0x3]  <function_decl 0x7f7f8d96ea00 allocate>) [0 allocate S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/alloc_traits.h":436 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 13 12 16 2 (set (reg/f:DI 87 [ _5 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/alloc_traits.h":436 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 16 13 20 2 (set (reg/f:DI 88 [ <retval> ])
        (reg/f:DI 87 [ _5 ])) "/usr/include/c++/7/bits/alloc_traits.h":436 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _5 ])
        (nil)))
(insn 20 16 21 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 88 [ <retval> ])) "/usr/include/c++/7/bits/alloc_traits.h":436 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ <retval> ])
        (nil)))
(insn 21 20 0 2 (use (reg/i:DI 0 ax)) "/usr/include/c++/7/bits/alloc_traits.h":436 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const sf::Vertex*, std::vector<sf::Vertex> >; _ForwardIterator = sf::Vertex*] (_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_, funcdef_no=3777, decl_uid=80502, cgraph_uid=1294, symbol_order=1298)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 15.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r90,l0) best SIREG, allocno GENERAL_REGS
    r89: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r89,l0) best DREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 24(l0): point = 0
   Insn 23(l0): point = 2
   Insn 19(l0): point = 4
   Insn 16(l0): point = 6
   Insn 15(l0): point = 8
   Insn 14(l0): point = 10
   Insn 13(l0): point = 12
   Insn 12(l0): point = 14
   Insn 11(l0): point = 16
   Insn 10(l0): point = 18
   Insn 9(l0): point = 20
   Insn 8(l0): point = 22
   Insn 4(l0): point = 24
   Insn 3(l0): point = 26
   Insn 2(l0): point = 28
 a0(r88): [3..4]
 a1(r87): [5..6]
 a2(r91): [11..16]
 a3(r90): [13..18]
 a4(r89): [15..20]
Compressing live ranges: from 31 to 6 - 19%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
 a2(r91): [4..5]
 a3(r90): [4..5]
 a4(r89): [4..5]
  regions=1, blocks=3, points=6
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    1:r87  l0     0    0:r88  l0     0    4:r89  l0     1    3:r90  l0     2
    2:r91  l0     0
+++Costs: overall -5, reg -5, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const sf::Vertex*, std::vector<sf::Vertex> >; _ForwardIterator = sf::Vertex*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={3d,3u} r1={3d,2u} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,9u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 129{100d,29u,0e} in 15{14 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [68 __first+0 S8 A64])
        (reg:DI 5 di [ __first ])) "/usr/include/c++/7/bits/stl_uninitialized.h":115 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [68 __last+0 S8 A64])
        (reg:DI 4 si [ __last ])) "/usr/include/c++/7/bits/stl_uninitialized.h":115 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __last ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [26 __result+0 S8 A64])
        (reg:DI 1 dx [ __result ])) "/usr/include/c++/7/bits/stl_uninitialized.h":115 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __result ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -1 [0xffffffffffffffff])) [19 __assignable+0 S1 A8])
        (const_int 1 [0x1])) "/usr/include/c++/7/bits/stl_uninitialized.h":128 84 {*movqi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [26 __result+0 S8 A64])) "/usr/include/c++/7/bits/stl_uninitialized.h":134 81 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 90)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [68 __last+0 S8 A64])) "/usr/include/c++/7/bits/stl_uninitialized.h":134 81 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 91)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [68 __first+0 S8 A64])) "/usr/include/c++/7/bits/stl_uninitialized.h":134 81 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 1 dx)
        (reg:DI 89)) "/usr/include/c++/7/bits/stl_uninitialized.h":134 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 4 si)
        (reg:DI 90)) "/usr/include/c++/7/bits/stl_uninitialized.h":134 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 91)) "/usr/include/c++/7/bits/stl_uninitialized.h":134 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (nil)))
(call_insn 15 14 16 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_") [flags 0x3]  <function_decl 0x7f7f8cc54800 __uninit_copy>) [0 __uninit_copy S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/stl_uninitialized.h":134 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 16 15 19 2 (set (reg/f:DI 87 [ _5 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/stl_uninitialized.h":134 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 19 16 23 2 (set (reg/f:DI 88 [ <retval> ])
        (reg/f:DI 87 [ _5 ])) "/usr/include/c++/7/bits/stl_uninitialized.h":134 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _5 ])
        (nil)))
(insn 23 19 24 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 88 [ <retval> ])) "/usr/include/c++/7/bits/stl_uninitialized.h":135 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ <retval> ])
        (nil)))
(insn 24 23 0 2 (use (reg/i:DI 0 ax)) "/usr/include/c++/7/bits/stl_uninitialized.h":135 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function static void std::_Destroy_aux<true>::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = sf::Vertex*] (_ZNSt12_Destroy_auxILb1EE9__destroyIPN2sf6VertexEEEvT_S5_, funcdef_no=3778, decl_uid=80685, cgraph_uid=1295, symbol_order=1299)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 9(l0): point = 0
   Insn 3(l0): point = 2
   Insn 2(l0): point = 4
Compressing live ranges: from 7 to 0 - 0%
Ranges after the compression:
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0
Disposition:
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


static void std::_Destroy_aux<true>::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = sf::Vertex*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4 [si] 5 [di] 6 [bp]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 30{19d,11u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [26 D.80686+0 S8 A64])
        (reg:DI 5 di [ D.80686 ])) "/usr/include/c++/7/bits/stl_construct.h":117 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ D.80686 ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [26 D.80687+0 S8 A64])
        (reg:DI 4 si [ D.80687 ])) "/usr/include/c++/7/bits/stl_construct.h":117 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ D.80687 ])
        (nil)))
(note 4 3 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 4 0 2 (const_int 0 [0]) "/usr/include/c++/7/bits/stl_construct.h":117 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _Iterator std::__niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container>) [with _Iterator = const sf::Vertex*; _Container = std::vector<sf::Vertex>] (_ZSt12__niter_baseIPKN2sf6VertexESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS7_T0_EE, funcdef_no=3779, decl_uid=80696, cgraph_uid=1296, symbol_order=1300)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 8.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a3(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7

   Insn 18(l0): point = 0
   Insn 17(l0): point = 2
   Insn 13(l0): point = 4
   Insn 10(l0): point = 6
   Insn 9(l0): point = 8
   Insn 8(l0): point = 10
   Insn 7(l0): point = 12
   Insn 6(l0): point = 14
   Insn 2(l0): point = 16
 a0(r89): [3..4]
 a1(r88): [5..6]
 a2(r87): [7..8]
 a3(r90): [13..14]
Compressing live ranges: from 19 to 8 - 42%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r88): [2..3]
 a2(r87): [4..5]
 a3(r90): [6..7]
  regions=1, blocks=3, points=8
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4
Disposition:
    2:r87  l0     0    1:r88  l0     0    0:r89  l0     0    3:r90  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_Iterator std::__niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container>) [with _Iterator = const sf::Vertex*; _Container = std::vector<sf::Vertex>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={2d} r18={1d} r19={1d} r20={1d,4u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 117{98d,19u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [68 __it+0 S8 A64])
        (reg:DI 5 di [ __it ])) "/usr/include/c++/7/bits/stl_iterator.h":983 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __it ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (parallel [
            (set (reg:DI 90)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/stl_iterator.h":984 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 90)) "/usr/include/c++/7/bits/stl_iterator.h":984 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(call_insn 8 7 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEE4baseEv") [flags 0x3]  <function_decl 0x7f7f8ce1ee00 base>) [0 base S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/stl_iterator.h":984 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 87 [ _1 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/stl_iterator.h":984 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 10 9 13 2 (set (reg/f:DI 88 [ _4 ])
        (mem/f:DI (reg/f:DI 87 [ _1 ]) [26 *_1+0 S8 A64])) "/usr/include/c++/7/bits/stl_iterator.h":984 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _1 ])
        (nil)))
(insn 13 10 17 2 (set (reg/f:DI 89 [ <retval> ])
        (reg/f:DI 88 [ _4 ])) "/usr/include/c++/7/bits/stl_iterator.h":984 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ _4 ])
        (nil)))
(insn 17 13 18 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 89 [ <retval> ])) "/usr/include/c++/7/bits/stl_iterator.h":984 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ <retval> ])
        (nil)))
(insn 18 17 0 2 (use (reg/i:DI 0 ax)) "/usr/include/c++/7/bits/stl_iterator.h":984 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _Iterator std::__niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container>) [with _Iterator = sf::Vertex*; _Container = std::vector<sf::Vertex>] (_ZSt12__niter_baseIPN2sf6VertexESt6vectorIS1_SaIS1_EEET_N9__gnu_cxx17__normal_iteratorIS6_T0_EE, funcdef_no=3780, decl_uid=80702, cgraph_uid=1297, symbol_order=1301)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 8.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a3(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7

   Insn 18(l0): point = 0
   Insn 17(l0): point = 2
   Insn 13(l0): point = 4
   Insn 10(l0): point = 6
   Insn 9(l0): point = 8
   Insn 8(l0): point = 10
   Insn 7(l0): point = 12
   Insn 6(l0): point = 14
   Insn 2(l0): point = 16
 a0(r89): [3..4]
 a1(r88): [5..6]
 a2(r87): [7..8]
 a3(r90): [13..14]
Compressing live ranges: from 19 to 8 - 42%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r88): [2..3]
 a2(r87): [4..5]
 a3(r90): [6..7]
  regions=1, blocks=3, points=8
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4
Disposition:
    2:r87  l0     0    1:r88  l0     0    0:r89  l0     0    3:r90  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_Iterator std::__niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container>) [with _Iterator = sf::Vertex*; _Container = std::vector<sf::Vertex>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={2d} r18={1d} r19={1d} r20={1d,4u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 117{98d,19u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [69 __it+0 S8 A64])
        (reg:DI 5 di [ __it ])) "/usr/include/c++/7/bits/stl_iterator.h":983 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __it ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (parallel [
            (set (reg:DI 90)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/stl_iterator.h":984 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 90)) "/usr/include/c++/7/bits/stl_iterator.h":984 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(call_insn 8 7 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNK9__gnu_cxx17__normal_iteratorIPN2sf6VertexESt6vectorIS2_SaIS2_EEE4baseEv") [flags 0x3]  <function_decl 0x7f7f8ce3b200 base>) [0 base S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/stl_iterator.h":984 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 87 [ _1 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/stl_iterator.h":984 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 10 9 13 2 (set (reg/f:DI 88 [ _4 ])
        (mem/f:DI (reg/f:DI 87 [ _1 ]) [26 *_1+0 S8 A64])) "/usr/include/c++/7/bits/stl_iterator.h":984 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _1 ])
        (nil)))
(insn 13 10 17 2 (set (reg/f:DI 89 [ <retval> ])
        (reg/f:DI 88 [ _4 ])) "/usr/include/c++/7/bits/stl_iterator.h":984 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ _4 ])
        (nil)))
(insn 17 13 18 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 89 [ <retval> ])) "/usr/include/c++/7/bits/stl_iterator.h":984 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ <retval> ])
        (nil)))
(insn 18 17 0 2 (use (reg/i:DI 0 ax)) "/usr/include/c++/7/bits/stl_iterator.h":984 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const sf::Vertex*; _OI = sf::Vertex*] (_ZSt13__copy_move_aILb0EPKN2sf6VertexEPS1_ET1_T0_S6_S5_, funcdef_no=3781, decl_uid=80705, cgraph_uid=1298, symbol_order=1302)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 15.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r90,l0) best SIREG, allocno GENERAL_REGS
    r89: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r89,l0) best DREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 24(l0): point = 0
   Insn 23(l0): point = 2
   Insn 19(l0): point = 4
   Insn 16(l0): point = 6
   Insn 15(l0): point = 8
   Insn 14(l0): point = 10
   Insn 13(l0): point = 12
   Insn 12(l0): point = 14
   Insn 11(l0): point = 16
   Insn 10(l0): point = 18
   Insn 9(l0): point = 20
   Insn 8(l0): point = 22
   Insn 4(l0): point = 24
   Insn 3(l0): point = 26
   Insn 2(l0): point = 28
 a0(r88): [3..4]
 a1(r87): [5..6]
 a2(r91): [11..16]
 a3(r90): [13..18]
 a4(r89): [15..20]
Compressing live ranges: from 31 to 6 - 19%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
 a2(r91): [4..5]
 a3(r90): [4..5]
 a4(r89): [4..5]
  regions=1, blocks=3, points=6
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    1:r87  l0     0    0:r88  l0     0    4:r89  l0     1    3:r90  l0     2
    2:r91  l0     0
+++Costs: overall -5, reg -5, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = const sf::Vertex*; _OI = sf::Vertex*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={3d,3u} r1={3d,2u} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,9u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 129{100d,29u,0e} in 15{14 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [26 __first+0 S8 A64])
        (reg:DI 5 di [ __first ])) "/usr/include/c++/7/bits/stl_algobase.h":375 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [26 __last+0 S8 A64])
        (reg:DI 4 si [ __last ])) "/usr/include/c++/7/bits/stl_algobase.h":375 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __last ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [26 __result+0 S8 A64])
        (reg:DI 1 dx [ __result ])) "/usr/include/c++/7/bits/stl_algobase.h":375 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __result ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -1 [0xffffffffffffffff])) [19 __simple+0 S1 A8])
        (const_int 0 [0])) "/usr/include/c++/7/bits/stl_algobase.h":380 84 {*movqi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [26 __result+0 S8 A64])) "/usr/include/c++/7/bits/stl_algobase.h":386 81 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [26 __last+0 S8 A64])) "/usr/include/c++/7/bits/stl_algobase.h":386 81 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [26 __first+0 S8 A64])) "/usr/include/c++/7/bits/stl_algobase.h":386 81 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 1 dx)
        (reg:DI 89)) "/usr/include/c++/7/bits/stl_algobase.h":386 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 4 si)
        (reg:DI 90)) "/usr/include/c++/7/bits/stl_algobase.h":386 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 91)) "/usr/include/c++/7/bits/stl_algobase.h":386 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (nil)))
(call_insn 15 14 16 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKN2sf6VertexEPS4_EET0_T_S9_S8_") [flags 0x3]  <function_decl 0x7f7f8cc54d00 __copy_m>) [0 __copy_m S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/stl_algobase.h":386 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 16 15 19 2 (set (reg/f:DI 87 [ _7 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/stl_algobase.h":386 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 19 16 23 2 (set (reg/f:DI 88 [ <retval> ])
        (reg/f:DI 87 [ _7 ])) "/usr/include/c++/7/bits/stl_algobase.h":386 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _7 ])
        (nil)))
(insn 23 19 24 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 88 [ <retval> ])) "/usr/include/c++/7/bits/stl_algobase.h":387 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ <retval> ])
        (nil)))
(insn 24 23 0 2 (use (reg/i:DI 0 ax)) "/usr/include/c++/7/bits/stl_algobase.h":387 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function static void std::_Destroy_aux<true>::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = __gnu_cxx::__normal_iterator<sf::Vertex*, std::vector<sf::Vertex> >] (_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPN2sf6VertexESt6vectorIS5_SaIS5_EEEEEEvT_SB_, funcdef_no=3782, decl_uid=80724, cgraph_uid=1299, symbol_order=1303)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 9(l0): point = 0
   Insn 3(l0): point = 2
   Insn 2(l0): point = 4
Compressing live ranges: from 7 to 0 - 0%
Ranges after the compression:
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0
Disposition:
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


static void std::_Destroy_aux<true>::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = __gnu_cxx::__normal_iterator<sf::Vertex*, std::vector<sf::Vertex> >]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4 [si] 5 [di] 6 [bp]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 30{19d,11u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [69 D.80725+0 S8 A64])
        (reg:DI 5 di [ D.80725 ])) "/usr/include/c++/7/bits/stl_construct.h":117 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ D.80725 ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [69 D.80726+0 S8 A64])
        (reg:DI 4 si [ D.80726 ])) "/usr/include/c++/7/bits/stl_construct.h":117 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ D.80726 ])
        (nil)))
(note 4 3 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 4 0 2 (const_int 0 [0]) "/usr/include/c++/7/bits/stl_construct.h":117 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _Iterator std::__niter_base(_Iterator) [with _Iterator = sf::Vertex*] (_ZSt12__niter_baseIPN2sf6VertexEET_S3_, funcdef_no=3783, decl_uid=80731, cgraph_uid=1300, symbol_order=1304)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 14(l0): point = 0
   Insn 13(l0): point = 2
   Insn 9(l0): point = 4
   Insn 6(l0): point = 6
   Insn 2(l0): point = 8
 a0(r88): [3..4]
 a1(r87): [5..6]
Compressing live ranges: from 11 to 4 - 36%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     0    0:r88  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_Iterator std::__niter_base(_Iterator) [with _Iterator = sf::Vertex*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 5 [di] 6 [bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 36{22d,14u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 87 88
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [26 __it+0 S8 A64])
        (reg:DI 5 di [ __it ])) "/usr/include/c++/7/bits/stl_algobase.h":277 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __it ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 9 2 (set (reg/f:DI 87 [ _2 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [26 __it+0 S8 A64])) "/usr/include/c++/7/bits/stl_algobase.h":278 81 {*movdi_internal}
     (nil))
(insn 9 6 13 2 (set (reg/f:DI 88 [ <retval> ])
        (reg/f:DI 87 [ _2 ])) "/usr/include/c++/7/bits/stl_algobase.h":278 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _2 ])
        (nil)))
(insn 13 9 14 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 88 [ <retval> ])) "/usr/include/c++/7/bits/stl_algobase.h":278 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ <retval> ])
        (nil)))
(insn 14 13 0 2 (use (reg/i:DI 0 ax)) "/usr/include/c++/7/bits/stl_algobase.h":278 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = sf::Vertex*; _OI = sf::Vertex*] (_ZSt13__copy_move_aILb0EPN2sf6VertexES2_ET1_T0_S4_S3_, funcdef_no=3784, decl_uid=80733, cgraph_uid=1301, symbol_order=1305)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 15.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r91,l0) best DIREG, allocno GENERAL_REGS
    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r90,l0) best SIREG, allocno GENERAL_REGS
    r89: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r89,l0) best DREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 24(l0): point = 0
   Insn 23(l0): point = 2
   Insn 19(l0): point = 4
   Insn 16(l0): point = 6
   Insn 15(l0): point = 8
   Insn 14(l0): point = 10
   Insn 13(l0): point = 12
   Insn 12(l0): point = 14
   Insn 11(l0): point = 16
   Insn 10(l0): point = 18
   Insn 9(l0): point = 20
   Insn 8(l0): point = 22
   Insn 4(l0): point = 24
   Insn 3(l0): point = 26
   Insn 2(l0): point = 28
 a0(r88): [3..4]
 a1(r87): [5..6]
 a2(r91): [11..16]
 a3(r90): [13..18]
 a4(r89): [15..20]
Compressing live ranges: from 31 to 6 - 19%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
 a2(r91): [4..5]
 a3(r90): [4..5]
 a4(r89): [4..5]
  regions=1, blocks=3, points=6
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    1:r87  l0     0    0:r88  l0     0    4:r89  l0     1    3:r90  l0     2
    2:r91  l0     0
+++Costs: overall -5, reg -5, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = false; _II = sf::Vertex*; _OI = sf::Vertex*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={3d,3u} r1={3d,2u} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,9u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 129{100d,29u,0e} in 15{14 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [26 __first+0 S8 A64])
        (reg:DI 5 di [ __first ])) "/usr/include/c++/7/bits/stl_algobase.h":375 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [26 __last+0 S8 A64])
        (reg:DI 4 si [ __last ])) "/usr/include/c++/7/bits/stl_algobase.h":375 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __last ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [26 __result+0 S8 A64])
        (reg:DI 1 dx [ __result ])) "/usr/include/c++/7/bits/stl_algobase.h":375 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __result ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -1 [0xffffffffffffffff])) [19 __simple+0 S1 A8])
        (const_int 0 [0])) "/usr/include/c++/7/bits/stl_algobase.h":380 84 {*movqi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [26 __result+0 S8 A64])) "/usr/include/c++/7/bits/stl_algobase.h":386 81 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [26 __last+0 S8 A64])) "/usr/include/c++/7/bits/stl_algobase.h":386 81 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [26 __first+0 S8 A64])) "/usr/include/c++/7/bits/stl_algobase.h":386 81 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 1 dx)
        (reg:DI 89)) "/usr/include/c++/7/bits/stl_algobase.h":386 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 4 si)
        (reg:DI 90)) "/usr/include/c++/7/bits/stl_algobase.h":386 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 91)) "/usr/include/c++/7/bits/stl_algobase.h":386 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 91)
        (nil)))
(call_insn 15 14 16 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPN2sf6VertexES5_EET0_T_S7_S6_") [flags 0x3]  <function_decl 0x7f7f8c867300 __copy_m>) [0 __copy_m S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/stl_algobase.h":386 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 16 15 19 2 (set (reg/f:DI 87 [ _7 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/stl_algobase.h":386 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 19 16 23 2 (set (reg/f:DI 88 [ <retval> ])
        (reg/f:DI 87 [ _7 ])) "/usr/include/c++/7/bits/stl_algobase.h":386 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _7 ])
        (nil)))
(insn 23 19 24 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 88 [ <retval> ])) "/usr/include/c++/7/bits/stl_algobase.h":387 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ <retval> ])
        (nil)))
(insn 24 23 0 2 (use (reg/i:DI 0 ax)) "/usr/include/c++/7/bits/stl_algobase.h":387 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = sf::Vertex*; _ForwardIterator = sf::Vertex*; bool _TrivialValueTypes = false] (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN2sf6VertexES4_EET0_T_S6_S5_, funcdef_no=3785, decl_uid=80801, cgraph_uid=1302, symbol_order=1306)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 6 count 6 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 3, latch 4
;;  depth 1, outer 0
;;  nodes: 3 4
;; 2 succs { 3 }
;; 3 succs { 5 4 }
;; 4 succs { 3 }
;; 5 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 22.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r94: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r94,l0) best SIREG, allocno GENERAL_REGS
    r93: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r93,l0) best DIREG, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a3(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a5(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a6(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 38(l0): point = 0
   Insn 37(l0): point = 2
   Insn 33(l0): point = 4
   Insn 30(l0): point = 6
   Insn 13(l0): point = 9
   Insn 12(l0): point = 11
   Insn 11(l0): point = 13
   Insn 40(l0): point = 16
   Insn 24(l0): point = 18
   Insn 23(l0): point = 20
   Insn 22(l0): point = 22
   Insn 21(l0): point = 24
   Insn 20(l0): point = 26
   Insn 19(l0): point = 28
   Insn 18(l0): point = 30
   Insn 17(l0): point = 32
   Insn 16(l0): point = 34
   Insn 15(l0): point = 36
   Insn 9(l0): point = 39
   Insn 8(l0): point = 41
   Insn 4(l0): point = 43
   Insn 3(l0): point = 45
   Insn 2(l0): point = 47
 a0(r90): [3..4]
 a1(r89): [5..6]
 a2(r87): [25..30]
 a3(r94): [27..28]
 a4(r93): [35..36]
 a5(r92): [12..13]
 a6(r91): [40..41]
Compressing live ranges: from 50 to 12 - 24%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r89): [2..3]
 a2(r87): [6..7]
 a3(r94): [6..7]
 a4(r93): [8..9]
 a5(r92): [4..5]
 a6(r91): [10..11]
  regions=1, blocks=6, points=12
    allocnos=7 (big 0), copies=0, conflicts=0, ranges=7
Disposition:
    2:r87  l0     1    1:r89  l0     0    0:r90  l0     0    6:r91  l0     0
    5:r92  l0     0    4:r93  l0     0    3:r94  l0     0
+++Costs: overall -4, reg -4, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = sf::Vertex*; _ForwardIterator = sf::Vertex*; bool _TrivialValueTypes = false]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={4d,3u} r1={3d,1u} r2={3d} r4={4d,2u} r5={5d,3u} r6={1d,5u} r7={1d,7u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,4u} r17={5d,1u} r18={2d} r19={2d} r20={1d,19u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} 
;;    total ref usage 229{177d,52u,0e} in 23{21 regular + 2 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 91
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [26 __first+0 S8 A64])
        (reg:DI 5 di [ __first ])) "/usr/include/c++/7/bits/stl_uninitialized.h":76 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [26 __last+0 S8 A64])
        (reg:DI 4 si [ __last ])) "/usr/include/c++/7/bits/stl_uninitialized.h":76 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __last ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [26 __result+0 S8 A64])
        (reg:DI 1 dx [ __result ])) "/usr/include/c++/7/bits/stl_uninitialized.h":76 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __result ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [26 __result+0 S8 A64])) "/usr/include/c++/7/bits/stl_uninitialized.h":79 81 {*movdi_internal}
     (nil))
(insn 9 8 25 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [26 __cur+0 S8 A64])
        (reg/f:DI 91)) "/usr/include/c++/7/bits/stl_uninitialized.h":79 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (nil)))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;;              4 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 92
(code_label 25 9 10 3 160 (nil) [1 uses])
(note 10 25 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [26 __first+0 S8 A64])) "/usr/include/c++/7/bits/stl_uninitialized.h":82 81 {*movdi_internal}
     (nil))
(insn 12 11 13 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 92)
            (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])) [26 __last+0 S8 A64]))) "/usr/include/c++/7/bits/stl_uninitialized.h":82 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 92)
        (nil)))
(jump_insn 13 12 14 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) "/usr/include/c++/7/bits/stl_uninitialized.h":82 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 28)
;;  succ:       5
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 93 94
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [26 __cur+0 S8 A64])) "/usr/include/c++/7/bits/stl_uninitialized.h":83 81 {*movdi_internal}
     (nil))
(insn 16 15 17 4 (set (reg:DI 5 di)
        (reg:DI 93)) "/usr/include/c++/7/bits/stl_uninitialized.h":83 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (nil)))
(call_insn 17 16 18 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt11__addressofIN2sf6VertexEEPT_RS2_") [flags 0x3]  <function_decl 0x7f7f8c867600 __addressof>) [0 __addressof S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/stl_uninitialized.h":83 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 18 17 19 4 (set (reg/f:DI 87 [ _1 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/stl_uninitialized.h":83 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 19 18 20 4 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [26 __first+0 S8 A64])) "/usr/include/c++/7/bits/stl_uninitialized.h":83 81 {*movdi_internal}
     (nil))
(insn 20 19 21 4 (set (reg:DI 4 si)
        (reg:DI 94)) "/usr/include/c++/7/bits/stl_uninitialized.h":83 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94)
        (nil)))
(insn 21 20 22 4 (set (reg:DI 5 di)
        (reg/f:DI 87 [ _1 ])) "/usr/include/c++/7/bits/stl_uninitialized.h":83 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _1 ])
        (nil)))
(call_insn 22 21 23 4 (call (mem:QI (symbol_ref/i:DI ("_ZSt10_ConstructIN2sf6VertexEJRS1_EEvPT_DpOT0_") [flags 0x3]  <function_decl 0x7f7f8c867700 _Construct>) [0 _Construct S1 A8])
        (const_int 0 [0])) "/usr/include/c++/7/bits/stl_uninitialized.h":83 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 23 22 24 4 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -24 [0xffffffffffffffe8])) [26 __first+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [26 __first+0 S8 A64])
                    (const_int 20 [0x14])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/stl_uninitialized.h":82 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 24 23 40 4 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [26 __cur+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [26 __cur+0 S8 A64])
                    (const_int 20 [0x14])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/stl_uninitialized.h":82 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 40 24 41 4 (set (pc)
        (label_ref 25)) "/usr/include/c++/7/bits/stl_uninitialized.h":82 649 {jump}
     (nil)
 -> 25)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 41 40 28)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (RTL)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 89 90
(code_label 28 41 29 5 159 (nil) [1 uses])
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 33 5 (set (reg/f:DI 89 [ _15 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [26 __cur+0 S8 A64])) "/usr/include/c++/7/bits/stl_uninitialized.h":84 81 {*movdi_internal}
     (nil))
(insn 33 30 37 5 (set (reg/f:DI 90 [ <retval> ])
        (reg/f:DI 89 [ _15 ])) "/usr/include/c++/7/bits/stl_uninitialized.h":84 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ _15 ])
        (nil)))
(insn 37 33 38 5 (set (reg/i:DI 0 ax)
        (reg/f:DI 90 [ <retval> ])) "/usr/include/c++/7/bits/stl_uninitialized.h":91 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ <retval> ])
        (nil)))
(insn 38 37 0 5 (use (reg/i:DI 0 ax)) "/usr/include/c++/7/bits/stl_uninitialized.h":91 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = sf::Vertex] (_ZN9__gnu_cxx13new_allocatorIN2sf6VertexEE8allocateEmPKv, funcdef_no=3820, decl_uid=58802, cgraph_uid=1337, symbol_order=1341)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 5 n_edges 4 count 5 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 29.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r96: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r96,l0) best AREG, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r92,l0) best DIREG, allocno GENERAL_REGS
    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r91,l0) best AREG, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a2(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:8 NO_REX_SSE_REGS:8 SSE_REGS:8 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a3(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a4(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:66 NO_REX_SSE_REGS:66 SSE_REGS:66 MMX_REGS:94 INT_SSE_REGS:78 ALL_REGS:1448 MEM:20
  a5(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:13 NO_REX_SSE_REGS:13 SSE_REGS:13 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a6(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:38 INT_SSE_REGS:30 ALL_REGS:520 MEM:10
  a7(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:7
  a8(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a9(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 39(l0): point = 0
   Insn 38(l0): point = 2
   Insn 34(l0): point = 4
   Insn 31(l0): point = 6
   Insn 30(l0): point = 8
   Insn 29(l0): point = 10
   Insn 28(l0): point = 12
   Insn 27(l0): point = 14
   Insn 26(l0): point = 16
   Insn 25(l0): point = 18
   Insn 24(l0): point = 20
   Insn 23(l0): point = 22
   Insn 22(l0): point = 24
   Insn 21(l0): point = 26
   Insn 17(l0): point = 29
   Insn 15(l0): point = 32
   Insn 14(l0): point = 34
   Insn 13(l0): point = 36
   Insn 12(l0): point = 38
   Insn 11(l0): point = 40
   Insn 10(l0): point = 42
   Insn 9(l0): point = 44
   Insn 8(l0): point = 46
   Insn 4(l0): point = 48
   Insn 3(l0): point = 50
   Insn 2(l0): point = 52
 a0(r91): [3..4]
 a1(r90): [5..6]
 a2(r96): [7..8]
 a3(r88): [13..14]
 a4(r94): [19..24] [15..16]
 a5(r95): [17..18]
 a6(r93): [21..26]
 a7(r89): [35..36]
 a8(r87): [39..40]
 a9(r92): [45..46]
Compressing live ranges: from 55 to 20 - 36%
Ranges after the compression:
 a0(r91): [0..1]
 a1(r90): [2..3]
 a2(r96): [4..5]
 a3(r88): [6..7]
 a4(r94): [12..13] [8..9]
 a5(r95): [10..11]
 a6(r93): [12..13]
 a7(r89): [14..15]
 a8(r87): [16..17]
 a9(r92): [18..19]
  regions=1, blocks=5, points=20
    allocnos=10 (big 0), copies=0, conflicts=0, ranges=11
Disposition:
    8:r87  l0     0    3:r88  l0     0    7:r89  l0     0    1:r90  l0     0
    0:r91  l0     0    9:r92  l0     0    6:r93  l0     1    4:r94  l0     0
    5:r95  l0     0    2:r96  l0     0
+++Costs: overall -5, reg -5, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = sf::Vertex]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={5d,4u} r1={4d,1u} r2={4d} r4={4d,1u} r5={6d,3u} r6={1d,4u} r7={1d,7u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,3u} r17={8d,2u} r18={3d} r19={3d} r20={1d,10u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,2u,1e} r94={4d,4u} r95={1d,1u} r96={1d,1u} 
;;    total ref usage 306{256d,49u,1e} in 26{23 regular + 3 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 89 92
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [73 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "/usr/include/c++/7/ext/new_allocator.h":99 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [4 __n+0 S8 A64])
        (reg:DI 4 si [ __n ])) "/usr/include/c++/7/ext/new_allocator.h":99 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __n ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [5 D.58805+0 S8 A64])
        (reg:DI 1 dx [ D.58805 ])) "/usr/include/c++/7/ext/new_allocator.h":99 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ D.58805 ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [73 this+0 S8 A64])) "/usr/include/c++/7/ext/new_allocator.h":101 81 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 92)) "/usr/include/c++/7/ext/new_allocator.h":101 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92)
        (nil)))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNK9__gnu_cxx13new_allocatorIN2sf6VertexEE8max_sizeEv") [flags 0x3]  <function_decl 0x7f7f8d96ec00 max_size>) [0 max_size S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/ext/new_allocator.h":101 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 87 [ _1 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/ext/new_allocator.h":101 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 12 11 13 2 (set (reg:CC 17 flags)
        (compare:CC (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [4 __n+0 S8 A64])
            (reg:DI 87 [ _1 ]))) "/usr/include/c++/7/ext/new_allocator.h":101 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 87 [ _1 ])
        (nil)))
(insn 13 12 14 2 (set (reg:QI 89 [ retval.6_7 ])
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) "/usr/include/c++/7/ext/new_allocator.h":101 613 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil)))
(insn 14 13 15 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 89 [ retval.6_7 ])
            (const_int 0 [0]))) "/usr/include/c++/7/ext/new_allocator.h":101 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 89 [ retval.6_7 ])
        (nil)))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) "/usr/include/c++/7/ext/new_allocator.h":101 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 19)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 17 16 18 3 (call (mem:QI (symbol_ref:DI ("_ZSt17__throw_bad_allocv") [flags 0x41]  <function_decl 0x7f7f8fa76d00 __throw_bad_alloc>) [0 __throw_bad_alloc S1 A8])
        (const_int 0 [0])) "/usr/include/c++/7/ext/new_allocator.h":102 655 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 18 17 19)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (RTL)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 90 91 93 94 95 96
(code_label 19 18 20 4 163 (nil) [1 uses])
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (set (reg:DI 93)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [4 __n+0 S8 A64])) "/usr/include/c++/7/ext/new_allocator.h":111 81 {*movdi_internal}
     (nil))
(insn 22 21 23 4 (set (reg:DI 94)
        (reg:DI 93)) "/usr/include/c++/7/ext/new_allocator.h":111 81 {*movdi_internal}
     (nil))
(insn 23 22 24 4 (parallel [
            (set (reg:DI 94)
                (ashift:DI (reg:DI 94)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/ext/new_allocator.h":111 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 24 23 25 4 (parallel [
            (set (reg:DI 94)
                (plus:DI (reg:DI 94)
                    (reg:DI 93)))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/ext/new_allocator.h":111 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 93)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:DI (reg:DI 93)
                    (const_int 5 [0x5]))
                (nil)))))
(insn 25 24 26 4 (parallel [
            (set (reg:DI 95)
                (ashift:DI (reg:DI 94)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/ext/new_allocator.h":111 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 94)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 26 25 27 4 (set (reg:DI 94)
        (reg:DI 95)) "/usr/include/c++/7/ext/new_allocator.h":111 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 95)
        (nil)))
(insn 27 26 28 4 (set (reg:DI 88 [ _2 ])
        (reg:DI 94)) "/usr/include/c++/7/ext/new_allocator.h":111 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94)
        (nil)))
(insn 28 27 29 4 (set (reg:DI 5 di)
        (reg:DI 88 [ _2 ])) "/usr/include/c++/7/ext/new_allocator.h":111 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ _2 ])
        (nil)))
(call_insn 29 28 30 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f7f904edd00 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/ext/new_allocator.h":111 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 30 29 31 4 (set (reg/f:DI 96)
        (reg:DI 0 ax)) "/usr/include/c++/7/ext/new_allocator.h":111 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 96)
            (nil))))
(insn 31 30 34 4 (set (reg/f:DI 90 [ _9 ])
        (reg/f:DI 96)) "/usr/include/c++/7/ext/new_allocator.h":111 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 96)
        (nil)))
(insn 34 31 38 4 (set (reg/f:DI 91 [ <retval> ])
        (reg/f:DI 90 [ _9 ])) "/usr/include/c++/7/ext/new_allocator.h":111 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ _9 ])
        (nil)))
(insn 38 34 39 4 (set (reg/i:DI 0 ax)
        (reg/f:DI 91 [ <retval> ])) "/usr/include/c++/7/ext/new_allocator.h":112 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ <retval> ])
        (nil)))
(insn 39 38 0 4 (use (reg/i:DI 0 ax)) "/usr/include/c++/7/ext/new_allocator.h":112 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const sf::Vertex*, std::vector<sf::Vertex> >; _ForwardIterator = sf::Vertex*; bool _TrivialValueTypes = false] (_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_, funcdef_no=3821, decl_uid=81652, cgraph_uid=1338, symbol_order=1342)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 6 count 6 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 3, latch 4
;;  depth 1, outer 0
;;  nodes: 3 4
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 3 }
;; 5 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 22.
verify found no changes in insn with uid = 26.
verify found no changes in insn with uid = 30.
verify found no changes in insn with uid = 33.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r98: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r98,l0) best DIREG, allocno GENERAL_REGS
    r97: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r97,l0) best DIREG, allocno GENERAL_REGS
    r96: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r96,l0) best DIREG, allocno GENERAL_REGS
    r95: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r95,l0) best DIREG, allocno GENERAL_REGS
    r94: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r94,l0) best SIREG, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r92,l0) best AREG, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r90,l0) best AREG, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a3(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a4(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a5(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a6(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a7(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:5
  a8(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a9(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a10(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 48(l0): point = 0
   Insn 47(l0): point = 2
   Insn 43(l0): point = 4
   Insn 40(l0): point = 6
   Insn 18(l0): point = 9
   Insn 17(l0): point = 11
   Insn 16(l0): point = 13
   Insn 15(l0): point = 15
   Insn 14(l0): point = 17
   Insn 13(l0): point = 19
   Insn 12(l0): point = 21
   Insn 11(l0): point = 23
   Insn 50(l0): point = 26
   Insn 34(l0): point = 28
   Insn 33(l0): point = 30
   Insn 32(l0): point = 32
   Insn 31(l0): point = 34
   Insn 30(l0): point = 36
   Insn 29(l0): point = 38
   Insn 28(l0): point = 40
   Insn 27(l0): point = 42
   Insn 26(l0): point = 44
   Insn 25(l0): point = 46
   Insn 24(l0): point = 48
   Insn 23(l0): point = 50
   Insn 22(l0): point = 52
   Insn 21(l0): point = 54
   Insn 20(l0): point = 56
   Insn 9(l0): point = 59
   Insn 8(l0): point = 61
   Insn 4(l0): point = 63
   Insn 3(l0): point = 65
   Insn 2(l0): point = 67
 a0(r92): [3..4]
 a1(r91): [5..6]
 a2(r98): [33..34]
 a3(r88): [39..42]
 a4(r87): [41..50]
 a5(r97): [47..48]
 a6(r96): [55..56]
 a7(r90): [12..13]
 a8(r95): [18..21]
 a9(r94): [20..23]
 a10(r93): [60..61]
Compressing live ranges: from 70 to 18 - 25%
Ranges after the compression:
 a0(r92): [0..1]
 a1(r91): [2..3]
 a2(r98): [8..9]
 a3(r88): [10..11]
 a4(r87): [10..13]
 a5(r97): [12..13]
 a6(r96): [14..15]
 a7(r90): [4..5]
 a8(r95): [6..7]
 a9(r94): [6..7]
 a10(r93): [16..17]
  regions=1, blocks=6, points=18
    allocnos=11 (big 0), copies=0, conflicts=0, ranges=11
Disposition:
    4:r87  l0     3    3:r88  l0     0    7:r90  l0     0    1:r91  l0     0
    0:r92  l0     0   10:r93  l0     0    9:r94  l0     1    8:r95  l0     0
    6:r96  l0     0    5:r97  l0     0    2:r98  l0     0
+++Costs: overall -9, reg -9, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


static _ForwardIterator std::__uninitialized_copy<_TrivialValueTypes>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = __gnu_cxx::__normal_iterator<const sf::Vertex*, std::vector<sf::Vertex> >; _ForwardIterator = sf::Vertex*; bool _TrivialValueTypes = false]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={7d,5u} r1={6d,1u} r2={6d} r4={8d,3u} r5={11d,6u} r6={1d,5u} r7={1d,10u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r16={1d,4u} r17={11d,1u} r18={5d} r19={5d} r20={1d,18u} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={6d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={6d} r38={6d} r39={5d} r40={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r87={1d,1u} r88={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} 
;;    total ref usage 468{404d,64u,0e} in 33{28 regular + 5 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 93
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [68 __first+0 S8 A64])
        (reg:DI 5 di [ __first ])) "/usr/include/c++/7/bits/stl_uninitialized.h":76 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [68 __last+0 S8 A64])
        (reg:DI 4 si [ __last ])) "/usr/include/c++/7/bits/stl_uninitialized.h":76 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __last ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [26 __result+0 S8 A64])
        (reg:DI 1 dx [ __result ])) "/usr/include/c++/7/bits/stl_uninitialized.h":76 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __result ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [26 __result+0 S8 A64])) "/usr/include/c++/7/bits/stl_uninitialized.h":79 81 {*movdi_internal}
     (nil))
(insn 9 8 35 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [26 __cur+0 S8 A64])
        (reg/f:DI 93)) "/usr/include/c++/7/bits/stl_uninitialized.h":79 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93)
        (nil)))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;;              4 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 90 94 95
(code_label 35 9 10 3 167 (nil) [1 uses])
(note 10 35 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (parallel [
            (set (reg:DI 94)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/stl_uninitialized.h":82 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 12 11 13 3 (parallel [
            (set (reg:DI 95)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/stl_uninitialized.h":82 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 13 12 14 3 (set (reg:DI 4 si)
        (reg:DI 94)) "/usr/include/c++/7/bits/stl_uninitialized.h":82 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94)
        (nil)))
(insn 14 13 15 3 (set (reg:DI 5 di)
        (reg:DI 95)) "/usr/include/c++/7/bits/stl_uninitialized.h":82 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 95)
        (nil)))
(call_insn 15 14 16 3 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxxneIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_") [flags 0x3]  <function_decl 0x7f7f8c896300 operator!=>) [0 operator!= S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/stl_uninitialized.h":82 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 16 15 17 3 (set (reg:QI 90 [ retval.7_10 ])
        (reg:QI 0 ax)) "/usr/include/c++/7/bits/stl_uninitialized.h":82 84 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 17 16 18 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 90 [ retval.7_10 ])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/stl_uninitialized.h":82 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 90 [ retval.7_10 ])
        (nil)))
(jump_insn 18 17 19 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) "/usr/include/c++/7/bits/stl_uninitialized.h":82 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 38)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 96 97 98
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (parallel [
            (set (reg:DI 96)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/stl_uninitialized.h":83 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 21 20 22 4 (set (reg:DI 5 di)
        (reg:DI 96)) "/usr/include/c++/7/bits/stl_uninitialized.h":83 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96)
        (nil)))
(call_insn 22 21 23 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEdeEv") [flags 0x3]  <function_decl 0x7f7f8ce1e300 operator*>) [0 operator* S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/stl_uninitialized.h":83 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 23 22 24 4 (set (reg/f:DI 87 [ _1 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/stl_uninitialized.h":83 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 24 23 25 4 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [26 __cur+0 S8 A64])) "/usr/include/c++/7/bits/stl_uninitialized.h":83 81 {*movdi_internal}
     (nil))
(insn 25 24 26 4 (set (reg:DI 5 di)
        (reg:DI 97)) "/usr/include/c++/7/bits/stl_uninitialized.h":83 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 97)
        (nil)))
(call_insn 26 25 27 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt11__addressofIN2sf6VertexEEPT_RS2_") [flags 0x3]  <function_decl 0x7f7f8c867600 __addressof>) [0 __addressof S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/stl_uninitialized.h":83 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 27 26 28 4 (set (reg/f:DI 88 [ _2 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/stl_uninitialized.h":83 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 28 27 29 4 (set (reg:DI 4 si)
        (reg/f:DI 87 [ _1 ])) "/usr/include/c++/7/bits/stl_uninitialized.h":83 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _1 ])
        (nil)))
(insn 29 28 30 4 (set (reg:DI 5 di)
        (reg/f:DI 88 [ _2 ])) "/usr/include/c++/7/bits/stl_uninitialized.h":83 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ _2 ])
        (nil)))
(call_insn 30 29 31 4 (call (mem:QI (symbol_ref/i:DI ("_ZSt10_ConstructIN2sf6VertexEJRKS1_EEvPT_DpOT0_") [flags 0x3]  <function_decl 0x7f7f8c896400 _Construct>) [0 _Construct S1 A8])
        (const_int 0 [0])) "/usr/include/c++/7/bits/stl_uninitialized.h":83 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 31 30 32 4 (parallel [
            (set (reg:DI 98)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/stl_uninitialized.h":82 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 32 31 33 4 (set (reg:DI 5 di)
        (reg:DI 98)) "/usr/include/c++/7/bits/stl_uninitialized.h":82 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 98)
        (nil)))
(call_insn 33 32 34 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEppEv") [flags 0x3]  <function_decl 0x7f7f8ce1e500 operator++>) [0 operator++ S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/stl_uninitialized.h":82 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:DI 0 ax)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 34 33 50 4 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [26 __cur+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [26 __cur+0 S8 A64])
                    (const_int 20 [0x14])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/stl_uninitialized.h":82 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 50 34 51 4 (set (pc)
        (label_ref 35)) "/usr/include/c++/7/bits/stl_uninitialized.h":82 649 {jump}
     (nil)
 -> 35)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 51 50 38)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (RTL)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 91 92
(code_label 38 51 39 5 166 (nil) [1 uses])
(note 39 38 40 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 43 5 (set (reg/f:DI 91 [ _11 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [26 __cur+0 S8 A64])) "/usr/include/c++/7/bits/stl_uninitialized.h":84 81 {*movdi_internal}
     (nil))
(insn 43 40 47 5 (set (reg/f:DI 92 [ <retval> ])
        (reg/f:DI 91 [ _11 ])) "/usr/include/c++/7/bits/stl_uninitialized.h":84 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ _11 ])
        (nil)))
(insn 47 43 48 5 (set (reg/i:DI 0 ax)
        (reg/f:DI 92 [ <retval> ])) "/usr/include/c++/7/bits/stl_uninitialized.h":91 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ <retval> ])
        (nil)))
(insn 48 47 0 5 (use (reg/i:DI 0 ax)) "/usr/include/c++/7/bits/stl_uninitialized.h":91 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = const sf::Vertex*; _Container = std::vector<sf::Vertex>] (_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEE4baseEv, funcdef_no=3822, decl_uid=79302, cgraph_uid=1339, symbol_order=1343)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 14(l0): point = 0
   Insn 13(l0): point = 2
   Insn 9(l0): point = 4
   Insn 6(l0): point = 6
   Insn 2(l0): point = 8
 a0(r88): [3..4]
 a1(r87): [5..6]
Compressing live ranges: from 11 to 4 - 36%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     0    0:r88  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = const sf::Vertex*; _Container = std::vector<sf::Vertex>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 5 [di] 6 [bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 36{22d,14u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 87 88
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [70 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "/usr/include/c++/7/bits/stl_iterator.h":844 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 9 2 (set (reg/f:DI 87 [ _2 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [70 this+0 S8 A64])) "/usr/include/c++/7/bits/stl_iterator.h":845 81 {*movdi_internal}
     (nil))
(insn 9 6 13 2 (set (reg/f:DI 88 [ <retval> ])
        (reg/f:DI 87 [ _2 ])) "/usr/include/c++/7/bits/stl_iterator.h":845 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _2 ])
        (nil)))
(insn 13 9 14 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 88 [ <retval> ])) "/usr/include/c++/7/bits/stl_iterator.h":845 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ <retval> ])
        (nil)))
(insn 14 13 0 2 (use (reg/i:DI 0 ax)) "/usr/include/c++/7/bits/stl_iterator.h":845 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = sf::Vertex*; _Container = std::vector<sf::Vertex>] (_ZNK9__gnu_cxx17__normal_iteratorIPN2sf6VertexESt6vectorIS2_SaIS2_EEE4baseEv, funcdef_no=3823, decl_uid=79444, cgraph_uid=1340, symbol_order=1344)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 14(l0): point = 0
   Insn 13(l0): point = 2
   Insn 9(l0): point = 4
   Insn 6(l0): point = 6
   Insn 2(l0): point = 8
 a0(r88): [3..4]
 a1(r87): [5..6]
Compressing live ranges: from 11 to 4 - 36%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     0    0:r88  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = sf::Vertex*; _Container = std::vector<sf::Vertex>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 5 [di] 6 [bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 36{22d,14u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 87 88
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [72 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "/usr/include/c++/7/bits/stl_iterator.h":844 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 9 2 (set (reg/f:DI 87 [ _2 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [72 this+0 S8 A64])) "/usr/include/c++/7/bits/stl_iterator.h":845 81 {*movdi_internal}
     (nil))
(insn 9 6 13 2 (set (reg/f:DI 88 [ <retval> ])
        (reg/f:DI 87 [ _2 ])) "/usr/include/c++/7/bits/stl_iterator.h":845 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _2 ])
        (nil)))
(insn 13 9 14 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 88 [ <retval> ])) "/usr/include/c++/7/bits/stl_iterator.h":845 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ <retval> ])
        (nil)))
(insn 14 13 0 2 (use (reg/i:DI 0 ax)) "/usr/include/c++/7/bits/stl_iterator.h":845 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function static _OI std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m(_II, _II, _OI) [with _II = const sf::Vertex*; _OI = sf::Vertex*] (_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKN2sf6VertexEPS4_EET0_T_S9_S8_, funcdef_no=3824, decl_uid=81684, cgraph_uid=1341, symbol_order=1345)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 6 count 6 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 3, latch 4
;;  depth 1, outer 0
;;  nodes: 3 4
;; 2 succs { 3 }
;; 3 succs { 5 4 }
;; 4 succs { 3 }
;; 5 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred INT_SSE_REGS, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a5 (r97,l0) best INT_SSE_REGS, allocno INT_SSE_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r91,l0) best AREG, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:28 NO_REX_SSE_REGS:28 SSE_REGS:28 MMX_REGS:38 INT_SSE_REGS:30 ALL_REGS:520 MEM:12
  a3(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a4(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:28 NO_REX_SSE_REGS:28 SSE_REGS:28 MMX_REGS:38 INT_SSE_REGS:30 ALL_REGS:520 MEM:12
  a5(r97,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 INT_SSE_REGS:33 MEM:16
  a6(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:13 NO_REX_SSE_REGS:13 SSE_REGS:13 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a7(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a8(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a9(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a10(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a11(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 41(l0): point = 0
   Insn 40(l0): point = 2
   Insn 36(l0): point = 4
   Insn 33(l0): point = 6
   Insn 17(l0): point = 9
   Insn 16(l0): point = 11
   Insn 43(l0): point = 14
   Insn 27(l0): point = 16
   Insn 26(l0): point = 18
   Insn 25(l0): point = 20
   Insn 24(l0): point = 22
   Insn 23(l0): point = 24
   Insn 22(l0): point = 26
   Insn 21(l0): point = 28
   Insn 20(l0): point = 30
   Insn 19(l0): point = 32
   Insn 14(l0): point = 35
   Insn 13(l0): point = 37
   Insn 12(l0): point = 39
   Insn 11(l0): point = 41
   Insn 10(l0): point = 43
   Insn 9(l0): point = 45
   Insn 8(l0): point = 47
   Insn 4(l0): point = 49
   Insn 3(l0): point = 51
   Insn 2(l0): point = 53
 a0(r91): [3..4]
 a1(r90): [5..6]
 a2(r95): [23..32]
 a3(r98): [23..24]
 a4(r96): [25..30]
 a5(r97 [0]): [27..28]
 a5(r97 [1]): [27..28]
 a6(r93): [36..37]
 a7(r94): [38..39]
 a8(r92): [38..41]
 a9(r89): [42..43]
 a10(r88): [44..45]
 a11(r87): [44..47]
Compressing live ranges: from 56 to 16 - 28%
Ranges after the compression:
 a0(r91): [0..1]
 a1(r90): [2..3]
 a2(r95): [4..7]
 a3(r98): [4..5]
 a4(r96): [6..7]
 a5(r97 [0]): [6..7]
 a5(r97 [1]): [6..7]
 a6(r93): [8..9]
 a7(r94): [10..11]
 a8(r92): [10..11]
 a9(r89): [12..13]
 a10(r88): [14..15]
 a11(r87): [14..15]
  regions=1, blocks=6, points=16
    allocnos=12 (big 1), copies=0, conflicts=0, ranges=13
Disposition:
   11:r87  l0     1   10:r88  l0     0    9:r89  l0     0    1:r90  l0     0
    0:r91  l0     0    8:r92  l0     1    6:r93  l0     0    7:r94  l0     0
    2:r95  l0     2    4:r96  l0     4    5:r97  l0     0    3:r98  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


static _OI std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m(_II, _II, _OI) [with _II = const sf::Vertex*; _OI = sf::Vertex*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d,1u} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,5u} r7={1d,5u} r16={1d,4u} r17={7d,1u} r20={1d,21u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,2u} r96={1d,2u} r97={1d,1u} r98={1d,1u} 
;;    total ref usage 94{39d,55u,0e} in 26{26 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 88 89 92 93 94
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [26 __first+0 S8 A64])
        (reg:DI 5 di [ __first ])) "/usr/include/c++/7/bits/stl_algobase.h":319 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [26 __last+0 S8 A64])
        (reg:DI 4 si [ __last ])) "/usr/include/c++/7/bits/stl_algobase.h":319 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __last ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [26 __result+0 S8 A64])
        (reg:DI 1 dx [ __result ])) "/usr/include/c++/7/bits/stl_algobase.h":319 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __result ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 87 [ __last.9_1 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [26 __last+0 S8 A64])) "/usr/include/c++/7/bits/stl_algobase.h":322 81 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 88 [ __first.10_2 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [26 __first+0 S8 A64])) "/usr/include/c++/7/bits/stl_algobase.h":322 81 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg:DI 89 [ _3 ])
                (minus:DI (reg:DI 87 [ __last.9_1 ])
                    (reg:DI 88 [ __first.10_2 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/stl_algobase.h":322 274 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 88 [ __first.10_2 ])
        (expr_list:REG_DEAD (reg:DI 87 [ __last.9_1 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 11 10 12 2 (parallel [
            (set (reg:DI 92)
                (ashiftrt:DI (reg:DI 89 [ _3 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/stl_algobase.h":322 547 {*ashrdi3_1}
     (expr_list:REG_DEAD (reg:DI 89 [ _3 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 12 11 13 2 (set (reg:DI 94)
        (const_int -3689348814741910323 [0xcccccccccccccccd])) "/usr/include/c++/7/bits/stl_algobase.h":322 81 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg:DI 93)
                (mult:DI (reg:DI 92)
                    (reg:DI 94)))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/stl_algobase.h":322 329 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 94)
        (expr_list:REG_DEAD (reg:DI 92)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 14 13 28 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [4 __n+0 S8 A64])
        (reg:DI 93)) "/usr/include/c++/7/bits/stl_algobase.h":322 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (nil)))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;;              4 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 28 14 15 3 175 (nil) [1 uses])
(note 15 28 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [4 __n+0 S8 A64])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/stl_algobase.h":322 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 17 16 18 3 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "/usr/include/c++/7/bits/stl_algobase.h":322 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 31)
;;  succ:       5
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 95 96 97 98
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [26 __result+0 S8 A64])) "/usr/include/c++/7/bits/stl_algobase.h":324 81 {*movdi_internal}
     (nil))
(insn 20 19 21 4 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [26 __first+0 S8 A64])) "/usr/include/c++/7/bits/stl_algobase.h":324 81 {*movdi_internal}
     (nil))
(insn 21 20 22 4 (set (reg:TI 97)
        (mem:TI (reg/f:DI 96) [49 *__first_4+0 S16 A32])) "/usr/include/c++/7/bits/stl_algobase.h":324 80 {*movti_internal}
     (nil))
(insn 22 21 23 4 (set (mem:TI (reg/f:DI 95) [49 *__result_5+0 S16 A32])
        (reg:TI 97)) "/usr/include/c++/7/bits/stl_algobase.h":324 80 {*movti_internal}
     (expr_list:REG_DEAD (reg:TI 97)
        (nil)))
(insn 23 22 24 4 (set (reg:SI 98)
        (mem:SI (plus:DI (reg/f:DI 96)
                (const_int 16 [0x10])) [49 *__first_4+16 S4 A32])) "/usr/include/c++/7/bits/stl_algobase.h":324 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 96)
        (nil)))
(insn 24 23 25 4 (set (mem:SI (plus:DI (reg/f:DI 95)
                (const_int 16 [0x10])) [49 *__result_5+16 S4 A32])
        (reg:SI 98)) "/usr/include/c++/7/bits/stl_algobase.h":324 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 98)
        (expr_list:REG_DEAD (reg/f:DI 95)
            (nil))))
(insn 25 24 26 4 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -24 [0xffffffffffffffe8])) [26 __first+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [26 __first+0 S8 A64])
                    (const_int 20 [0x14])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/stl_algobase.h":325 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 26 25 27 4 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -40 [0xffffffffffffffd8])) [26 __result+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [26 __result+0 S8 A64])
                    (const_int 20 [0x14])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/stl_algobase.h":326 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 27 26 43 4 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [4 __n+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [4 __n+0 S8 A64])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/stl_algobase.h":322 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 43 27 44 4 (set (pc)
        (label_ref 28)) "/usr/include/c++/7/bits/stl_algobase.h":322 649 {jump}
     (nil)
 -> 28)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 44 43 31)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (RTL)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 90 91
(code_label 31 44 32 5 174 (nil) [1 uses])
(note 32 31 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 36 5 (set (reg/f:DI 90 [ _17 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [26 __result+0 S8 A64])) "/usr/include/c++/7/bits/stl_algobase.h":328 81 {*movdi_internal}
     (nil))
(insn 36 33 40 5 (set (reg/f:DI 91 [ <retval> ])
        (reg/f:DI 90 [ _17 ])) "/usr/include/c++/7/bits/stl_algobase.h":328 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ _17 ])
        (nil)))
(insn 40 36 41 5 (set (reg/i:DI 0 ax)
        (reg/f:DI 91 [ <retval> ])) "/usr/include/c++/7/bits/stl_algobase.h":329 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ <retval> ])
        (nil)))
(insn 41 40 0 5 (use (reg/i:DI 0 ax)) "/usr/include/c++/7/bits/stl_algobase.h":329 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function static _OI std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m(_II, _II, _OI) [with _II = sf::Vertex*; _OI = sf::Vertex*] (_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPN2sf6VertexES5_EET0_T_S7_S6_, funcdef_no=3825, decl_uid=81695, cgraph_uid=1342, symbol_order=1346)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 6 count 6 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 3, latch 4
;;  depth 1, outer 0
;;  nodes: 3 4
;; 2 succs { 3 }
;; 3 succs { 5 4 }
;; 4 succs { 3 }
;; 5 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred INT_SSE_REGS, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a5 (r97,l0) best INT_SSE_REGS, allocno INT_SSE_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r91,l0) best AREG, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:28 NO_REX_SSE_REGS:28 SSE_REGS:28 MMX_REGS:38 INT_SSE_REGS:30 ALL_REGS:520 MEM:12
  a3(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a4(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:28 NO_REX_SSE_REGS:28 SSE_REGS:28 MMX_REGS:38 INT_SSE_REGS:30 ALL_REGS:520 MEM:12
  a5(r97,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 INT_SSE_REGS:33 MEM:16
  a6(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:13 NO_REX_SSE_REGS:13 SSE_REGS:13 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:8
  a7(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a8(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a9(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a10(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a11(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 41(l0): point = 0
   Insn 40(l0): point = 2
   Insn 36(l0): point = 4
   Insn 33(l0): point = 6
   Insn 17(l0): point = 9
   Insn 16(l0): point = 11
   Insn 43(l0): point = 14
   Insn 27(l0): point = 16
   Insn 26(l0): point = 18
   Insn 25(l0): point = 20
   Insn 24(l0): point = 22
   Insn 23(l0): point = 24
   Insn 22(l0): point = 26
   Insn 21(l0): point = 28
   Insn 20(l0): point = 30
   Insn 19(l0): point = 32
   Insn 14(l0): point = 35
   Insn 13(l0): point = 37
   Insn 12(l0): point = 39
   Insn 11(l0): point = 41
   Insn 10(l0): point = 43
   Insn 9(l0): point = 45
   Insn 8(l0): point = 47
   Insn 4(l0): point = 49
   Insn 3(l0): point = 51
   Insn 2(l0): point = 53
 a0(r91): [3..4]
 a1(r90): [5..6]
 a2(r95): [23..32]
 a3(r98): [23..24]
 a4(r96): [25..30]
 a5(r97 [0]): [27..28]
 a5(r97 [1]): [27..28]
 a6(r93): [36..37]
 a7(r94): [38..39]
 a8(r92): [38..41]
 a9(r89): [42..43]
 a10(r88): [44..45]
 a11(r87): [44..47]
Compressing live ranges: from 56 to 16 - 28%
Ranges after the compression:
 a0(r91): [0..1]
 a1(r90): [2..3]
 a2(r95): [4..7]
 a3(r98): [4..5]
 a4(r96): [6..7]
 a5(r97 [0]): [6..7]
 a5(r97 [1]): [6..7]
 a6(r93): [8..9]
 a7(r94): [10..11]
 a8(r92): [10..11]
 a9(r89): [12..13]
 a10(r88): [14..15]
 a11(r87): [14..15]
  regions=1, blocks=6, points=16
    allocnos=12 (big 1), copies=0, conflicts=0, ranges=13
Disposition:
   11:r87  l0     1   10:r88  l0     0    9:r89  l0     0    1:r90  l0     0
    0:r91  l0     0    8:r92  l0     1    6:r93  l0     0    7:r94  l0     0
    2:r95  l0     2    4:r96  l0     4    5:r97  l0     0    3:r98  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


static _OI std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m(_II, _II, _OI) [with _II = sf::Vertex*; _OI = sf::Vertex*]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d,1u} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,5u} r7={1d,5u} r16={1d,4u} r17={7d,1u} r20={1d,21u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,2u} r96={1d,2u} r97={1d,1u} r98={1d,1u} 
;;    total ref usage 94{39d,55u,0e} in 26{26 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 88 89 92 93 94
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [26 __first+0 S8 A64])
        (reg:DI 5 di [ __first ])) "/usr/include/c++/7/bits/stl_algobase.h":319 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __first ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [26 __last+0 S8 A64])
        (reg:DI 4 si [ __last ])) "/usr/include/c++/7/bits/stl_algobase.h":319 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __last ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [26 __result+0 S8 A64])
        (reg:DI 1 dx [ __result ])) "/usr/include/c++/7/bits/stl_algobase.h":319 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __result ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 87 [ __last.11_1 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [26 __last+0 S8 A64])) "/usr/include/c++/7/bits/stl_algobase.h":322 81 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 88 [ __first.12_2 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [26 __first+0 S8 A64])) "/usr/include/c++/7/bits/stl_algobase.h":322 81 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg:DI 89 [ _3 ])
                (minus:DI (reg:DI 87 [ __last.11_1 ])
                    (reg:DI 88 [ __first.12_2 ])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/stl_algobase.h":322 274 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 88 [ __first.12_2 ])
        (expr_list:REG_DEAD (reg:DI 87 [ __last.11_1 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 11 10 12 2 (parallel [
            (set (reg:DI 92)
                (ashiftrt:DI (reg:DI 89 [ _3 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/stl_algobase.h":322 547 {*ashrdi3_1}
     (expr_list:REG_DEAD (reg:DI 89 [ _3 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 12 11 13 2 (set (reg:DI 94)
        (const_int -3689348814741910323 [0xcccccccccccccccd])) "/usr/include/c++/7/bits/stl_algobase.h":322 81 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg:DI 93)
                (mult:DI (reg:DI 92)
                    (reg:DI 94)))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/stl_algobase.h":322 329 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 94)
        (expr_list:REG_DEAD (reg:DI 92)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 14 13 28 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [4 __n+0 S8 A64])
        (reg:DI 93)) "/usr/include/c++/7/bits/stl_algobase.h":322 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (nil)))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;;              4 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 28 14 15 3 179 (nil) [1 uses])
(note 15 28 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [4 __n+0 S8 A64])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/stl_algobase.h":322 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 17 16 18 3 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) "/usr/include/c++/7/bits/stl_algobase.h":322 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil))
 -> 31)
;;  succ:       5
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 95 96 97 98
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg/f:DI 95)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [26 __result+0 S8 A64])) "/usr/include/c++/7/bits/stl_algobase.h":324 81 {*movdi_internal}
     (nil))
(insn 20 19 21 4 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [26 __first+0 S8 A64])) "/usr/include/c++/7/bits/stl_algobase.h":324 81 {*movdi_internal}
     (nil))
(insn 21 20 22 4 (set (reg:TI 97)
        (mem:TI (reg/f:DI 96) [49 MEM[(const struct Vertex &)__first_4]+0 S16 A32])) "/usr/include/c++/7/bits/stl_algobase.h":324 80 {*movti_internal}
     (nil))
(insn 22 21 23 4 (set (mem:TI (reg/f:DI 95) [49 *__result_5+0 S16 A32])
        (reg:TI 97)) "/usr/include/c++/7/bits/stl_algobase.h":324 80 {*movti_internal}
     (expr_list:REG_DEAD (reg:TI 97)
        (nil)))
(insn 23 22 24 4 (set (reg:SI 98)
        (mem:SI (plus:DI (reg/f:DI 96)
                (const_int 16 [0x10])) [49 MEM[(const struct Vertex &)__first_4]+16 S4 A32])) "/usr/include/c++/7/bits/stl_algobase.h":324 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 96)
        (nil)))
(insn 24 23 25 4 (set (mem:SI (plus:DI (reg/f:DI 95)
                (const_int 16 [0x10])) [49 *__result_5+16 S4 A32])
        (reg:SI 98)) "/usr/include/c++/7/bits/stl_algobase.h":324 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 98)
        (expr_list:REG_DEAD (reg/f:DI 95)
            (nil))))
(insn 25 24 26 4 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -24 [0xffffffffffffffe8])) [26 __first+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [26 __first+0 S8 A64])
                    (const_int 20 [0x14])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/stl_algobase.h":325 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 26 25 27 4 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -40 [0xffffffffffffffd8])) [26 __result+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [26 __result+0 S8 A64])
                    (const_int 20 [0x14])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/stl_algobase.h":326 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 27 26 43 4 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [4 __n+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [4 __n+0 S8 A64])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/stl_algobase.h":322 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 43 27 44 4 (set (pc)
        (label_ref 28)) "/usr/include/c++/7/bits/stl_algobase.h":322 649 {jump}
     (nil)
 -> 28)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 44 43 31)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (RTL)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 90 91
(code_label 31 44 32 5 178 (nil) [1 uses])
(note 32 31 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 36 5 (set (reg/f:DI 90 [ _17 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [26 __result+0 S8 A64])) "/usr/include/c++/7/bits/stl_algobase.h":328 81 {*movdi_internal}
     (nil))
(insn 36 33 40 5 (set (reg/f:DI 91 [ <retval> ])
        (reg/f:DI 90 [ _17 ])) "/usr/include/c++/7/bits/stl_algobase.h":328 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ _17 ])
        (nil)))
(insn 40 36 41 5 (set (reg/i:DI 0 ax)
        (reg/f:DI 91 [ <retval> ])) "/usr/include/c++/7/bits/stl_algobase.h":329 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ <retval> ])
        (nil)))
(insn 41 40 0 5 (use (reg/i:DI 0 ax)) "/usr/include/c++/7/bits/stl_algobase.h":329 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function constexpr _Tp* std::__addressof(_Tp&) [with _Tp = sf::Vertex] (_ZSt11__addressofIN2sf6VertexEEPT_RS2_, funcdef_no=3826, decl_uid=81701, cgraph_uid=1343, symbol_order=1347)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 14(l0): point = 0
   Insn 13(l0): point = 2
   Insn 9(l0): point = 4
   Insn 6(l0): point = 6
   Insn 2(l0): point = 8
 a0(r88): [3..4]
 a1(r87): [5..6]
Compressing live ranges: from 11 to 4 - 36%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     0    0:r88  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


constexpr _Tp* std::__addressof(_Tp&) [with _Tp = sf::Vertex]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 5 [di] 6 [bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 36{22d,14u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 87 88
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [74 __r+0 S8 A64])
        (reg:DI 5 di [ __r ])) "/usr/include/c++/7/bits/move.h":47 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __r ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 9 2 (set (reg/f:DI 87 [ _2 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [74 __r+0 S8 A64])) "/usr/include/c++/7/bits/move.h":48 81 {*movdi_internal}
     (nil))
(insn 9 6 13 2 (set (reg/f:DI 88 [ <retval> ])
        (reg/f:DI 87 [ _2 ])) "/usr/include/c++/7/bits/move.h":48 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _2 ])
        (nil)))
(insn 13 9 14 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 88 [ <retval> ])) "/usr/include/c++/7/bits/move.h":48 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ <retval> ])
        (nil)))
(insn 14 13 0 2 (use (reg/i:DI 0 ax)) "/usr/include/c++/7/bits/move.h":48 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function constexpr _Tp&& std::forward(typename std::remove_reference<_From>::type&) [with _Tp = sf::Vertex&] (_ZSt7forwardIRN2sf6VertexEEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=3828, decl_uid=81862, cgraph_uid=1344, symbol_order=1348)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 14(l0): point = 0
   Insn 13(l0): point = 2
   Insn 9(l0): point = 4
   Insn 6(l0): point = 6
   Insn 2(l0): point = 8
 a0(r88): [3..4]
 a1(r87): [5..6]
Compressing live ranges: from 11 to 4 - 36%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     0    0:r88  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


constexpr _Tp&& std::forward(typename std::remove_reference<_From>::type&) [with _Tp = sf::Vertex&]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 5 [di] 6 [bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 36{22d,14u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 87 88
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [74 __t+0 S8 A64])
        (reg:DI 5 di [ __t ])) "/usr/include/c++/7/bits/move.h":73 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __t ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 9 2 (set (reg/f:DI 87 [ _2 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [74 __t+0 S8 A64])) "/usr/include/c++/7/bits/move.h":74 81 {*movdi_internal}
     (nil))
(insn 9 6 13 2 (set (reg/f:DI 88 [ <retval> ])
        (reg/f:DI 87 [ _2 ])) "/usr/include/c++/7/bits/move.h":74 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _2 ])
        (nil)))
(insn 13 9 14 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 88 [ <retval> ])) "/usr/include/c++/7/bits/move.h":74 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ <retval> ])
        (nil)))
(insn 14 13 0 2 (use (reg/i:DI 0 ax)) "/usr/include/c++/7/bits/move.h":74 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void std::_Construct(_T1*, _Args&& ...) [with _T1 = sf::Vertex; _Args = {sf::Vertex&}] (_ZSt10_ConstructIN2sf6VertexEJRS1_EEvPT_DpOT0_, funcdef_no=3827, decl_uid=81703, cgraph_uid=1345, symbol_order=1349)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 6 count 6 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 5 4
;; 2 succs { 3 5 }
;; 3 succs { 5 }
;; 5 succs { 4 }
;; 4 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 9.
verify found no changes in insn with uid = 14.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred INT_SSE_REGS, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a3 (r93,l0) best INT_SSE_REGS, allocno INT_SSE_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r92,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r88,l0) best SIREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:32 NO_REX_SSE_REGS:32 SSE_REGS:32 MMX_REGS:47 INT_SSE_REGS:35 ALL_REGS:724 MEM:13
  a1(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a2(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:34 INT_SSE_REGS:26 ALL_REGS:516 MEM:9
  a3(r93,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 INT_SSE_REGS:33 MEM:16
  a4(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a5(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 37(l0): point = 1
   Insn 22(l0): point = 4
   Insn 21(l0): point = 6
   Insn 20(l0): point = 8
   Insn 19(l0): point = 10
   Insn 17(l0): point = 13
   Insn 16(l0): point = 15
   Insn 15(l0): point = 17
   Insn 14(l0): point = 19
   Insn 13(l0): point = 21
   Insn 12(l0): point = 23
   Insn 11(l0): point = 25
   Insn 10(l0): point = 27
   Insn 9(l0): point = 29
   Insn 8(l0): point = 31
   Insn 7(l0): point = 33
   Insn 3(l0): point = 35
   Insn 2(l0): point = 37
 a0(r89): [5..17]
 a1(r94): [5..6]
 a2(r87): [7..27]
 a3(r93 [0]): [9..10]
 a3(r93 [1]): [9..10]
 a4(r88): [24..25]
 a5(r92): [32..33]
Compressing live ranges: from 40 to 8 - 20%
Ranges after the compression:
 a0(r89): [0..3]
 a1(r94): [0..1]
 a2(r87): [2..5]
 a3(r93 [0]): [2..3]
 a3(r93 [1]): [2..3]
 a4(r88): [4..5]
 a5(r92): [6..7]
  regions=1, blocks=6, points=8
    allocnos=6 (big 1), copies=0, conflicts=0, ranges=7
Disposition:
    2:r87  l0     3    4:r88  l0     0    0:r89  l0     2    5:r92  l0     0
    3:r93  l0     0    1:r94  l0     0
+++Costs: overall -4, reg -4, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void std::_Construct(_T1*, _Args&& ...) [with _T1 = sf::Vertex; _Args = {sf::Vertex&}]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d,2u} r1={3d} r2={3d} r4={4d,2u} r5={5d,3u} r6={1d,5u} r7={1d,7u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,4u} r17={3d,1u} r18={2d} r19={2d} r20={1d,9u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,2u} r88={1d,1u} r89={1d,3u} r92={1d,1u} r93={1d,1u} r94={1d,1u} 
;;    total ref usage 215{173d,42u,0e} in 18{16 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 92
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [26 __p+0 S8 A64])
        (reg:DI 5 di [ __p ])) "/usr/include/c++/7/bits/stl_construct.h":74 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __p ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [74 __args#0+0 S8 A64])
        (reg:DI 4 si [ __args#0 ])) "/usr/include/c++/7/bits/stl_construct.h":74 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __args#0 ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [74 __args#0+0 S8 A64])) "/usr/include/c++/7/bits/stl_construct.h":75 81 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg:DI 92)) "/usr/include/c++/7/bits/stl_construct.h":75 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92)
        (nil)))
(call_insn 9 8 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt7forwardIRN2sf6VertexEEOT_RNSt16remove_referenceIS3_E4typeE") [flags 0x3]  <function_decl 0x7f7f8c896b00 forward>) [0 forward S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/stl_construct.h":75 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 87 [ _5 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/stl_construct.h":75 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 88 [ _7 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [26 __p+0 S8 A64])) "/usr/include/c++/7/bits/stl_construct.h":75 81 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 4 si)
        (reg/f:DI 88 [ _7 ])) "/usr/include/c++/7/bits/stl_construct.h":75 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ _7 ])
        (nil)))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (const_int 20 [0x14])) "/usr/include/c++/7/bits/stl_construct.h":75 81 {*movdi_internal}
     (nil))
(call_insn 14 13 15 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZnwmPv") [flags 0x3]  <function_decl 0x7f7f902efa00 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/stl_construct.h":75 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 15 14 16 2 (set (reg/f:DI 89 [ _9 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/stl_construct.h":75 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 16 15 17 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 89 [ _9 ])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/stl_construct.h":75 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 17 16 18 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 36)
            (pc))) "/usr/include/c++/7/bits/stl_construct.h":75 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 36)
;;  succ:       3 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89
;; lr  def 	 93 94
(note 18 17 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 3 (set (reg:TI 93)
        (mem:TI (reg/f:DI 87 [ _5 ]) [49 *_5+0 S16 A32])) 80 {*movti_internal}
     (nil))
(insn 20 19 21 3 (set (mem:TI (reg/f:DI 89 [ _9 ]) [49 MEM[(struct Vertex *)_9]+0 S16 A32])
        (reg:TI 93)) 80 {*movti_internal}
     (expr_list:REG_DEAD (reg:TI 93)
        (nil)))
(insn 21 20 22 3 (set (reg:SI 94)
        (mem:SI (plus:DI (reg/f:DI 87 [ _5 ])
                (const_int 16 [0x10])) [49 *_5+16 S4 A32])) 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _5 ])
        (nil)))
(insn 22 21 36 3 (set (mem:SI (plus:DI (reg/f:DI 89 [ _9 ])
                (const_int 16 [0x10])) [49 MEM[(struct Vertex *)_9]+16 S4 A32])
        (reg:SI 94)) 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 94)
        (expr_list:REG_DEAD (reg/f:DI 89 [ _9 ])
            (nil))))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 4, flags: (RTL)
;;  pred:       2
;;              3 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 36 22 35 5 188 (nil) [1 uses])
(note 35 36 37 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 37 35 31 5 (const_int 0 [0]) "/usr/include/c++/7/bits/stl_construct.h":75 684 {nop}
     (nil))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 1, flags: (RTL)
;;  pred:       5 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 31 37 32 4 185 (nil) [0 uses])
(note 32 31 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = sf::Vertex] (_ZNK9__gnu_cxx13new_allocatorIN2sf6VertexEE8max_sizeEv, funcdef_no=3853, decl_uid=58810, cgraph_uid=1370, symbol_order=1374)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 14(l0): point = 0
   Insn 13(l0): point = 2
   Insn 9(l0): point = 4
   Insn 6(l0): point = 6
   Insn 2(l0): point = 8
 a0(r88): [3..4]
 a1(r87): [5..6]
Compressing live ranges: from 11 to 4 - 36%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     0    0:r88  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


__gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = sf::Vertex]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 5 [di] 6 [bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,3u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 35{22d,13u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 87 88
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [73 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "/usr/include/c++/7/ext/new_allocator.h":129 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 9 2 (set (reg:DI 87 [ _1 ])
        (const_int 922337203685477580 [0xccccccccccccccc])) "/usr/include/c++/7/ext/new_allocator.h":130 81 {*movdi_internal}
     (nil))
(insn 9 6 13 2 (set (reg:DI 88 [ <retval> ])
        (reg:DI 87 [ _1 ])) "/usr/include/c++/7/ext/new_allocator.h":130 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87 [ _1 ])
        (nil)))
(insn 13 9 14 2 (set (reg/i:DI 0 ax)
        (reg:DI 88 [ <retval> ])) "/usr/include/c++/7/ext/new_allocator.h":130 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ <retval> ])
        (nil)))
(insn 14 13 0 2 (use (reg/i:DI 0 ax)) "/usr/include/c++/7/ext/new_allocator.h":130 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const sf::Vertex*; _Container = std::vector<sf::Vertex>] (_ZN9__gnu_cxxneIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_, funcdef_no=3854, decl_uid=81832, cgraph_uid=1371, symbol_order=1375)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 9.
verify found no changes in insn with uid = 14.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r94,l0) best DIREG, allocno GENERAL_REGS
    r93: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r93,l0) best DIREG, allocno GENERAL_REGS
    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r92,l0) best AREG, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:4
  a1(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:6
  a2(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a4(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a5(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a6(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:5
  a7(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 26(l0): point = 0
   Insn 25(l0): point = 2
   Insn 21(l0): point = 4
   Insn 18(l0): point = 6
   Insn 17(l0): point = 8
   Insn 16(l0): point = 10
   Insn 15(l0): point = 12
   Insn 14(l0): point = 14
   Insn 13(l0): point = 16
   Insn 12(l0): point = 18
   Insn 11(l0): point = 20
   Insn 10(l0): point = 22
   Insn 9(l0): point = 24
   Insn 8(l0): point = 26
   Insn 7(l0): point = 28
   Insn 3(l0): point = 30
   Insn 2(l0): point = 32
 a0(r92): [3..4]
 a1(r91): [5..6]
 a2(r90): [9..10]
 a3(r88): [9..20]
 a4(r89): [11..12]
 a5(r94): [17..18]
 a6(r87): [21..22]
 a7(r93): [27..28]
Compressing live ranges: from 35 to 14 - 40%
Ranges after the compression:
 a0(r92): [0..1]
 a1(r91): [2..3]
 a2(r90): [4..5]
 a3(r88): [4..9]
 a4(r89): [6..7]
 a5(r94): [8..9]
 a6(r87): [10..11]
 a7(r93): [12..13]
  regions=1, blocks=3, points=14
    allocnos=8 (big 0), copies=0, conflicts=0, ranges=8
Disposition:
    6:r87  l0     0    3:r88  l0     3    4:r89  l0     0    2:r90  l0     0
    1:r91  l0     0    0:r92  l0     0    7:r93  l0     0    5:r94  l0     0
+++Costs: overall -5, reg -5, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = const sf::Vertex*; _Container = std::vector<sf::Vertex>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={4d,4u} r1={3d} r2={3d} r4={3d,1u} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={3d,1u} r18={2d} r19={2d} r20={1d,6u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} 
;;    total ref usage 205{175d,30u,0e} in 17{15 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93 94
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [75 __lhs+0 S8 A64])
        (reg:DI 5 di [ __lhs ])) "/usr/include/c++/7/bits/stl_iterator.h":880 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __lhs ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [75 __rhs+0 S8 A64])
        (reg:DI 4 si [ __rhs ])) "/usr/include/c++/7/bits/stl_iterator.h":880 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __rhs ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [75 __lhs+0 S8 A64])) "/usr/include/c++/7/bits/stl_iterator.h":883 81 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg:DI 93)) "/usr/include/c++/7/bits/stl_iterator.h":883 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (nil)))
(call_insn 9 8 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEE4baseEv") [flags 0x3]  <function_decl 0x7f7f8ce1ee00 base>) [0 base S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/stl_iterator.h":883 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 87 [ _1 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/stl_iterator.h":883 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 88 [ _2 ])
        (mem/f:DI (reg/f:DI 87 [ _1 ]) [26 *_1+0 S8 A64])) "/usr/include/c++/7/bits/stl_iterator.h":883 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _1 ])
        (nil)))
(insn 12 11 13 2 (set (reg:DI 94)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [75 __rhs+0 S8 A64])) "/usr/include/c++/7/bits/stl_iterator.h":883 81 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg:DI 94)) "/usr/include/c++/7/bits/stl_iterator.h":883 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94)
        (nil)))
(call_insn 14 13 15 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEE4baseEv") [flags 0x3]  <function_decl 0x7f7f8ce1ee00 base>) [0 base S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/stl_iterator.h":883 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg/f:DI 89 [ _3 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/stl_iterator.h":883 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 16 15 17 2 (set (reg/f:DI 90 [ _4 ])
        (mem/f:DI (reg/f:DI 89 [ _3 ]) [26 *_3+0 S8 A64])) "/usr/include/c++/7/bits/stl_iterator.h":883 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ _3 ])
        (nil)))
(insn 17 16 18 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ _2 ])
            (reg/f:DI 90 [ _4 ]))) "/usr/include/c++/7/bits/stl_iterator.h":883 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 90 [ _4 ])
        (expr_list:REG_DEAD (reg/f:DI 88 [ _2 ])
            (nil))))
(insn 18 17 21 2 (set (reg:QI 91 [ _10 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) "/usr/include/c++/7/bits/stl_iterator.h":883 613 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 21 18 25 2 (set (reg:QI 92 [ <retval> ])
        (reg:QI 91 [ _10 ])) "/usr/include/c++/7/bits/stl_iterator.h":883 84 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 91 [ _10 ])
        (nil)))
(insn 25 21 26 2 (set (reg/i:QI 0 ax)
        (reg:QI 92 [ <retval> ])) "/usr/include/c++/7/bits/stl_iterator.h":883 84 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 92 [ <retval> ])
        (nil)))
(insn 26 25 0 2 (use (reg/i:QI 0 ax)) "/usr/include/c++/7/bits/stl_iterator.h":883 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function __gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = const sf::Vertex*; _Container = std::vector<sf::Vertex>] (_ZN9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEppEv, funcdef_no=3855, decl_uid=79277, cgraph_uid=1372, symbol_order=1376)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a3(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:13 NO_REX_SSE_REGS:13 SSE_REGS:13 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a4(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a5(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 19(l0): point = 0
   Insn 18(l0): point = 2
   Insn 14(l0): point = 4
   Insn 11(l0): point = 6
   Insn 10(l0): point = 8
   Insn 9(l0): point = 10
   Insn 8(l0): point = 12
   Insn 7(l0): point = 14
   Insn 6(l0): point = 16
   Insn 2(l0): point = 18
 a0(r90): [3..4]
 a1(r89): [5..6]
 a2(r92): [9..10]
 a3(r88): [9..12]
 a4(r87): [13..14]
 a5(r91): [15..16]
Compressing live ranges: from 21 to 10 - 47%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r89): [2..3]
 a2(r92): [4..5]
 a3(r88): [4..5]
 a4(r87): [6..7]
 a5(r91): [8..9]
  regions=1, blocks=3, points=10
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    4:r87  l0     0    3:r88  l0     1    1:r89  l0     0    0:r90  l0     0
    5:r91  l0     0    2:r92  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = const sf::Vertex*; _Container = std::vector<sf::Vertex>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 5 [di] 6 [bp] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r17={1d} r20={1d,6u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} 
;;    total ref usage 47{27d,20u,0e} in 10{10 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 17 [flags] 87 88 89 90 91 92
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [70 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "/usr/include/c++/7/bits/stl_iterator.h":800 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [70 this+0 S8 A64])) "/usr/include/c++/7/bits/stl_iterator.h":802 81 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (reg/f:DI 91) [26 this_4(D)->_M_current+0 S8 A64])) "/usr/include/c++/7/bits/stl_iterator.h":802 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (nil)))
(insn 8 7 9 2 (parallel [
            (set (reg/f:DI 88 [ _2 ])
                (plus:DI (reg/f:DI 87 [ _1 ])
                    (const_int 20 [0x14])))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/c++/7/bits/stl_iterator.h":802 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _1 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 9 8 10 2 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [70 this+0 S8 A64])) "/usr/include/c++/7/bits/stl_iterator.h":802 81 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (mem/f:DI (reg/f:DI 92) [26 this_4(D)->_M_current+0 S8 A64])
        (reg/f:DI 88 [ _2 ])) "/usr/include/c++/7/bits/stl_iterator.h":802 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92)
        (expr_list:REG_DEAD (reg/f:DI 88 [ _2 ])
            (nil))))
(insn 11 10 14 2 (set (reg/f:DI 89 [ _6 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [70 this+0 S8 A64])) "/usr/include/c++/7/bits/stl_iterator.h":803 81 {*movdi_internal}
     (nil))
(insn 14 11 18 2 (set (reg/f:DI 90 [ <retval> ])
        (reg/f:DI 89 [ _6 ])) "/usr/include/c++/7/bits/stl_iterator.h":803 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ _6 ])
        (nil)))
(insn 18 14 19 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 90 [ <retval> ])) "/usr/include/c++/7/bits/stl_iterator.h":804 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ <retval> ])
        (nil)))
(insn 19 18 0 2 (use (reg/i:DI 0 ax)) "/usr/include/c++/7/bits/stl_iterator.h":804 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function __gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = const sf::Vertex*; _Container = std::vector<sf::Vertex>] (_ZNK9__gnu_cxx17__normal_iteratorIPKN2sf6VertexESt6vectorIS2_SaIS2_EEEdeEv, funcdef_no=3856, decl_uid=79273, cgraph_uid=1373, symbol_order=1377)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 15(l0): point = 0
   Insn 14(l0): point = 2
   Insn 10(l0): point = 4
   Insn 7(l0): point = 6
   Insn 6(l0): point = 8
   Insn 2(l0): point = 10
 a0(r88): [3..4]
 a1(r87): [5..6]
 a2(r89): [7..8]
Compressing live ranges: from 13 to 6 - 46%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
 a2(r89): [4..5]
  regions=1, blocks=3, points=6
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    1:r87  l0     0    0:r88  l0     0    2:r89  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = const sf::Vertex*; _Container = std::vector<sf::Vertex>]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 5 [di] 6 [bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 38{23d,15u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 87 88 89
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [70 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "/usr/include/c++/7/bits/stl_iterator.h":792 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [70 this+0 S8 A64])) "/usr/include/c++/7/bits/stl_iterator.h":793 81 {*movdi_internal}
     (nil))
(insn 7 6 10 2 (set (reg/f:DI 87 [ _3 ])
        (mem/f:DI (reg/f:DI 89) [26 this_2(D)->_M_current+0 S8 A64])) "/usr/include/c++/7/bits/stl_iterator.h":793 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89)
        (nil)))
(insn 10 7 14 2 (set (reg/f:DI 88 [ <retval> ])
        (reg/f:DI 87 [ _3 ])) "/usr/include/c++/7/bits/stl_iterator.h":793 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _3 ])
        (nil)))
(insn 14 10 15 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 88 [ <retval> ])) "/usr/include/c++/7/bits/stl_iterator.h":793 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ <retval> ])
        (nil)))
(insn 15 14 0 2 (use (reg/i:DI 0 ax)) "/usr/include/c++/7/bits/stl_iterator.h":793 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function constexpr _Tp&& std::forward(typename std::remove_reference<_From>::type&) [with _Tp = const sf::Vertex&] (_ZSt7forwardIRKN2sf6VertexEEOT_RNSt16remove_referenceIS4_E4typeE, funcdef_no=3858, decl_uid=81945, cgraph_uid=1374, symbol_order=1378)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best AREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16 NO_REX_SSE_REGS:16 SSE_REGS:16 MMX_REGS:21 INT_SSE_REGS:17 ALL_REGS:308 MEM:4
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 14(l0): point = 0
   Insn 13(l0): point = 2
   Insn 9(l0): point = 4
   Insn 6(l0): point = 6
   Insn 2(l0): point = 8
 a0(r88): [3..4]
 a1(r87): [5..6]
Compressing live ranges: from 11 to 4 - 36%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     0    0:r88  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


constexpr _Tp&& std::forward(typename std::remove_reference<_From>::type&) [with _Tp = const sf::Vertex&]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 5 [di] 6 [bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 36{22d,14u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 87 88
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [74 __t+0 S8 A64])
        (reg:DI 5 di [ __t ])) "/usr/include/c++/7/bits/move.h":73 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __t ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 9 2 (set (reg/f:DI 87 [ _2 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [74 __t+0 S8 A64])) "/usr/include/c++/7/bits/move.h":74 81 {*movdi_internal}
     (nil))
(insn 9 6 13 2 (set (reg/f:DI 88 [ <retval> ])
        (reg/f:DI 87 [ _2 ])) "/usr/include/c++/7/bits/move.h":74 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _2 ])
        (nil)))
(insn 13 9 14 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 88 [ <retval> ])) "/usr/include/c++/7/bits/move.h":74 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ <retval> ])
        (nil)))
(insn 14 13 0 2 (use (reg/i:DI 0 ax)) "/usr/include/c++/7/bits/move.h":74 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void std::_Construct(_T1*, _Args&& ...) [with _T1 = sf::Vertex; _Args = {const sf::Vertex&}] (_ZSt10_ConstructIN2sf6VertexEJRKS1_EEvPT_DpOT0_, funcdef_no=3857, decl_uid=81839, cgraph_uid=1375, symbol_order=1379)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 6 count 6 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 5 4
;; 2 succs { 3 5 }
;; 3 succs { 5 }
;; 5 succs { 4 }
;; 4 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 9.
verify found no changes in insn with uid = 14.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred INT_SSE_REGS, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a3 (r93,l0) best INT_SSE_REGS, allocno INT_SSE_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r92,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r88,l0) best SIREG, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r87,l0) best AREG, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:32 NO_REX_SSE_REGS:32 SSE_REGS:32 MMX_REGS:47 INT_SSE_REGS:35 ALL_REGS:724 MEM:13
  a1(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a2(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:24 NO_REX_SSE_REGS:24 SSE_REGS:24 MMX_REGS:34 INT_SSE_REGS:26 ALL_REGS:516 MEM:9
  a3(r93,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 INT_SSE_REGS:33 MEM:16
  a4(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a5(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 37(l0): point = 1
   Insn 22(l0): point = 4
   Insn 21(l0): point = 6
   Insn 20(l0): point = 8
   Insn 19(l0): point = 10
   Insn 17(l0): point = 13
   Insn 16(l0): point = 15
   Insn 15(l0): point = 17
   Insn 14(l0): point = 19
   Insn 13(l0): point = 21
   Insn 12(l0): point = 23
   Insn 11(l0): point = 25
   Insn 10(l0): point = 27
   Insn 9(l0): point = 29
   Insn 8(l0): point = 31
   Insn 7(l0): point = 33
   Insn 3(l0): point = 35
   Insn 2(l0): point = 37
 a0(r89): [5..17]
 a1(r94): [5..6]
 a2(r87): [7..27]
 a3(r93 [0]): [9..10]
 a3(r93 [1]): [9..10]
 a4(r88): [24..25]
 a5(r92): [32..33]
Compressing live ranges: from 40 to 8 - 20%
Ranges after the compression:
 a0(r89): [0..3]
 a1(r94): [0..1]
 a2(r87): [2..5]
 a3(r93 [0]): [2..3]
 a3(r93 [1]): [2..3]
 a4(r88): [4..5]
 a5(r92): [6..7]
  regions=1, blocks=6, points=8
    allocnos=6 (big 1), copies=0, conflicts=0, ranges=7
Disposition:
    2:r87  l0     3    4:r88  l0     0    0:r89  l0     2    5:r92  l0     0
    3:r93  l0     0    1:r94  l0     0
+++Costs: overall -4, reg -4, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void std::_Construct(_T1*, _Args&& ...) [with _T1 = sf::Vertex; _Args = {const sf::Vertex&}]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d,2u} r1={3d} r2={3d} r4={4d,2u} r5={5d,3u} r6={1d,5u} r7={1d,7u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,4u} r17={3d,1u} r18={2d} r19={2d} r20={1d,9u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,2u} r88={1d,1u} r89={1d,3u} r92={1d,1u} r93={1d,1u} r94={1d,1u} 
;;    total ref usage 215{173d,42u,0e} in 18{16 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 92
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [26 __p+0 S8 A64])
        (reg:DI 5 di [ __p ])) "/usr/include/c++/7/bits/stl_construct.h":74 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ __p ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [74 __args#0+0 S8 A64])
        (reg:DI 4 si [ __args#0 ])) "/usr/include/c++/7/bits/stl_construct.h":74 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ __args#0 ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [74 __args#0+0 S8 A64])) "/usr/include/c++/7/bits/stl_construct.h":75 81 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg:DI 92)) "/usr/include/c++/7/bits/stl_construct.h":75 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92)
        (nil)))
(call_insn 9 8 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZSt7forwardIRKN2sf6VertexEEOT_RNSt16remove_referenceIS4_E4typeE") [flags 0x3]  <function_decl 0x7f7f8c8b9e00 forward>) [0 forward S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/stl_construct.h":75 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 87 [ _5 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/stl_construct.h":75 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 88 [ _7 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [26 __p+0 S8 A64])) "/usr/include/c++/7/bits/stl_construct.h":75 81 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 4 si)
        (reg/f:DI 88 [ _7 ])) "/usr/include/c++/7/bits/stl_construct.h":75 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ _7 ])
        (nil)))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (const_int 20 [0x14])) "/usr/include/c++/7/bits/stl_construct.h":75 81 {*movdi_internal}
     (nil))
(call_insn 14 13 15 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZnwmPv") [flags 0x3]  <function_decl 0x7f7f902efa00 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/stl_construct.h":75 666 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 15 14 16 2 (set (reg/f:DI 89 [ _9 ])
        (reg:DI 0 ax)) "/usr/include/c++/7/bits/stl_construct.h":75 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 16 15 17 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 89 [ _9 ])
            (const_int 0 [0]))) "/usr/include/c++/7/bits/stl_construct.h":75 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 17 16 18 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 36)
            (pc))) "/usr/include/c++/7/bits/stl_construct.h":75 617 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 36)
;;  succ:       3 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89
;; lr  def 	 93 94
(note 18 17 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 3 (set (reg:TI 93)
        (mem:TI (reg/f:DI 87 [ _5 ]) [49 *_5+0 S16 A32])) 80 {*movti_internal}
     (nil))
(insn 20 19 21 3 (set (mem:TI (reg/f:DI 89 [ _9 ]) [49 MEM[(struct Vertex *)_9]+0 S16 A32])
        (reg:TI 93)) 80 {*movti_internal}
     (expr_list:REG_DEAD (reg:TI 93)
        (nil)))
(insn 21 20 22 3 (set (reg:SI 94)
        (mem:SI (plus:DI (reg/f:DI 87 [ _5 ])
                (const_int 16 [0x10])) [49 *_5+16 S4 A32])) 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _5 ])
        (nil)))
(insn 22 21 36 3 (set (mem:SI (plus:DI (reg/f:DI 89 [ _9 ])
                (const_int 16 [0x10])) [49 MEM[(struct Vertex *)_9]+16 S4 A32])
        (reg:SI 94)) 82 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 94)
        (expr_list:REG_DEAD (reg/f:DI 89 [ _9 ])
            (nil))))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 4, flags: (RTL)
;;  pred:       2
;;              3 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 36 22 35 5 202 (nil) [1 uses])
(note 35 36 37 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 37 35 31 5 (const_int 0 [0]) "/usr/include/c++/7/bits/stl_construct.h":75 684 {nop}
     (nil))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 1, flags: (RTL)
;;  pred:       5 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 31 37 32 4 199 (nil) [0 uses])
(note 32 31 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function sf::RectangleShape::~RectangleShape() (_ZN2sf14RectangleShapeD2Ev, funcdef_no=3870, decl_uid=71799, cgraph_uid=1387, symbol_order=1478)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 14.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best DIREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a2(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a3(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a4(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12 NO_REX_SSE_REGS:12 SSE_REGS:12 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 17(l0): point = 0
   Insn 14(l0): point = 2
   Insn 13(l0): point = 4
   Insn 12(l0): point = 6
   Insn 11(l0): point = 8
   Insn 10(l0): point = 10
   Insn 9(l0): point = 12
   Insn 8(l0): point = 14
   Insn 7(l0): point = 16
   Insn 6(l0): point = 18
   Insn 2(l0): point = 20
 a0(r89): [5..6]
 a1(r91): [9..10]
 a2(r88): [9..12]
 a3(r90): [15..16]
 a4(r87): [15..18]
Compressing live ranges: from 23 to 6 - 26%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r91): [2..3]
 a2(r88): [2..3]
 a3(r90): [4..5]
 a4(r87): [4..5]
  regions=1, blocks=3, points=6
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    4:r87  l0     1    2:r88  l0     1    0:r89  l0     0    3:r90  l0     0
    1:r91  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


sf::RectangleShape::~RectangleShape()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,6u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 116{97d,19u,0e} in 11{10 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [36 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "/usr/include/SFML/Graphics/RectangleShape.hpp":41 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 87 [ _1 ])
        (const:DI (plus:DI (symbol_ref:DI ("_ZTVN2sf14RectangleShapeE") [flags 0x40]  <var_decl 0x7f7f8d104510 _ZTVN2sf14RectangleShapeE>)
                (const_int 16 [0x10])))) "/usr/include/SFML/Graphics/RectangleShape.hpp":41 81 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [36 this+0 S8 A64])) "/usr/include/SFML/Graphics/RectangleShape.hpp":41 81 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (mem/f:DI (reg/f:DI 90) [2 this_5(D)->D.71808.D.59982._vptr.Drawable+0 S8 A64])
        (reg/f:DI 87 [ _1 ])) "/usr/include/SFML/Graphics/RectangleShape.hpp":41 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90)
        (expr_list:REG_DEAD (reg/f:DI 87 [ _1 ])
            (nil))))
(insn 9 8 10 2 (set (reg/f:DI 88 [ _2 ])
        (const:DI (plus:DI (symbol_ref:DI ("_ZTVN2sf14RectangleShapeE") [flags 0x40]  <var_decl 0x7f7f8d104510 _ZTVN2sf14RectangleShapeE>)
                (const_int 72 [0x48])))) "/usr/include/SFML/Graphics/RectangleShape.hpp":41 81 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [36 this+0 S8 A64])) "/usr/include/SFML/Graphics/RectangleShape.hpp":41 81 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (mem/f:DI (plus:DI (reg/f:DI 91)
                (const_int 8 [0x8])) [2 this_5(D)->D.71808.D.59983._vptr.Transformable+0 S8 A64])
        (reg/f:DI 88 [ _2 ])) "/usr/include/SFML/Graphics/RectangleShape.hpp":41 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (expr_list:REG_DEAD (reg/f:DI 88 [ _2 ])
            (nil))))
(insn 12 11 13 2 (set (reg/f:DI 89 [ _3 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [36 this+0 S8 A64])) "/usr/include/SFML/Graphics/RectangleShape.hpp":41 81 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg/f:DI 89 [ _3 ])) "/usr/include/SFML/Graphics/RectangleShape.hpp":41 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ _3 ])
        (nil)))
(call_insn 14 13 17 2 (call (mem:QI (symbol_ref:DI ("_ZN2sf5ShapeD2Ev") [flags 0x41]  <function_decl 0x7f7f8da11500 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) "/usr/include/SFML/Graphics/RectangleShape.hpp":41 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 17 14 0 2 (const_int 0 [0]) "/usr/include/SFML/Graphics/RectangleShape.hpp":41 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function virtual sf::RectangleShape::~RectangleShape() (_ZN2sf14RectangleShapeD0Ev, funcdef_no=3872, decl_uid=71793, cgraph_uid=1389, symbol_order=1480)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best DIREG, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 12(l0): point = 0
   Insn 11(l0): point = 2
   Insn 10(l0): point = 4
   Insn 9(l0): point = 6
   Insn 8(l0): point = 8
   Insn 7(l0): point = 10
   Insn 6(l0): point = 12
   Insn 2(l0): point = 14
 a0(r88): [3..6]
 a1(r87): [11..12]
Compressing live ranges: from 17 to 4 - 23%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r87): [2..3]
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r87  l0     0    0:r88  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


virtual sf::RectangleShape::~RectangleShape()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={4d,1u} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,5u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 186{168d,18u,0e} in 8{6 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [36 this+0 S8 A64])
        (reg:DI 5 di [ this ])) "/usr/include/SFML/Graphics/RectangleShape.hpp":41 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [36 this+0 S8 A64])) "/usr/include/SFML/Graphics/RectangleShape.hpp":41 81 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 87)) "/usr/include/SFML/Graphics/RectangleShape.hpp":41 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(call_insn 8 7 9 2 (call (mem:QI (symbol_ref/i:DI ("_ZN2sf14RectangleShapeD1Ev") [flags 0x3]  <function_decl 0x7f7f8d0f9c00 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) "/usr/include/SFML/Graphics/RectangleShape.hpp":41 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 10 2 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [36 this+0 S8 A64])) "/usr/include/SFML/Graphics/RectangleShape.hpp":41 81 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (const_int 344 [0x158])) "/usr/include/SFML/Graphics/RectangleShape.hpp":41 81 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg:DI 88)) "/usr/include/SFML/Graphics/RectangleShape.hpp":41 81 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(call_insn 12 11 0 2 (call (mem:QI (symbol_ref:DI ("_ZdlPvm") [flags 0x41]  <function_decl 0x7f7f904f2100 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) "/usr/include/SFML/Graphics/RectangleShape.hpp":41 655 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

